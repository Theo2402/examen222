{"ast":null,"code":"export const streamChunk=function*(chunk,chunkSize){let len=chunk.byteLength;if(!chunkSize||len<chunkSize){yield chunk;return;}let pos=0;let end;while(pos<len){end=pos+chunkSize;yield chunk.slice(pos,end);pos=end;}};export const readBytes=async function*(iterable,chunkSize,encode){for await(const chunk of iterable){yield*streamChunk(ArrayBuffer.isView(chunk)?chunk:await encode(String(chunk)),chunkSize);}};export const trackStream=(stream,chunkSize,onProgress,onFinish,encode)=>{const iterator=readBytes(stream,chunkSize,encode);let bytes=0;return new ReadableStream({type:'bytes',async pull(controller){const{done,value}=await iterator.next();if(done){controller.close();onFinish();return;}let len=value.byteLength;onProgress&&onProgress(bytes+=len);controller.enqueue(new Uint8Array(value));},cancel(reason){onFinish(reason);return iterator.return();}},{highWaterMark:2});};","map":{"version":3,"names":["streamChunk","chunk","chunkSize","len","byteLength","pos","end","slice","readBytes","iterable","encode","ArrayBuffer","isView","String","trackStream","stream","onProgress","onFinish","iterator","bytes","ReadableStream","type","pull","controller","done","value","next","close","enqueue","Uint8Array","cancel","reason","return","highWaterMark"],"sources":["/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/axios/lib/helpers/trackStream.js"],"sourcesContent":["\n\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n\n  return new ReadableStream({\n    type: 'bytes',\n\n    async pull(controller) {\n      const {done, value} = await iterator.next();\n\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n"],"mappings":"AAEA,MAAO,MAAM,CAAAA,WAAW,CAAG,SAAAA,CAAWC,KAAK,CAAEC,SAAS,CAAE,CACtD,GAAI,CAAAC,GAAG,CAAGF,KAAK,CAACG,UAAU,CAE1B,GAAI,CAACF,SAAS,EAAIC,GAAG,CAAGD,SAAS,CAAE,CACjC,KAAM,CAAAD,KAAK,CACX,OACF,CAEA,GAAI,CAAAI,GAAG,CAAG,CAAC,CACX,GAAI,CAAAC,GAAG,CAEP,MAAOD,GAAG,CAAGF,GAAG,CAAE,CAChBG,GAAG,CAAGD,GAAG,CAAGH,SAAS,CACrB,KAAM,CAAAD,KAAK,CAACM,KAAK,CAACF,GAAG,CAAEC,GAAG,CAAC,CAC3BD,GAAG,CAAGC,GAAG,CACX,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,SAAS,CAAG,eAAAA,CAAiBC,QAAQ,CAAEP,SAAS,CAAEQ,MAAM,CAAE,CACrE,UAAW,KAAM,CAAAT,KAAK,GAAI,CAAAQ,QAAQ,CAAE,CAClC,MAAOT,WAAW,CAACW,WAAW,CAACC,MAAM,CAACX,KAAK,CAAC,CAAGA,KAAK,CAAI,KAAM,CAAAS,MAAM,CAACG,MAAM,CAACZ,KAAK,CAAC,CAAE,CAAEC,SAAS,CAAC,CAClG,CACF,CAAC,CAED,MAAO,MAAM,CAAAY,WAAW,CAAGA,CAACC,MAAM,CAAEb,SAAS,CAAEc,UAAU,CAAEC,QAAQ,CAAEP,MAAM,GAAK,CAC9E,KAAM,CAAAQ,QAAQ,CAAGV,SAAS,CAACO,MAAM,CAAEb,SAAS,CAAEQ,MAAM,CAAC,CAErD,GAAI,CAAAS,KAAK,CAAG,CAAC,CAEb,MAAO,IAAI,CAAAC,cAAc,CAAC,CACxBC,IAAI,CAAE,OAAO,CAEb,KAAM,CAAAC,IAAIA,CAACC,UAAU,CAAE,CACrB,KAAM,CAACC,IAAI,CAAEC,KAAK,CAAC,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAE3C,GAAIF,IAAI,CAAE,CACRD,UAAU,CAACI,KAAK,CAAC,CAAC,CAClBV,QAAQ,CAAC,CAAC,CACV,OACF,CAEA,GAAI,CAAAd,GAAG,CAAGsB,KAAK,CAACrB,UAAU,CAC1BY,UAAU,EAAIA,UAAU,CAACG,KAAK,EAAIhB,GAAG,CAAC,CACtCoB,UAAU,CAACK,OAAO,CAAC,GAAI,CAAAC,UAAU,CAACJ,KAAK,CAAC,CAAC,CAC3C,CAAC,CACDK,MAAMA,CAACC,MAAM,CAAE,CACbd,QAAQ,CAACc,MAAM,CAAC,CAChB,MAAO,CAAAb,QAAQ,CAACc,MAAM,CAAC,CAAC,CAC1B,CACF,CAAC,CAAE,CACDC,aAAa,CAAE,CACjB,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}