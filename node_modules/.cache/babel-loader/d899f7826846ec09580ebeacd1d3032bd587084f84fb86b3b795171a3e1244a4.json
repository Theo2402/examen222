{"ast":null,"code":"/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */import{r as requestAnimFrame,a as resolve,e as effects,c as color,i as isObject,d as defaults,b as isArray,v as valueOrDefault,u as unlistenArrayEvents,l as listenArrayEvents,f as resolveObjectKey,g as isNumberFinite,h as defined,s as sign,j as createContext,k as isNullOrUndef,_ as _arrayUnique,t as toRadians,m as toPercentage,n as toDimension,T as TAU,o as formatNumber,p as _angleBetween,H as HALF_PI,P as PI,q as _getStartAndCountOfVisiblePoints,w as _scaleRangesChanged,x as isNumber,y as _parseObjectDataRadialScale,z as getRelativePosition,A as _rlookupByKey,B as _lookupByKey,C as _isPointInArea,D as getAngleFromPoint,E as toPadding,F as each,G as getMaximumSize,I as _getParentNode,J as readUsedSize,K as supportsEventListenerOptions,L as throttled,M as _isDomSupported,N as _factorize,O as finiteOrDefault,Q as callback,R as _addGrace,S as _limitValue,U as toDegrees,V as _measureText,W as _int16Range,X as _alignPixel,Y as clipArea,Z as renderText,$ as unclipArea,a0 as toFont,a1 as _toLeftRightCenter,a2 as _alignStartEnd,a3 as overrides,a4 as merge,a5 as _capitalize,a6 as descriptors,a7 as isFunction,a8 as _attachContext,a9 as _createResolver,aa as _descriptors,ab as mergeIf,ac as uid,ad as debounce,ae as retinaScale,af as clearCanvas,ag as setsEqual,ah as _elementsEqual,ai as _isClickEvent,aj as _isBetween,ak as _readValueToProps,al as _updateBezierControlPoints,am as _computeSegments,an as _boundSegments,ao as _steppedInterpolation,ap as _bezierInterpolation,aq as _pointInLine,ar as _steppedLineTo,as as _bezierCurveTo,at as drawPoint,au as addRoundedRectPath,av as toTRBL,aw as toTRBLCorners,ax as _boundSegment,ay as _normalizeAngle,az as getRtlAdapter,aA as overrideTextDirection,aB as _textX,aC as restoreTextDirection,aD as drawPointLegend,aE as distanceBetweenPoints,aF as noop,aG as _setMinAndMaxByKey,aH as niceNum,aI as almostWhole,aJ as almostEquals,aK as _decimalPlaces,aL as Ticks,aM as log10,aN as _longestText,aO as _filterBetween,aP as _lookup}from'./chunks/helpers.segment.js';import'@kurkle/color';class Animator{constructor(){this._request=null;this._charts=new Map();this._running=false;this._lastDate=undefined;}_notify(chart,anims,date,type){const callbacks=anims.listeners[type];const numSteps=anims.duration;callbacks.forEach(fn=>fn({chart,initial:anims.initial,numSteps,currentStep:Math.min(date-anims.start,numSteps)}));}_refresh(){if(this._request){return;}this._running=true;this._request=requestAnimFrame.call(window,()=>{this._update();this._request=null;if(this._running){this._refresh();}});}_update(){let date=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Date.now();let remaining=0;this._charts.forEach((anims,chart)=>{if(!anims.running||!anims.items.length){return;}const items=anims.items;let i=items.length-1;let draw=false;let item;for(;i>=0;--i){item=items[i];if(item._active){if(item._total>anims.duration){anims.duration=item._total;}item.tick(date);draw=true;}else{items[i]=items[items.length-1];items.pop();}}if(draw){chart.draw();this._notify(chart,anims,date,'progress');}if(!items.length){anims.running=false;this._notify(chart,anims,date,'complete');anims.initial=false;}remaining+=items.length;});this._lastDate=date;if(remaining===0){this._running=false;}}_getAnims(chart){const charts=this._charts;let anims=charts.get(chart);if(!anims){anims={running:false,initial:true,items:[],listeners:{complete:[],progress:[]}};charts.set(chart,anims);}return anims;}listen(chart,event,cb){this._getAnims(chart).listeners[event].push(cb);}add(chart,items){if(!items||!items.length){return;}this._getAnims(chart).items.push(...items);}has(chart){return this._getAnims(chart).items.length>0;}start(chart){const anims=this._charts.get(chart);if(!anims){return;}anims.running=true;anims.start=Date.now();anims.duration=anims.items.reduce((acc,cur)=>Math.max(acc,cur._duration),0);this._refresh();}running(chart){if(!this._running){return false;}const anims=this._charts.get(chart);if(!anims||!anims.running||!anims.items.length){return false;}return true;}stop(chart){const anims=this._charts.get(chart);if(!anims||!anims.items.length){return;}const items=anims.items;let i=items.length-1;for(;i>=0;--i){items[i].cancel();}anims.items=[];this._notify(chart,anims,Date.now(),'complete');}remove(chart){return this._charts.delete(chart);}}var animator=/* #__PURE__ */new Animator();const transparent='transparent';const interpolators={boolean(from,to,factor){return factor>0.5?to:from;},color(from,to,factor){const c0=color(from||transparent);const c1=c0.valid&&color(to||transparent);return c1&&c1.valid?c1.mix(c0,factor).hexString():to;},number(from,to,factor){return from+(to-from)*factor;}};class Animation{constructor(cfg,target,prop,to){const currentValue=target[prop];to=resolve([cfg.to,to,currentValue,cfg.from]);const from=resolve([cfg.from,currentValue,to]);this._active=true;this._fn=cfg.fn||interpolators[cfg.type||typeof from];this._easing=effects[cfg.easing]||effects.linear;this._start=Math.floor(Date.now()+(cfg.delay||0));this._duration=this._total=Math.floor(cfg.duration);this._loop=!!cfg.loop;this._target=target;this._prop=prop;this._from=from;this._to=to;this._promises=undefined;}active(){return this._active;}update(cfg,to,date){if(this._active){this._notify(false);const currentValue=this._target[this._prop];const elapsed=date-this._start;const remain=this._duration-elapsed;this._start=date;this._duration=Math.floor(Math.max(remain,cfg.duration));this._total+=elapsed;this._loop=!!cfg.loop;this._to=resolve([cfg.to,to,currentValue,cfg.from]);this._from=resolve([cfg.from,currentValue,to]);}}cancel(){if(this._active){this.tick(Date.now());this._active=false;this._notify(false);}}tick(date){const elapsed=date-this._start;const duration=this._duration;const prop=this._prop;const from=this._from;const loop=this._loop;const to=this._to;let factor;this._active=from!==to&&(loop||elapsed<duration);if(!this._active){this._target[prop]=to;this._notify(true);return;}if(elapsed<0){this._target[prop]=from;return;}factor=elapsed/duration%2;factor=loop&&factor>1?2-factor:factor;factor=this._easing(Math.min(1,Math.max(0,factor)));this._target[prop]=this._fn(from,to,factor);}wait(){const promises=this._promises||(this._promises=[]);return new Promise((res,rej)=>{promises.push({res,rej});});}_notify(resolved){const method=resolved?'res':'rej';const promises=this._promises||[];for(let i=0;i<promises.length;i++){promises[i][method]();}}}class Animations{constructor(chart,config){this._chart=chart;this._properties=new Map();this.configure(config);}configure(config){if(!isObject(config)){return;}const animationOptions=Object.keys(defaults.animation);const animatedProps=this._properties;Object.getOwnPropertyNames(config).forEach(key=>{const cfg=config[key];if(!isObject(cfg)){return;}const resolved={};for(const option of animationOptions){resolved[option]=cfg[option];}(isArray(cfg.properties)&&cfg.properties||[key]).forEach(prop=>{if(prop===key||!animatedProps.has(prop)){animatedProps.set(prop,resolved);}});});}_animateOptions(target,values){const newOptions=values.options;const options=resolveTargetOptions(target,newOptions);if(!options){return[];}const animations=this._createAnimations(options,newOptions);if(newOptions.$shared){awaitAll(target.options.$animations,newOptions).then(()=>{target.options=newOptions;},()=>{});}return animations;}_createAnimations(target,values){const animatedProps=this._properties;const animations=[];const running=target.$animations||(target.$animations={});const props=Object.keys(values);const date=Date.now();let i;for(i=props.length-1;i>=0;--i){const prop=props[i];if(prop.charAt(0)==='$'){continue;}if(prop==='options'){animations.push(...this._animateOptions(target,values));continue;}const value=values[prop];let animation=running[prop];const cfg=animatedProps.get(prop);if(animation){if(cfg&&animation.active()){animation.update(cfg,value,date);continue;}else{animation.cancel();}}if(!cfg||!cfg.duration){target[prop]=value;continue;}running[prop]=animation=new Animation(cfg,target,prop,value);animations.push(animation);}return animations;}update(target,values){if(this._properties.size===0){Object.assign(target,values);return;}const animations=this._createAnimations(target,values);if(animations.length){animator.add(this._chart,animations);return true;}}}function awaitAll(animations,properties){const running=[];const keys=Object.keys(properties);for(let i=0;i<keys.length;i++){const anim=animations[keys[i]];if(anim&&anim.active()){running.push(anim.wait());}}return Promise.all(running);}function resolveTargetOptions(target,newOptions){if(!newOptions){return;}let options=target.options;if(!options){target.options=newOptions;return;}if(options.$shared){target.options=options=Object.assign({},options,{$shared:false,$animations:{}});}return options;}function scaleClip(scale,allowedOverflow){const opts=scale&&scale.options||{};const reverse=opts.reverse;const min=opts.min===undefined?allowedOverflow:0;const max=opts.max===undefined?allowedOverflow:0;return{start:reverse?max:min,end:reverse?min:max};}function defaultClip(xScale,yScale,allowedOverflow){if(allowedOverflow===false){return false;}const x=scaleClip(xScale,allowedOverflow);const y=scaleClip(yScale,allowedOverflow);return{top:y.end,right:x.end,bottom:y.start,left:x.start};}function toClip(value){let t,r,b,l;if(isObject(value)){t=value.top;r=value.right;b=value.bottom;l=value.left;}else{t=r=b=l=value;}return{top:t,right:r,bottom:b,left:l,disabled:value===false};}function getSortedDatasetIndices(chart,filterVisible){const keys=[];const metasets=chart._getSortedDatasetMetas(filterVisible);let i,ilen;for(i=0,ilen=metasets.length;i<ilen;++i){keys.push(metasets[i].index);}return keys;}function applyStack(stack,value,dsIndex){let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};const keys=stack.keys;const singleMode=options.mode==='single';let i,ilen,datasetIndex,otherValue;if(value===null){return;}for(i=0,ilen=keys.length;i<ilen;++i){datasetIndex=+keys[i];if(datasetIndex===dsIndex){if(options.all){continue;}break;}otherValue=stack.values[datasetIndex];if(isNumberFinite(otherValue)&&(singleMode||value===0||sign(value)===sign(otherValue))){value+=otherValue;}}return value;}function convertObjectDataToArray(data,meta){const{iScale,vScale}=meta;const iAxisKey=iScale.axis==='x'?'x':'y';const vAxisKey=vScale.axis==='x'?'x':'y';const keys=Object.keys(data);const adata=new Array(keys.length);let i,ilen,key;for(i=0,ilen=keys.length;i<ilen;++i){key=keys[i];adata[i]={[iAxisKey]:key,[vAxisKey]:data[key]};}return adata;}function isStacked(scale,meta){const stacked=scale&&scale.options.stacked;return stacked||stacked===undefined&&meta.stack!==undefined;}function getStackKey(indexScale,valueScale,meta){return\"\".concat(indexScale.id,\".\").concat(valueScale.id,\".\").concat(meta.stack||meta.type);}function getUserBounds(scale){const{min,max,minDefined,maxDefined}=scale.getUserBounds();return{min:minDefined?min:Number.NEGATIVE_INFINITY,max:maxDefined?max:Number.POSITIVE_INFINITY};}function getOrCreateStack(stacks,stackKey,indexValue){const subStack=stacks[stackKey]||(stacks[stackKey]={});return subStack[indexValue]||(subStack[indexValue]={});}function getLastIndexInStack(stack,vScale,positive,type){for(const meta of vScale.getMatchingVisibleMetas(type).reverse()){const value=stack[meta.index];if(positive&&value>0||!positive&&value<0){return meta.index;}}return null;}function updateStacks(controller,parsed){const{chart,_cachedMeta:meta}=controller;const stacks=chart._stacks||(chart._stacks={});const{iScale,vScale,index:datasetIndex}=meta;const iAxis=iScale.axis;const vAxis=vScale.axis;const key=getStackKey(iScale,vScale,meta);const ilen=parsed.length;let stack;for(let i=0;i<ilen;++i){const item=parsed[i];const{[iAxis]:index,[vAxis]:value}=item;const itemStacks=item._stacks||(item._stacks={});stack=itemStacks[vAxis]=getOrCreateStack(stacks,key,index);stack[datasetIndex]=value;stack._top=getLastIndexInStack(stack,vScale,true,meta.type);stack._bottom=getLastIndexInStack(stack,vScale,false,meta.type);const visualValues=stack._visualValues||(stack._visualValues={});visualValues[datasetIndex]=value;}}function getFirstScaleId(chart,axis){const scales=chart.scales;return Object.keys(scales).filter(key=>scales[key].axis===axis).shift();}function createDatasetContext(parent,index){return createContext(parent,{active:false,dataset:undefined,datasetIndex:index,index,mode:'default',type:'dataset'});}function createDataContext(parent,index,element){return createContext(parent,{active:false,dataIndex:index,parsed:undefined,raw:undefined,element,index,mode:'default',type:'data'});}function clearStacks(meta,items){const datasetIndex=meta.controller.index;const axis=meta.vScale&&meta.vScale.axis;if(!axis){return;}items=items||meta._parsed;for(const parsed of items){const stacks=parsed._stacks;if(!stacks||stacks[axis]===undefined||stacks[axis][datasetIndex]===undefined){return;}delete stacks[axis][datasetIndex];if(stacks[axis]._visualValues!==undefined&&stacks[axis]._visualValues[datasetIndex]!==undefined){delete stacks[axis]._visualValues[datasetIndex];}}}const isDirectUpdateMode=mode=>mode==='reset'||mode==='none';const cloneIfNotShared=(cached,shared)=>shared?cached:Object.assign({},cached);const createStack=(canStack,meta,chart)=>canStack&&!meta.hidden&&meta._stacked&&{keys:getSortedDatasetIndices(chart,true),values:null};class DatasetController{constructor(chart,datasetIndex){this.chart=chart;this._ctx=chart.ctx;this.index=datasetIndex;this._cachedDataOpts={};this._cachedMeta=this.getMeta();this._type=this._cachedMeta.type;this.options=undefined;this._parsing=false;this._data=undefined;this._objectData=undefined;this._sharedOptions=undefined;this._drawStart=undefined;this._drawCount=undefined;this.enableOptionSharing=false;this.supportsDecimation=false;this.$context=undefined;this._syncList=[];this.datasetElementType=new.target.datasetElementType;this.dataElementType=new.target.dataElementType;this.initialize();}initialize(){const meta=this._cachedMeta;this.configure();this.linkScales();meta._stacked=isStacked(meta.vScale,meta);this.addElements();if(this.options.fill&&!this.chart.isPluginEnabled('filler')){console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");}}updateIndex(datasetIndex){if(this.index!==datasetIndex){clearStacks(this._cachedMeta);}this.index=datasetIndex;}linkScales(){const chart=this.chart;const meta=this._cachedMeta;const dataset=this.getDataset();const chooseId=(axis,x,y,r)=>axis==='x'?x:axis==='r'?r:y;const xid=meta.xAxisID=valueOrDefault(dataset.xAxisID,getFirstScaleId(chart,'x'));const yid=meta.yAxisID=valueOrDefault(dataset.yAxisID,getFirstScaleId(chart,'y'));const rid=meta.rAxisID=valueOrDefault(dataset.rAxisID,getFirstScaleId(chart,'r'));const indexAxis=meta.indexAxis;const iid=meta.iAxisID=chooseId(indexAxis,xid,yid,rid);const vid=meta.vAxisID=chooseId(indexAxis,yid,xid,rid);meta.xScale=this.getScaleForId(xid);meta.yScale=this.getScaleForId(yid);meta.rScale=this.getScaleForId(rid);meta.iScale=this.getScaleForId(iid);meta.vScale=this.getScaleForId(vid);}getDataset(){return this.chart.data.datasets[this.index];}getMeta(){return this.chart.getDatasetMeta(this.index);}getScaleForId(scaleID){return this.chart.scales[scaleID];}_getOtherScale(scale){const meta=this._cachedMeta;return scale===meta.iScale?meta.vScale:meta.iScale;}reset(){this._update('reset');}_destroy(){const meta=this._cachedMeta;if(this._data){unlistenArrayEvents(this._data,this);}if(meta._stacked){clearStacks(meta);}}_dataCheck(){const dataset=this.getDataset();const data=dataset.data||(dataset.data=[]);const _data=this._data;if(isObject(data)){const meta=this._cachedMeta;this._data=convertObjectDataToArray(data,meta);}else if(_data!==data){if(_data){unlistenArrayEvents(_data,this);const meta=this._cachedMeta;clearStacks(meta);meta._parsed=[];}if(data&&Object.isExtensible(data)){listenArrayEvents(data,this);}this._syncList=[];this._data=data;}}addElements(){const meta=this._cachedMeta;this._dataCheck();if(this.datasetElementType){meta.dataset=new this.datasetElementType();}}buildOrUpdateElements(resetNewElements){const meta=this._cachedMeta;const dataset=this.getDataset();let stackChanged=false;this._dataCheck();const oldStacked=meta._stacked;meta._stacked=isStacked(meta.vScale,meta);if(meta.stack!==dataset.stack){stackChanged=true;clearStacks(meta);meta.stack=dataset.stack;}this._resyncElements(resetNewElements);if(stackChanged||oldStacked!==meta._stacked){updateStacks(this,meta._parsed);}}configure(){const config=this.chart.config;const scopeKeys=config.datasetScopeKeys(this._type);const scopes=config.getOptionScopes(this.getDataset(),scopeKeys,true);this.options=config.createResolver(scopes,this.getContext());this._parsing=this.options.parsing;this._cachedDataOpts={};}parse(start,count){const{_cachedMeta:meta,_data:data}=this;const{iScale,_stacked}=meta;const iAxis=iScale.axis;let sorted=start===0&&count===data.length?true:meta._sorted;let prev=start>0&&meta._parsed[start-1];let i,cur,parsed;if(this._parsing===false){meta._parsed=data;meta._sorted=true;parsed=data;}else{if(isArray(data[start])){parsed=this.parseArrayData(meta,data,start,count);}else if(isObject(data[start])){parsed=this.parseObjectData(meta,data,start,count);}else{parsed=this.parsePrimitiveData(meta,data,start,count);}const isNotInOrderComparedToPrev=()=>cur[iAxis]===null||prev&&cur[iAxis]<prev[iAxis];for(i=0;i<count;++i){meta._parsed[i+start]=cur=parsed[i];if(sorted){if(isNotInOrderComparedToPrev()){sorted=false;}prev=cur;}}meta._sorted=sorted;}if(_stacked){updateStacks(this,parsed);}}parsePrimitiveData(meta,data,start,count){const{iScale,vScale}=meta;const iAxis=iScale.axis;const vAxis=vScale.axis;const labels=iScale.getLabels();const singleScale=iScale===vScale;const parsed=new Array(count);let i,ilen,index;for(i=0,ilen=count;i<ilen;++i){index=i+start;parsed[i]={[iAxis]:singleScale||iScale.parse(labels[index],index),[vAxis]:vScale.parse(data[index],index)};}return parsed;}parseArrayData(meta,data,start,count){const{xScale,yScale}=meta;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={x:xScale.parse(item[0],index),y:yScale.parse(item[1],index)};}return parsed;}parseObjectData(meta,data,start,count){const{xScale,yScale}=meta;const{xAxisKey='x',yAxisKey='y'}=this._parsing;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={x:xScale.parse(resolveObjectKey(item,xAxisKey),index),y:yScale.parse(resolveObjectKey(item,yAxisKey),index)};}return parsed;}getParsed(index){return this._cachedMeta._parsed[index];}getDataElement(index){return this._cachedMeta.data[index];}applyStack(scale,parsed,mode){const chart=this.chart;const meta=this._cachedMeta;const value=parsed[scale.axis];const stack={keys:getSortedDatasetIndices(chart,true),values:parsed._stacks[scale.axis]._visualValues};return applyStack(stack,value,meta.index,{mode});}updateRangeFromParsed(range,scale,parsed,stack){const parsedValue=parsed[scale.axis];let value=parsedValue===null?NaN:parsedValue;const values=stack&&parsed._stacks[scale.axis];if(stack&&values){stack.values=values;value=applyStack(stack,parsedValue,this._cachedMeta.index);}range.min=Math.min(range.min,value);range.max=Math.max(range.max,value);}getMinMax(scale,canStack){const meta=this._cachedMeta;const _parsed=meta._parsed;const sorted=meta._sorted&&scale===meta.iScale;const ilen=_parsed.length;const otherScale=this._getOtherScale(scale);const stack=createStack(canStack,meta,this.chart);const range={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};const{min:otherMin,max:otherMax}=getUserBounds(otherScale);let i,parsed;function _skip(){parsed=_parsed[i];const otherValue=parsed[otherScale.axis];return!isNumberFinite(parsed[scale.axis])||otherMin>otherValue||otherMax<otherValue;}for(i=0;i<ilen;++i){if(_skip()){continue;}this.updateRangeFromParsed(range,scale,parsed,stack);if(sorted){break;}}if(sorted){for(i=ilen-1;i>=0;--i){if(_skip()){continue;}this.updateRangeFromParsed(range,scale,parsed,stack);break;}}return range;}getAllParsedValues(scale){const parsed=this._cachedMeta._parsed;const values=[];let i,ilen,value;for(i=0,ilen=parsed.length;i<ilen;++i){value=parsed[i][scale.axis];if(isNumberFinite(value)){values.push(value);}}return values;}getMaxOverflow(){return false;}getLabelAndValue(index){const meta=this._cachedMeta;const iScale=meta.iScale;const vScale=meta.vScale;const parsed=this.getParsed(index);return{label:iScale?''+iScale.getLabelForValue(parsed[iScale.axis]):'',value:vScale?''+vScale.getLabelForValue(parsed[vScale.axis]):''};}_update(mode){const meta=this._cachedMeta;this.update(mode||'default');meta._clip=toClip(valueOrDefault(this.options.clip,defaultClip(meta.xScale,meta.yScale,this.getMaxOverflow())));}update(mode){}draw(){const ctx=this._ctx;const chart=this.chart;const meta=this._cachedMeta;const elements=meta.data||[];const area=chart.chartArea;const active=[];const start=this._drawStart||0;const count=this._drawCount||elements.length-start;const drawActiveElementsOnTop=this.options.drawActiveElementsOnTop;let i;if(meta.dataset){meta.dataset.draw(ctx,area,start,count);}for(i=start;i<start+count;++i){const element=elements[i];if(element.hidden){continue;}if(element.active&&drawActiveElementsOnTop){active.push(element);}else{element.draw(ctx,area);}}for(i=0;i<active.length;++i){active[i].draw(ctx,area);}}getStyle(index,active){const mode=active?'active':'default';return index===undefined&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(mode):this.resolveDataElementOptions(index||0,mode);}getContext(index,active,mode){const dataset=this.getDataset();let context;if(index>=0&&index<this._cachedMeta.data.length){const element=this._cachedMeta.data[index];context=element.$context||(element.$context=createDataContext(this.getContext(),index,element));context.parsed=this.getParsed(index);context.raw=dataset.data[index];context.index=context.dataIndex=index;}else{context=this.$context||(this.$context=createDatasetContext(this.chart.getContext(),this.index));context.dataset=dataset;context.index=context.datasetIndex=this.index;}context.active=!!active;context.mode=mode;return context;}resolveDatasetElementOptions(mode){return this._resolveElementOptions(this.datasetElementType.id,mode);}resolveDataElementOptions(index,mode){return this._resolveElementOptions(this.dataElementType.id,mode,index);}_resolveElementOptions(elementType){let mode=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'default';let index=arguments.length>2?arguments[2]:undefined;const active=mode==='active';const cache=this._cachedDataOpts;const cacheKey=elementType+'-'+mode;const cached=cache[cacheKey];const sharing=this.enableOptionSharing&&defined(index);if(cached){return cloneIfNotShared(cached,sharing);}const config=this.chart.config;const scopeKeys=config.datasetElementScopeKeys(this._type,elementType);const prefixes=active?[\"\".concat(elementType,\"Hover\"),'hover',elementType,'']:[elementType,''];const scopes=config.getOptionScopes(this.getDataset(),scopeKeys);const names=Object.keys(defaults.elements[elementType]);const context=()=>this.getContext(index,active,mode);const values=config.resolveNamedOptions(scopes,names,context,prefixes);if(values.$shared){values.$shared=sharing;cache[cacheKey]=Object.freeze(cloneIfNotShared(values,sharing));}return values;}_resolveAnimations(index,transition,active){const chart=this.chart;const cache=this._cachedDataOpts;const cacheKey=\"animation-\".concat(transition);const cached=cache[cacheKey];if(cached){return cached;}let options;if(chart.options.animation!==false){const config=this.chart.config;const scopeKeys=config.datasetAnimationScopeKeys(this._type,transition);const scopes=config.getOptionScopes(this.getDataset(),scopeKeys);options=config.createResolver(scopes,this.getContext(index,active,transition));}const animations=new Animations(chart,options&&options.animations);if(options&&options._cacheable){cache[cacheKey]=Object.freeze(animations);}return animations;}getSharedOptions(options){if(!options.$shared){return;}return this._sharedOptions||(this._sharedOptions=Object.assign({},options));}includeOptions(mode,sharedOptions){return!sharedOptions||isDirectUpdateMode(mode)||this.chart._animationsDisabled;}_getSharedOptions(start,mode){const firstOpts=this.resolveDataElementOptions(start,mode);const previouslySharedOptions=this._sharedOptions;const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions)||sharedOptions!==previouslySharedOptions;this.updateSharedOptions(sharedOptions,mode,firstOpts);return{sharedOptions,includeOptions};}updateElement(element,index,properties,mode){if(isDirectUpdateMode(mode)){Object.assign(element,properties);}else{this._resolveAnimations(index,mode).update(element,properties);}}updateSharedOptions(sharedOptions,mode,newOptions){if(sharedOptions&&!isDirectUpdateMode(mode)){this._resolveAnimations(undefined,mode).update(sharedOptions,newOptions);}}_setStyle(element,index,mode,active){element.active=active;const options=this.getStyle(index,active);this._resolveAnimations(index,mode,active).update(element,{options:!active&&this.getSharedOptions(options)||options});}removeHoverStyle(element,datasetIndex,index){this._setStyle(element,index,'active',false);}setHoverStyle(element,datasetIndex,index){this._setStyle(element,index,'active',true);}_removeDatasetHoverStyle(){const element=this._cachedMeta.dataset;if(element){this._setStyle(element,undefined,'active',false);}}_setDatasetHoverStyle(){const element=this._cachedMeta.dataset;if(element){this._setStyle(element,undefined,'active',true);}}_resyncElements(resetNewElements){const data=this._data;const elements=this._cachedMeta.data;for(const[method,arg1,arg2]of this._syncList){this[method](arg1,arg2);}this._syncList=[];const numMeta=elements.length;const numData=data.length;const count=Math.min(numData,numMeta);if(count){this.parse(0,count);}if(numData>numMeta){this._insertElements(numMeta,numData-numMeta,resetNewElements);}else if(numData<numMeta){this._removeElements(numData,numMeta-numData);}}_insertElements(start,count){let resetNewElements=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;const meta=this._cachedMeta;const data=meta.data;const end=start+count;let i;const move=arr=>{arr.length+=count;for(i=arr.length-1;i>=end;i--){arr[i]=arr[i-count];}};move(data);for(i=start;i<end;++i){data[i]=new this.dataElementType();}if(this._parsing){move(meta._parsed);}this.parse(start,count);if(resetNewElements){this.updateElements(data,start,count,'reset');}}updateElements(element,start,count,mode){}_removeElements(start,count){const meta=this._cachedMeta;if(this._parsing){const removed=meta._parsed.splice(start,count);if(meta._stacked){clearStacks(meta,removed);}}meta.data.splice(start,count);}_sync(args){if(this._parsing){this._syncList.push(args);}else{const[method,arg1,arg2]=args;this[method](arg1,arg2);}this.chart._dataChanges.push([this.index,...args]);}_onDataPush(){const count=arguments.length;this._sync(['_insertElements',this.getDataset().data.length-count,count]);}_onDataPop(){this._sync(['_removeElements',this._cachedMeta.data.length-1,1]);}_onDataShift(){this._sync(['_removeElements',0,1]);}_onDataSplice(start,count){if(count){this._sync(['_removeElements',start,count]);}const newCount=arguments.length-2;if(newCount){this._sync(['_insertElements',start,newCount]);}}_onDataUnshift(){this._sync(['_insertElements',0,arguments.length]);}}DatasetController.defaults={};DatasetController.datasetElementType=null;DatasetController.dataElementType=null;function getAllScaleValues(scale,type){if(!scale._cache.$bar){const visibleMetas=scale.getMatchingVisibleMetas(type);let values=[];for(let i=0,ilen=visibleMetas.length;i<ilen;i++){values=values.concat(visibleMetas[i].controller.getAllParsedValues(scale));}scale._cache.$bar=_arrayUnique(values.sort((a,b)=>a-b));}return scale._cache.$bar;}function computeMinSampleSize(meta){const scale=meta.iScale;const values=getAllScaleValues(scale,meta.type);let min=scale._length;let i,ilen,curr,prev;const updateMinAndPrev=()=>{if(curr===32767||curr===-32768){return;}if(defined(prev)){min=Math.min(min,Math.abs(curr-prev)||min);}prev=curr;};for(i=0,ilen=values.length;i<ilen;++i){curr=scale.getPixelForValue(values[i]);updateMinAndPrev();}prev=undefined;for(i=0,ilen=scale.ticks.length;i<ilen;++i){curr=scale.getPixelForTick(i);updateMinAndPrev();}return min;}function computeFitCategoryTraits(index,ruler,options,stackCount){const thickness=options.barThickness;let size,ratio;if(isNullOrUndef(thickness)){size=ruler.min*options.categoryPercentage;ratio=options.barPercentage;}else{size=thickness*stackCount;ratio=1;}return{chunk:size/stackCount,ratio,start:ruler.pixels[index]-size/2};}function computeFlexCategoryTraits(index,ruler,options,stackCount){const pixels=ruler.pixels;const curr=pixels[index];let prev=index>0?pixels[index-1]:null;let next=index<pixels.length-1?pixels[index+1]:null;const percent=options.categoryPercentage;if(prev===null){prev=curr-(next===null?ruler.end-ruler.start:next-curr);}if(next===null){next=curr+curr-prev;}const start=curr-(curr-Math.min(prev,next))/2*percent;const size=Math.abs(next-prev)/2*percent;return{chunk:size/stackCount,ratio:options.barPercentage,start};}function parseFloatBar(entry,item,vScale,i){const startValue=vScale.parse(entry[0],i);const endValue=vScale.parse(entry[1],i);const min=Math.min(startValue,endValue);const max=Math.max(startValue,endValue);let barStart=min;let barEnd=max;if(Math.abs(min)>Math.abs(max)){barStart=max;barEnd=min;}item[vScale.axis]=barEnd;item._custom={barStart,barEnd,start:startValue,end:endValue,min,max};}function parseValue(entry,item,vScale,i){if(isArray(entry)){parseFloatBar(entry,item,vScale,i);}else{item[vScale.axis]=vScale.parse(entry,i);}return item;}function parseArrayOrPrimitive(meta,data,start,count){const iScale=meta.iScale;const vScale=meta.vScale;const labels=iScale.getLabels();const singleScale=iScale===vScale;const parsed=[];let i,ilen,item,entry;for(i=start,ilen=start+count;i<ilen;++i){entry=data[i];item={};item[iScale.axis]=singleScale||iScale.parse(labels[i],i);parsed.push(parseValue(entry,item,vScale,i));}return parsed;}function isFloatBar(custom){return custom&&custom.barStart!==undefined&&custom.barEnd!==undefined;}function barSign(size,vScale,actualBase){if(size!==0){return sign(size);}return(vScale.isHorizontal()?1:-1)*(vScale.min>=actualBase?1:-1);}function borderProps(properties){let reverse,start,end,top,bottom;if(properties.horizontal){reverse=properties.base>properties.x;start='left';end='right';}else{reverse=properties.base<properties.y;start='bottom';end='top';}if(reverse){top='end';bottom='start';}else{top='start';bottom='end';}return{start,end,reverse,top,bottom};}function setBorderSkipped(properties,options,stack,index){let edge=options.borderSkipped;const res={};if(!edge){properties.borderSkipped=res;return;}if(edge===true){properties.borderSkipped={top:true,right:true,bottom:true,left:true};return;}const{start,end,reverse,top,bottom}=borderProps(properties);if(edge==='middle'&&stack){properties.enableBorderRadius=true;if((stack._top||0)===index){edge=top;}else if((stack._bottom||0)===index){edge=bottom;}else{res[parseEdge(bottom,start,end,reverse)]=true;edge=top;}}res[parseEdge(edge,start,end,reverse)]=true;properties.borderSkipped=res;}function parseEdge(edge,a,b,reverse){if(reverse){edge=swap(edge,a,b);edge=startEnd(edge,b,a);}else{edge=startEnd(edge,a,b);}return edge;}function swap(orig,v1,v2){return orig===v1?v2:orig===v2?v1:orig;}function startEnd(v,start,end){return v==='start'?start:v==='end'?end:v;}function setInflateAmount(properties,_ref,ratio){let{inflateAmount}=_ref;properties.inflateAmount=inflateAmount==='auto'?ratio===1?0.33:0:inflateAmount;}class BarController extends DatasetController{parsePrimitiveData(meta,data,start,count){return parseArrayOrPrimitive(meta,data,start,count);}parseArrayData(meta,data,start,count){return parseArrayOrPrimitive(meta,data,start,count);}parseObjectData(meta,data,start,count){const{iScale,vScale}=meta;const{xAxisKey='x',yAxisKey='y'}=this._parsing;const iAxisKey=iScale.axis==='x'?xAxisKey:yAxisKey;const vAxisKey=vScale.axis==='x'?xAxisKey:yAxisKey;const parsed=[];let i,ilen,item,obj;for(i=start,ilen=start+count;i<ilen;++i){obj=data[i];item={};item[iScale.axis]=iScale.parse(resolveObjectKey(obj,iAxisKey),i);parsed.push(parseValue(resolveObjectKey(obj,vAxisKey),item,vScale,i));}return parsed;}updateRangeFromParsed(range,scale,parsed,stack){super.updateRangeFromParsed(range,scale,parsed,stack);const custom=parsed._custom;if(custom&&scale===this._cachedMeta.vScale){range.min=Math.min(range.min,custom.min);range.max=Math.max(range.max,custom.max);}}getMaxOverflow(){return 0;}getLabelAndValue(index){const meta=this._cachedMeta;const{iScale,vScale}=meta;const parsed=this.getParsed(index);const custom=parsed._custom;const value=isFloatBar(custom)?'['+custom.start+', '+custom.end+']':''+vScale.getLabelForValue(parsed[vScale.axis]);return{label:''+iScale.getLabelForValue(parsed[iScale.axis]),value};}initialize(){this.enableOptionSharing=true;super.initialize();const meta=this._cachedMeta;meta.stack=this.getDataset().stack;}update(mode){const meta=this._cachedMeta;this.updateElements(meta.data,0,meta.data.length,mode);}updateElements(bars,start,count,mode){const reset=mode==='reset';const{index,_cachedMeta:{vScale}}=this;const base=vScale.getBasePixel();const horizontal=vScale.isHorizontal();const ruler=this._getRuler();const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);for(let i=start;i<start+count;i++){const parsed=this.getParsed(i);const vpixels=reset||isNullOrUndef(parsed[vScale.axis])?{base,head:base}:this._calculateBarValuePixels(i);const ipixels=this._calculateBarIndexPixels(i,ruler);const stack=(parsed._stacks||{})[vScale.axis];const properties={horizontal,base:vpixels.base,enableBorderRadius:!stack||isFloatBar(parsed._custom)||index===stack._top||index===stack._bottom,x:horizontal?vpixels.head:ipixels.center,y:horizontal?ipixels.center:vpixels.head,height:horizontal?ipixels.size:Math.abs(vpixels.size),width:horizontal?Math.abs(vpixels.size):ipixels.size};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,bars[i].active?'active':mode);}const options=properties.options||bars[i].options;setBorderSkipped(properties,options,stack,index);setInflateAmount(properties,options,ruler.ratio);this.updateElement(bars[i],i,properties,mode);}}_getStacks(last,dataIndex){const{iScale}=this._cachedMeta;const metasets=iScale.getMatchingVisibleMetas(this._type).filter(meta=>meta.controller.options.grouped);const stacked=iScale.options.stacked;const stacks=[];const skipNull=meta=>{const parsed=meta.controller.getParsed(dataIndex);const val=parsed&&parsed[meta.vScale.axis];if(isNullOrUndef(val)||isNaN(val)){return true;}};for(const meta of metasets){if(dataIndex!==undefined&&skipNull(meta)){continue;}if(stacked===false||stacks.indexOf(meta.stack)===-1||stacked===undefined&&meta.stack===undefined){stacks.push(meta.stack);}if(meta.index===last){break;}}if(!stacks.length){stacks.push(undefined);}return stacks;}_getStackCount(index){return this._getStacks(undefined,index).length;}_getStackIndex(datasetIndex,name,dataIndex){const stacks=this._getStacks(datasetIndex,dataIndex);const index=name!==undefined?stacks.indexOf(name):-1;return index===-1?stacks.length-1:index;}_getRuler(){const opts=this.options;const meta=this._cachedMeta;const iScale=meta.iScale;const pixels=[];let i,ilen;for(i=0,ilen=meta.data.length;i<ilen;++i){pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis],i));}const barThickness=opts.barThickness;const min=barThickness||computeMinSampleSize(meta);return{min,pixels,start:iScale._startPixel,end:iScale._endPixel,stackCount:this._getStackCount(),scale:iScale,grouped:opts.grouped,ratio:barThickness?1:opts.categoryPercentage*opts.barPercentage};}_calculateBarValuePixels(index){const{_cachedMeta:{vScale,_stacked,index:datasetIndex},options:{base:baseValue,minBarLength}}=this;const actualBase=baseValue||0;const parsed=this.getParsed(index);const custom=parsed._custom;const floating=isFloatBar(custom);let value=parsed[vScale.axis];let start=0;let length=_stacked?this.applyStack(vScale,parsed,_stacked):value;let head,size;if(length!==value){start=length-value;length=value;}if(floating){value=custom.barStart;length=custom.barEnd-custom.barStart;if(value!==0&&sign(value)!==sign(custom.barEnd)){start=0;}start+=value;}const startValue=!isNullOrUndef(baseValue)&&!floating?baseValue:start;let base=vScale.getPixelForValue(startValue);if(this.chart.getDataVisibility(index)){head=vScale.getPixelForValue(start+length);}else{head=base;}size=head-base;if(Math.abs(size)<minBarLength){size=barSign(size,vScale,actualBase)*minBarLength;if(value===actualBase){base-=size/2;}const startPixel=vScale.getPixelForDecimal(0);const endPixel=vScale.getPixelForDecimal(1);const min=Math.min(startPixel,endPixel);const max=Math.max(startPixel,endPixel);base=Math.max(Math.min(base,max),min);head=base+size;if(_stacked&&!floating){parsed._stacks[vScale.axis]._visualValues[datasetIndex]=vScale.getValueForPixel(head)-vScale.getValueForPixel(base);}}if(base===vScale.getPixelForValue(actualBase)){const halfGrid=sign(size)*vScale.getLineWidthForValue(actualBase)/2;base+=halfGrid;size-=halfGrid;}return{size,base,head,center:head+size/2};}_calculateBarIndexPixels(index,ruler){const scale=ruler.scale;const options=this.options;const skipNull=options.skipNull;const maxBarThickness=valueOrDefault(options.maxBarThickness,Infinity);let center,size;if(ruler.grouped){const stackCount=skipNull?this._getStackCount(index):ruler.stackCount;const range=options.barThickness==='flex'?computeFlexCategoryTraits(index,ruler,options,stackCount):computeFitCategoryTraits(index,ruler,options,stackCount);const stackIndex=this._getStackIndex(this.index,this._cachedMeta.stack,skipNull?index:undefined);center=range.start+range.chunk*stackIndex+range.chunk/2;size=Math.min(maxBarThickness,range.chunk*range.ratio);}else{center=scale.getPixelForValue(this.getParsed(index)[scale.axis],index);size=Math.min(maxBarThickness,ruler.min*ruler.ratio);}return{base:center-size/2,head:center+size/2,center,size};}draw(){const meta=this._cachedMeta;const vScale=meta.vScale;const rects=meta.data;const ilen=rects.length;let i=0;for(;i<ilen;++i){if(this.getParsed(i)[vScale.axis]!==null&&!rects[i].hidden){rects[i].draw(this._ctx);}}}}BarController.id='bar';BarController.defaults={datasetElementType:false,dataElementType:'bar',categoryPercentage:0.8,barPercentage:0.9,grouped:true,animations:{numbers:{type:'number',properties:['x','y','base','width','height']}}};BarController.overrides={scales:{_index_:{type:'category',offset:true,grid:{offset:true}},_value_:{type:'linear',beginAtZero:true}}};class BubbleController extends DatasetController{initialize(){this.enableOptionSharing=true;super.initialize();}parsePrimitiveData(meta,data,start,count){const parsed=super.parsePrimitiveData(meta,data,start,count);for(let i=0;i<parsed.length;i++){parsed[i]._custom=this.resolveDataElementOptions(i+start).radius;}return parsed;}parseArrayData(meta,data,start,count){const parsed=super.parseArrayData(meta,data,start,count);for(let i=0;i<parsed.length;i++){const item=data[start+i];parsed[i]._custom=valueOrDefault(item[2],this.resolveDataElementOptions(i+start).radius);}return parsed;}parseObjectData(meta,data,start,count){const parsed=super.parseObjectData(meta,data,start,count);for(let i=0;i<parsed.length;i++){const item=data[start+i];parsed[i]._custom=valueOrDefault(item&&item.r&&+item.r,this.resolveDataElementOptions(i+start).radius);}return parsed;}getMaxOverflow(){const data=this._cachedMeta.data;let max=0;for(let i=data.length-1;i>=0;--i){max=Math.max(max,data[i].size(this.resolveDataElementOptions(i))/2);}return max>0&&max;}getLabelAndValue(index){const meta=this._cachedMeta;const labels=this.chart.data.labels||[];const{xScale,yScale}=meta;const parsed=this.getParsed(index);const x=xScale.getLabelForValue(parsed.x);const y=yScale.getLabelForValue(parsed.y);const r=parsed._custom;return{label:labels[index]||'',value:'('+x+', '+y+(r?', '+r:'')+')'};}update(mode){const points=this._cachedMeta.data;this.updateElements(points,0,points.length,mode);}updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale}=this._cachedMeta;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);const iAxis=iScale.axis;const vAxis=vScale.axis;for(let i=start;i<start+count;i++){const point=points[i];const parsed=!reset&&this.getParsed(i);const properties={};const iPixel=properties[iAxis]=reset?iScale.getPixelForDecimal(0.5):iScale.getPixelForValue(parsed[iAxis]);const vPixel=properties[vAxis]=reset?vScale.getBasePixel():vScale.getPixelForValue(parsed[vAxis]);properties.skip=isNaN(iPixel)||isNaN(vPixel);if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);if(reset){properties.options.radius=0;}}this.updateElement(point,i,properties,mode);}}resolveDataElementOptions(index,mode){const parsed=this.getParsed(index);let values=super.resolveDataElementOptions(index,mode);if(values.$shared){values=Object.assign({},values,{$shared:false});}const radius=values.radius;if(mode!=='active'){values.radius=0;}values.radius+=valueOrDefault(parsed&&parsed._custom,radius);return values;}}BubbleController.id='bubble';BubbleController.defaults={datasetElementType:false,dataElementType:'point',animations:{numbers:{type:'number',properties:['x','y','borderWidth','radius']}}};BubbleController.overrides={scales:{x:{type:'linear'},y:{type:'linear'}}};function getRatioAndOffset(rotation,circumference,cutout){let ratioX=1;let ratioY=1;let offsetX=0;let offsetY=0;if(circumference<TAU){const startAngle=rotation;const endAngle=startAngle+circumference;const startX=Math.cos(startAngle);const startY=Math.sin(startAngle);const endX=Math.cos(endAngle);const endY=Math.sin(endAngle);const calcMax=(angle,a,b)=>_angleBetween(angle,startAngle,endAngle,true)?1:Math.max(a,a*cutout,b,b*cutout);const calcMin=(angle,a,b)=>_angleBetween(angle,startAngle,endAngle,true)?-1:Math.min(a,a*cutout,b,b*cutout);const maxX=calcMax(0,startX,endX);const maxY=calcMax(HALF_PI,startY,endY);const minX=calcMin(PI,startX,endX);const minY=calcMin(PI+HALF_PI,startY,endY);ratioX=(maxX-minX)/2;ratioY=(maxY-minY)/2;offsetX=-(maxX+minX)/2;offsetY=-(maxY+minY)/2;}return{ratioX,ratioY,offsetX,offsetY};}class DoughnutController extends DatasetController{constructor(chart,datasetIndex){super(chart,datasetIndex);this.enableOptionSharing=true;this.innerRadius=undefined;this.outerRadius=undefined;this.offsetX=undefined;this.offsetY=undefined;}linkScales(){}parse(start,count){const data=this.getDataset().data;const meta=this._cachedMeta;if(this._parsing===false){meta._parsed=data;}else{let getter=i=>+data[i];if(isObject(data[start])){const{key='value'}=this._parsing;getter=i=>+resolveObjectKey(data[i],key);}let i,ilen;for(i=start,ilen=start+count;i<ilen;++i){meta._parsed[i]=getter(i);}}}_getRotation(){return toRadians(this.options.rotation-90);}_getCircumference(){return toRadians(this.options.circumference);}_getRotationExtents(){let min=TAU;let max=-TAU;for(let i=0;i<this.chart.data.datasets.length;++i){if(this.chart.isDatasetVisible(i)&&this.chart.getDatasetMeta(i).type===this._type){const controller=this.chart.getDatasetMeta(i).controller;const rotation=controller._getRotation();const circumference=controller._getCircumference();min=Math.min(min,rotation);max=Math.max(max,rotation+circumference);}}return{rotation:min,circumference:max-min};}update(mode){const chart=this.chart;const{chartArea}=chart;const meta=this._cachedMeta;const arcs=meta.data;const spacing=this.getMaxBorderWidth()+this.getMaxOffset(arcs)+this.options.spacing;const maxSize=Math.max((Math.min(chartArea.width,chartArea.height)-spacing)/2,0);const cutout=Math.min(toPercentage(this.options.cutout,maxSize),1);const chartWeight=this._getRingWeight(this.index);const{circumference,rotation}=this._getRotationExtents();const{ratioX,ratioY,offsetX,offsetY}=getRatioAndOffset(rotation,circumference,cutout);const maxWidth=(chartArea.width-spacing)/ratioX;const maxHeight=(chartArea.height-spacing)/ratioY;const maxRadius=Math.max(Math.min(maxWidth,maxHeight)/2,0);const outerRadius=toDimension(this.options.radius,maxRadius);const innerRadius=Math.max(outerRadius*cutout,0);const radiusLength=(outerRadius-innerRadius)/this._getVisibleDatasetWeightTotal();this.offsetX=offsetX*outerRadius;this.offsetY=offsetY*outerRadius;meta.total=this.calculateTotal();this.outerRadius=outerRadius-radiusLength*this._getRingWeightOffset(this.index);this.innerRadius=Math.max(this.outerRadius-radiusLength*chartWeight,0);this.updateElements(arcs,0,arcs.length,mode);}_circumference(i,reset){const opts=this.options;const meta=this._cachedMeta;const circumference=this._getCircumference();if(reset&&opts.animation.animateRotate||!this.chart.getDataVisibility(i)||meta._parsed[i]===null||meta.data[i].hidden){return 0;}return this.calculateCircumference(meta._parsed[i]*circumference/TAU);}updateElements(arcs,start,count,mode){const reset=mode==='reset';const chart=this.chart;const chartArea=chart.chartArea;const opts=chart.options;const animationOpts=opts.animation;const centerX=(chartArea.left+chartArea.right)/2;const centerY=(chartArea.top+chartArea.bottom)/2;const animateScale=reset&&animationOpts.animateScale;const innerRadius=animateScale?0:this.innerRadius;const outerRadius=animateScale?0:this.outerRadius;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);let startAngle=this._getRotation();let i;for(i=0;i<start;++i){startAngle+=this._circumference(i,reset);}for(i=start;i<start+count;++i){const circumference=this._circumference(i,reset);const arc=arcs[i];const properties={x:centerX+this.offsetX,y:centerY+this.offsetY,startAngle,endAngle:startAngle+circumference,circumference,outerRadius,innerRadius};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,arc.active?'active':mode);}startAngle+=circumference;this.updateElement(arc,i,properties,mode);}}calculateTotal(){const meta=this._cachedMeta;const metaData=meta.data;let total=0;let i;for(i=0;i<metaData.length;i++){const value=meta._parsed[i];if(value!==null&&!isNaN(value)&&this.chart.getDataVisibility(i)&&!metaData[i].hidden){total+=Math.abs(value);}}return total;}calculateCircumference(value){const total=this._cachedMeta.total;if(total>0&&!isNaN(value)){return TAU*(Math.abs(value)/total);}return 0;}getLabelAndValue(index){const meta=this._cachedMeta;const chart=this.chart;const labels=chart.data.labels||[];const value=formatNumber(meta._parsed[index],chart.options.locale);return{label:labels[index]||'',value};}getMaxBorderWidth(arcs){let max=0;const chart=this.chart;let i,ilen,meta,controller,options;if(!arcs){for(i=0,ilen=chart.data.datasets.length;i<ilen;++i){if(chart.isDatasetVisible(i)){meta=chart.getDatasetMeta(i);arcs=meta.data;controller=meta.controller;break;}}}if(!arcs){return 0;}for(i=0,ilen=arcs.length;i<ilen;++i){options=controller.resolveDataElementOptions(i);if(options.borderAlign!=='inner'){max=Math.max(max,options.borderWidth||0,options.hoverBorderWidth||0);}}return max;}getMaxOffset(arcs){let max=0;for(let i=0,ilen=arcs.length;i<ilen;++i){const options=this.resolveDataElementOptions(i);max=Math.max(max,options.offset||0,options.hoverOffset||0);}return max;}_getRingWeightOffset(datasetIndex){let ringWeightOffset=0;for(let i=0;i<datasetIndex;++i){if(this.chart.isDatasetVisible(i)){ringWeightOffset+=this._getRingWeight(i);}}return ringWeightOffset;}_getRingWeight(datasetIndex){return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight,1),0);}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1;}}DoughnutController.id='doughnut';DoughnutController.defaults={datasetElementType:false,dataElementType:'arc',animation:{animateRotate:true,animateScale:false},animations:{numbers:{type:'number',properties:['circumference','endAngle','innerRadius','outerRadius','startAngle','x','y','offset','borderWidth','spacing']}},cutout:'50%',rotation:0,circumference:360,radius:'100%',spacing:0,indexAxis:'r'};DoughnutController.descriptors={_scriptable:name=>name!=='spacing',_indexable:name=>name!=='spacing'&&!name.startsWith('borderDash')&&!name.startsWith('hoverBorderDash')};DoughnutController.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(chart){const data=chart.data;if(data.labels.length&&data.datasets.length){const{labels:{pointStyle,color}}=chart.legend.options;return data.labels.map((label,i)=>{const meta=chart.getDatasetMeta(0);const style=meta.controller.getStyle(i);return{text:label,fillStyle:style.backgroundColor,strokeStyle:style.borderColor,fontColor:color,lineWidth:style.borderWidth,pointStyle:pointStyle,hidden:!chart.getDataVisibility(i),index:i};});}return[];}},onClick(e,legendItem,legend){legend.chart.toggleDataVisibility(legendItem.index);legend.chart.update();}}}};class LineController extends DatasetController{initialize(){this.enableOptionSharing=true;this.supportsDecimation=true;super.initialize();}update(mode){const meta=this._cachedMeta;const{dataset:line,data:points=[],_dataset}=meta;const animationsDisabled=this.chart._animationsDisabled;let{start,count}=_getStartAndCountOfVisiblePoints(meta,points,animationsDisabled);this._drawStart=start;this._drawCount=count;if(_scaleRangesChanged(meta)){start=0;count=points.length;}line._chart=this.chart;line._datasetIndex=this.index;line._decimated=!!_dataset._decimated;line.points=points;const options=this.resolveDatasetElementOptions(mode);if(!this.options.showLine){options.borderWidth=0;}options.segment=this.options.segment;this.updateElement(line,undefined,{animated:!animationsDisabled,options},mode);this.updateElements(points,start,count,mode);}updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale,_stacked,_dataset}=this._cachedMeta;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);const iAxis=iScale.axis;const vAxis=vScale.axis;const{spanGaps,segment}=this.options;const maxGapLength=isNumber(spanGaps)?spanGaps:Number.POSITIVE_INFINITY;const directUpdate=this.chart._animationsDisabled||reset||mode==='none';const end=start+count;const pointsCount=points.length;let prevParsed=start>0&&this.getParsed(start-1);for(let i=0;i<pointsCount;++i){const point=points[i];const properties=directUpdate?point:{};if(i<start||i>=end){properties.skip=true;continue;}const parsed=this.getParsed(i);const nullData=isNullOrUndef(parsed[vAxis]);const iPixel=properties[iAxis]=iScale.getPixelForValue(parsed[iAxis],i);const vPixel=properties[vAxis]=reset||nullData?vScale.getBasePixel():vScale.getPixelForValue(_stacked?this.applyStack(vScale,parsed,_stacked):parsed[vAxis],i);properties.skip=isNaN(iPixel)||isNaN(vPixel)||nullData;properties.stop=i>0&&Math.abs(parsed[iAxis]-prevParsed[iAxis])>maxGapLength;if(segment){properties.parsed=parsed;properties.raw=_dataset.data[i];}if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);}if(!directUpdate){this.updateElement(point,i,properties,mode);}prevParsed=parsed;}}getMaxOverflow(){const meta=this._cachedMeta;const dataset=meta.dataset;const border=dataset.options&&dataset.options.borderWidth||0;const data=meta.data||[];if(!data.length){return border;}const firstPoint=data[0].size(this.resolveDataElementOptions(0));const lastPoint=data[data.length-1].size(this.resolveDataElementOptions(data.length-1));return Math.max(border,firstPoint,lastPoint)/2;}draw(){const meta=this._cachedMeta;meta.dataset.updateControlPoints(this.chart.chartArea,meta.iScale.axis);super.draw();}}LineController.id='line';LineController.defaults={datasetElementType:'line',dataElementType:'point',showLine:true,spanGaps:false};LineController.overrides={scales:{_index_:{type:'category'},_value_:{type:'linear'}}};class PolarAreaController extends DatasetController{constructor(chart,datasetIndex){super(chart,datasetIndex);this.innerRadius=undefined;this.outerRadius=undefined;}getLabelAndValue(index){const meta=this._cachedMeta;const chart=this.chart;const labels=chart.data.labels||[];const value=formatNumber(meta._parsed[index].r,chart.options.locale);return{label:labels[index]||'',value};}parseObjectData(meta,data,start,count){return _parseObjectDataRadialScale.bind(this)(meta,data,start,count);}update(mode){const arcs=this._cachedMeta.data;this._updateRadius();this.updateElements(arcs,0,arcs.length,mode);}getMinMax(){const meta=this._cachedMeta;const range={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};meta.data.forEach((element,index)=>{const parsed=this.getParsed(index).r;if(!isNaN(parsed)&&this.chart.getDataVisibility(index)){if(parsed<range.min){range.min=parsed;}if(parsed>range.max){range.max=parsed;}}});return range;}_updateRadius(){const chart=this.chart;const chartArea=chart.chartArea;const opts=chart.options;const minSize=Math.min(chartArea.right-chartArea.left,chartArea.bottom-chartArea.top);const outerRadius=Math.max(minSize/2,0);const innerRadius=Math.max(opts.cutoutPercentage?outerRadius/100*opts.cutoutPercentage:1,0);const radiusLength=(outerRadius-innerRadius)/chart.getVisibleDatasetCount();this.outerRadius=outerRadius-radiusLength*this.index;this.innerRadius=this.outerRadius-radiusLength;}updateElements(arcs,start,count,mode){const reset=mode==='reset';const chart=this.chart;const opts=chart.options;const animationOpts=opts.animation;const scale=this._cachedMeta.rScale;const centerX=scale.xCenter;const centerY=scale.yCenter;const datasetStartAngle=scale.getIndexAngle(0)-0.5*PI;let angle=datasetStartAngle;let i;const defaultAngle=360/this.countVisibleElements();for(i=0;i<start;++i){angle+=this._computeAngle(i,mode,defaultAngle);}for(i=start;i<start+count;i++){const arc=arcs[i];let startAngle=angle;let endAngle=angle+this._computeAngle(i,mode,defaultAngle);let outerRadius=chart.getDataVisibility(i)?scale.getDistanceFromCenterForValue(this.getParsed(i).r):0;angle=endAngle;if(reset){if(animationOpts.animateScale){outerRadius=0;}if(animationOpts.animateRotate){startAngle=endAngle=datasetStartAngle;}}const properties={x:centerX,y:centerY,innerRadius:0,outerRadius,startAngle,endAngle,options:this.resolveDataElementOptions(i,arc.active?'active':mode)};this.updateElement(arc,i,properties,mode);}}countVisibleElements(){const meta=this._cachedMeta;let count=0;meta.data.forEach((element,index)=>{if(!isNaN(this.getParsed(index).r)&&this.chart.getDataVisibility(index)){count++;}});return count;}_computeAngle(index,mode,defaultAngle){return this.chart.getDataVisibility(index)?toRadians(this.resolveDataElementOptions(index,mode).angle||defaultAngle):0;}}PolarAreaController.id='polarArea';PolarAreaController.defaults={dataElementType:'arc',animation:{animateRotate:true,animateScale:true},animations:{numbers:{type:'number',properties:['x','y','startAngle','endAngle','innerRadius','outerRadius']}},indexAxis:'r',startAngle:0};PolarAreaController.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(chart){const data=chart.data;if(data.labels.length&&data.datasets.length){const{labels:{pointStyle,color}}=chart.legend.options;return data.labels.map((label,i)=>{const meta=chart.getDatasetMeta(0);const style=meta.controller.getStyle(i);return{text:label,fillStyle:style.backgroundColor,strokeStyle:style.borderColor,fontColor:color,lineWidth:style.borderWidth,pointStyle:pointStyle,hidden:!chart.getDataVisibility(i),index:i};});}return[];}},onClick(e,legendItem,legend){legend.chart.toggleDataVisibility(legendItem.index);legend.chart.update();}}},scales:{r:{type:'radialLinear',angleLines:{display:false},beginAtZero:true,grid:{circular:true},pointLabels:{display:false},startAngle:0}}};class PieController extends DoughnutController{}PieController.id='pie';PieController.defaults={cutout:0,rotation:0,circumference:360,radius:'100%'};class RadarController extends DatasetController{getLabelAndValue(index){const vScale=this._cachedMeta.vScale;const parsed=this.getParsed(index);return{label:vScale.getLabels()[index],value:''+vScale.getLabelForValue(parsed[vScale.axis])};}parseObjectData(meta,data,start,count){return _parseObjectDataRadialScale.bind(this)(meta,data,start,count);}update(mode){const meta=this._cachedMeta;const line=meta.dataset;const points=meta.data||[];const labels=meta.iScale.getLabels();line.points=points;if(mode!=='resize'){const options=this.resolveDatasetElementOptions(mode);if(!this.options.showLine){options.borderWidth=0;}const properties={_loop:true,_fullLoop:labels.length===points.length,options};this.updateElement(line,undefined,properties,mode);}this.updateElements(points,0,points.length,mode);}updateElements(points,start,count,mode){const scale=this._cachedMeta.rScale;const reset=mode==='reset';for(let i=start;i<start+count;i++){const point=points[i];const options=this.resolveDataElementOptions(i,point.active?'active':mode);const pointPosition=scale.getPointPositionForValue(i,this.getParsed(i).r);const x=reset?scale.xCenter:pointPosition.x;const y=reset?scale.yCenter:pointPosition.y;const properties={x,y,angle:pointPosition.angle,skip:isNaN(x)||isNaN(y),options};this.updateElement(point,i,properties,mode);}}}RadarController.id='radar';RadarController.defaults={datasetElementType:'line',dataElementType:'point',indexAxis:'r',showLine:true,elements:{line:{fill:'start'}}};RadarController.overrides={aspectRatio:1,scales:{r:{type:'radialLinear'}}};class ScatterController extends DatasetController{getLabelAndValue(index){const meta=this._cachedMeta;const labels=this.chart.data.labels||[];const{xScale,yScale}=meta;const parsed=this.getParsed(index);const x=xScale.getLabelForValue(parsed.x);const y=yScale.getLabelForValue(parsed.y);return{label:labels[index]||'',value:'('+x+', '+y+')'};}update(mode){const meta=this._cachedMeta;const{data:points=[]}=meta;const animationsDisabled=this.chart._animationsDisabled;let{start,count}=_getStartAndCountOfVisiblePoints(meta,points,animationsDisabled);this._drawStart=start;this._drawCount=count;if(_scaleRangesChanged(meta)){start=0;count=points.length;}if(this.options.showLine){if(!this.datasetElementType){this.addElements();}const{dataset:line,_dataset}=meta;line._chart=this.chart;line._datasetIndex=this.index;line._decimated=!!_dataset._decimated;line.points=points;const options=this.resolveDatasetElementOptions(mode);options.segment=this.options.segment;this.updateElement(line,undefined,{animated:!animationsDisabled,options},mode);}else if(this.datasetElementType){delete meta.dataset;this.datasetElementType=false;}this.updateElements(points,start,count,mode);}addElements(){const{showLine}=this.options;if(!this.datasetElementType&&showLine){this.datasetElementType=this.chart.registry.getElement('line');}super.addElements();}updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale,_stacked,_dataset}=this._cachedMeta;const firstOpts=this.resolveDataElementOptions(start,mode);const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const iAxis=iScale.axis;const vAxis=vScale.axis;const{spanGaps,segment}=this.options;const maxGapLength=isNumber(spanGaps)?spanGaps:Number.POSITIVE_INFINITY;const directUpdate=this.chart._animationsDisabled||reset||mode==='none';let prevParsed=start>0&&this.getParsed(start-1);for(let i=start;i<start+count;++i){const point=points[i];const parsed=this.getParsed(i);const properties=directUpdate?point:{};const nullData=isNullOrUndef(parsed[vAxis]);const iPixel=properties[iAxis]=iScale.getPixelForValue(parsed[iAxis],i);const vPixel=properties[vAxis]=reset||nullData?vScale.getBasePixel():vScale.getPixelForValue(_stacked?this.applyStack(vScale,parsed,_stacked):parsed[vAxis],i);properties.skip=isNaN(iPixel)||isNaN(vPixel)||nullData;properties.stop=i>0&&Math.abs(parsed[iAxis]-prevParsed[iAxis])>maxGapLength;if(segment){properties.parsed=parsed;properties.raw=_dataset.data[i];}if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);}if(!directUpdate){this.updateElement(point,i,properties,mode);}prevParsed=parsed;}this.updateSharedOptions(sharedOptions,mode,firstOpts);}getMaxOverflow(){const meta=this._cachedMeta;const data=meta.data||[];if(!this.options.showLine){let max=0;for(let i=data.length-1;i>=0;--i){max=Math.max(max,data[i].size(this.resolveDataElementOptions(i))/2);}return max>0&&max;}const dataset=meta.dataset;const border=dataset.options&&dataset.options.borderWidth||0;if(!data.length){return border;}const firstPoint=data[0].size(this.resolveDataElementOptions(0));const lastPoint=data[data.length-1].size(this.resolveDataElementOptions(data.length-1));return Math.max(border,firstPoint,lastPoint)/2;}}ScatterController.id='scatter';ScatterController.defaults={datasetElementType:false,dataElementType:'point',showLine:false,fill:false};ScatterController.overrides={interaction:{mode:'point'},scales:{x:{type:'linear'},y:{type:'linear'}}};var controllers=/*#__PURE__*/Object.freeze({__proto__:null,BarController:BarController,BubbleController:BubbleController,DoughnutController:DoughnutController,LineController:LineController,PieController:PieController,PolarAreaController:PolarAreaController,RadarController:RadarController,ScatterController:ScatterController});/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */function abstract(){throw new Error('This method is not implemented: Check that a complete date adapter is provided.');}/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */class DateAdapterBase{/**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */static override(members){Object.assign(DateAdapterBase.prototype,members);}constructor(options){this.options=options||{};}// eslint-disable-next-line @typescript-eslint/no-empty-function\ninit(){}formats(){return abstract();}parse(){return abstract();}format(){return abstract();}add(){return abstract();}diff(){return abstract();}startOf(){return abstract();}endOf(){return abstract();}}var adapters={_date:DateAdapterBase};function binarySearch(metaset,axis,value,intersect){const{controller,data,_sorted}=metaset;const iScale=controller._cachedMeta.iScale;if(iScale&&axis===iScale.axis&&axis!=='r'&&_sorted&&data.length){const lookupMethod=iScale._reversePixels?_rlookupByKey:_lookupByKey;if(!intersect){return lookupMethod(data,axis,value);}else if(controller._sharedOptions){const el=data[0];const range=typeof el.getRange==='function'&&el.getRange(axis);if(range){const start=lookupMethod(data,axis,value-range);const end=lookupMethod(data,axis,value+range);return{lo:start.lo,hi:end.hi};}}}return{lo:0,hi:data.length-1};}function evaluateInteractionItems(chart,axis,position,handler,intersect){const metasets=chart.getSortedVisibleDatasetMetas();const value=position[axis];for(let i=0,ilen=metasets.length;i<ilen;++i){const{index,data}=metasets[i];const{lo,hi}=binarySearch(metasets[i],axis,value,intersect);for(let j=lo;j<=hi;++j){const element=data[j];if(!element.skip){handler(element,index,j);}}}}function getDistanceMetricForAxis(axis){const useX=axis.indexOf('x')!==-1;const useY=axis.indexOf('y')!==-1;return function(pt1,pt2){const deltaX=useX?Math.abs(pt1.x-pt2.x):0;const deltaY=useY?Math.abs(pt1.y-pt2.y):0;return Math.sqrt(Math.pow(deltaX,2)+Math.pow(deltaY,2));};}function getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible){const items=[];if(!includeInvisible&&!chart.isPointInArea(position)){return items;}const evaluationFunc=function(element,datasetIndex,index){if(!includeInvisible&&!_isPointInArea(element,chart.chartArea,0)){return;}if(element.inRange(position.x,position.y,useFinalPosition)){items.push({element,datasetIndex,index});}};evaluateInteractionItems(chart,axis,position,evaluationFunc,true);return items;}function getNearestRadialItems(chart,position,axis,useFinalPosition){let items=[];function evaluationFunc(element,datasetIndex,index){const{startAngle,endAngle}=element.getProps(['startAngle','endAngle'],useFinalPosition);const{angle}=getAngleFromPoint(element,{x:position.x,y:position.y});if(_angleBetween(angle,startAngle,endAngle)){items.push({element,datasetIndex,index});}}evaluateInteractionItems(chart,axis,position,evaluationFunc);return items;}function getNearestCartesianItems(chart,position,axis,intersect,useFinalPosition,includeInvisible){let items=[];const distanceMetric=getDistanceMetricForAxis(axis);let minDistance=Number.POSITIVE_INFINITY;function evaluationFunc(element,datasetIndex,index){const inRange=element.inRange(position.x,position.y,useFinalPosition);if(intersect&&!inRange){return;}const center=element.getCenterPoint(useFinalPosition);const pointInArea=!!includeInvisible||chart.isPointInArea(center);if(!pointInArea&&!inRange){return;}const distance=distanceMetric(position,center);if(distance<minDistance){items=[{element,datasetIndex,index}];minDistance=distance;}else if(distance===minDistance){items.push({element,datasetIndex,index});}}evaluateInteractionItems(chart,axis,position,evaluationFunc);return items;}function getNearestItems(chart,position,axis,intersect,useFinalPosition,includeInvisible){if(!includeInvisible&&!chart.isPointInArea(position)){return[];}return axis==='r'&&!intersect?getNearestRadialItems(chart,position,axis,useFinalPosition):getNearestCartesianItems(chart,position,axis,intersect,useFinalPosition,includeInvisible);}function getAxisItems(chart,position,axis,intersect,useFinalPosition){const items=[];const rangeMethod=axis==='x'?'inXRange':'inYRange';let intersectsItem=false;evaluateInteractionItems(chart,axis,position,(element,datasetIndex,index)=>{if(element[rangeMethod](position[axis],useFinalPosition)){items.push({element,datasetIndex,index});intersectsItem=intersectsItem||element.inRange(position.x,position.y,useFinalPosition);}});if(intersect&&!intersectsItem){return[];}return items;}var Interaction={evaluateInteractionItems,modes:{index(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'x';const includeInvisible=options.includeInvisible||false;const items=options.intersect?getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible):getNearestItems(chart,position,axis,false,useFinalPosition,includeInvisible);const elements=[];if(!items.length){return[];}chart.getSortedVisibleDatasetMetas().forEach(meta=>{const index=items[0].index;const element=meta.data[index];if(element&&!element.skip){elements.push({element,datasetIndex:meta.index,index});}});return elements;},dataset(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;let items=options.intersect?getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible):getNearestItems(chart,position,axis,false,useFinalPosition,includeInvisible);if(items.length>0){const datasetIndex=items[0].datasetIndex;const data=chart.getDatasetMeta(datasetIndex).data;items=[];for(let i=0;i<data.length;++i){items.push({element:data[i],datasetIndex,index:i});}}return items;},point(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;return getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible);},nearest(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;return getNearestItems(chart,position,axis,options.intersect,useFinalPosition,includeInvisible);},x(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);return getAxisItems(chart,position,'x',options.intersect,useFinalPosition);},y(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);return getAxisItems(chart,position,'y',options.intersect,useFinalPosition);}}};const STATIC_POSITIONS=['left','top','right','bottom'];function filterByPosition(array,position){return array.filter(v=>v.pos===position);}function filterDynamicPositionByAxis(array,axis){return array.filter(v=>STATIC_POSITIONS.indexOf(v.pos)===-1&&v.box.axis===axis);}function sortByWeight(array,reverse){return array.sort((a,b)=>{const v0=reverse?b:a;const v1=reverse?a:b;return v0.weight===v1.weight?v0.index-v1.index:v0.weight-v1.weight;});}function wrapBoxes(boxes){const layoutBoxes=[];let i,ilen,box,pos,stack,stackWeight;for(i=0,ilen=(boxes||[]).length;i<ilen;++i){box=boxes[i];({position:pos,options:{stack,stackWeight=1}}=box);layoutBoxes.push({index:i,box,pos,horizontal:box.isHorizontal(),weight:box.weight,stack:stack&&pos+stack,stackWeight});}return layoutBoxes;}function buildStacks(layouts){const stacks={};for(const wrap of layouts){const{stack,pos,stackWeight}=wrap;if(!stack||!STATIC_POSITIONS.includes(pos)){continue;}const _stack=stacks[stack]||(stacks[stack]={count:0,placed:0,weight:0,size:0});_stack.count++;_stack.weight+=stackWeight;}return stacks;}function setLayoutDims(layouts,params){const stacks=buildStacks(layouts);const{vBoxMaxWidth,hBoxMaxHeight}=params;let i,ilen,layout;for(i=0,ilen=layouts.length;i<ilen;++i){layout=layouts[i];const{fullSize}=layout.box;const stack=stacks[layout.stack];const factor=stack&&layout.stackWeight/stack.weight;if(layout.horizontal){layout.width=factor?factor*vBoxMaxWidth:fullSize&&params.availableWidth;layout.height=hBoxMaxHeight;}else{layout.width=vBoxMaxWidth;layout.height=factor?factor*hBoxMaxHeight:fullSize&&params.availableHeight;}}return stacks;}function buildLayoutBoxes(boxes){const layoutBoxes=wrapBoxes(boxes);const fullSize=sortByWeight(layoutBoxes.filter(wrap=>wrap.box.fullSize),true);const left=sortByWeight(filterByPosition(layoutBoxes,'left'),true);const right=sortByWeight(filterByPosition(layoutBoxes,'right'));const top=sortByWeight(filterByPosition(layoutBoxes,'top'),true);const bottom=sortByWeight(filterByPosition(layoutBoxes,'bottom'));const centerHorizontal=filterDynamicPositionByAxis(layoutBoxes,'x');const centerVertical=filterDynamicPositionByAxis(layoutBoxes,'y');return{fullSize,leftAndTop:left.concat(top),rightAndBottom:right.concat(centerVertical).concat(bottom).concat(centerHorizontal),chartArea:filterByPosition(layoutBoxes,'chartArea'),vertical:left.concat(right).concat(centerVertical),horizontal:top.concat(bottom).concat(centerHorizontal)};}function getCombinedMax(maxPadding,chartArea,a,b){return Math.max(maxPadding[a],chartArea[a])+Math.max(maxPadding[b],chartArea[b]);}function updateMaxPadding(maxPadding,boxPadding){maxPadding.top=Math.max(maxPadding.top,boxPadding.top);maxPadding.left=Math.max(maxPadding.left,boxPadding.left);maxPadding.bottom=Math.max(maxPadding.bottom,boxPadding.bottom);maxPadding.right=Math.max(maxPadding.right,boxPadding.right);}function updateDims(chartArea,params,layout,stacks){const{pos,box}=layout;const maxPadding=chartArea.maxPadding;if(!isObject(pos)){if(layout.size){chartArea[pos]-=layout.size;}const stack=stacks[layout.stack]||{size:0,count:1};stack.size=Math.max(stack.size,layout.horizontal?box.height:box.width);layout.size=stack.size/stack.count;chartArea[pos]+=layout.size;}if(box.getPadding){updateMaxPadding(maxPadding,box.getPadding());}const newWidth=Math.max(0,params.outerWidth-getCombinedMax(maxPadding,chartArea,'left','right'));const newHeight=Math.max(0,params.outerHeight-getCombinedMax(maxPadding,chartArea,'top','bottom'));const widthChanged=newWidth!==chartArea.w;const heightChanged=newHeight!==chartArea.h;chartArea.w=newWidth;chartArea.h=newHeight;return layout.horizontal?{same:widthChanged,other:heightChanged}:{same:heightChanged,other:widthChanged};}function handleMaxPadding(chartArea){const maxPadding=chartArea.maxPadding;function updatePos(pos){const change=Math.max(maxPadding[pos]-chartArea[pos],0);chartArea[pos]+=change;return change;}chartArea.y+=updatePos('top');chartArea.x+=updatePos('left');updatePos('right');updatePos('bottom');}function getMargins(horizontal,chartArea){const maxPadding=chartArea.maxPadding;function marginForPositions(positions){const margin={left:0,top:0,right:0,bottom:0};positions.forEach(pos=>{margin[pos]=Math.max(chartArea[pos],maxPadding[pos]);});return margin;}return horizontal?marginForPositions(['left','right']):marginForPositions(['top','bottom']);}function fitBoxes(boxes,chartArea,params,stacks){const refitBoxes=[];let i,ilen,layout,box,refit,changed;for(i=0,ilen=boxes.length,refit=0;i<ilen;++i){layout=boxes[i];box=layout.box;box.update(layout.width||chartArea.w,layout.height||chartArea.h,getMargins(layout.horizontal,chartArea));const{same,other}=updateDims(chartArea,params,layout,stacks);refit|=same&&refitBoxes.length;changed=changed||other;if(!box.fullSize){refitBoxes.push(layout);}}return refit&&fitBoxes(refitBoxes,chartArea,params,stacks)||changed;}function setBoxDims(box,left,top,width,height){box.top=top;box.left=left;box.right=left+width;box.bottom=top+height;box.width=width;box.height=height;}function placeBoxes(boxes,chartArea,params,stacks){const userPadding=params.padding;let{x,y}=chartArea;for(const layout of boxes){const box=layout.box;const stack=stacks[layout.stack]||{count:1,placed:0,weight:1};const weight=layout.stackWeight/stack.weight||1;if(layout.horizontal){const width=chartArea.w*weight;const height=stack.size||box.height;if(defined(stack.start)){y=stack.start;}if(box.fullSize){setBoxDims(box,userPadding.left,y,params.outerWidth-userPadding.right-userPadding.left,height);}else{setBoxDims(box,chartArea.left+stack.placed,y,width,height);}stack.start=y;stack.placed+=width;y=box.bottom;}else{const height=chartArea.h*weight;const width=stack.size||box.width;if(defined(stack.start)){x=stack.start;}if(box.fullSize){setBoxDims(box,x,userPadding.top,width,params.outerHeight-userPadding.bottom-userPadding.top);}else{setBoxDims(box,x,chartArea.top+stack.placed,width,height);}stack.start=x;stack.placed+=height;x=box.right;}}chartArea.x=x;chartArea.y=y;}var layouts={addBox(chart,item){if(!chart.boxes){chart.boxes=[];}item.fullSize=item.fullSize||false;item.position=item.position||'top';item.weight=item.weight||0;item._layers=item._layers||function(){return[{z:0,draw(chartArea){item.draw(chartArea);}}];};chart.boxes.push(item);},removeBox(chart,layoutItem){const index=chart.boxes?chart.boxes.indexOf(layoutItem):-1;if(index!==-1){chart.boxes.splice(index,1);}},configure(chart,item,options){item.fullSize=options.fullSize;item.position=options.position;item.weight=options.weight;},update(chart,width,height,minPadding){if(!chart){return;}const padding=toPadding(chart.options.layout.padding);const availableWidth=Math.max(width-padding.width,0);const availableHeight=Math.max(height-padding.height,0);const boxes=buildLayoutBoxes(chart.boxes);const verticalBoxes=boxes.vertical;const horizontalBoxes=boxes.horizontal;each(chart.boxes,box=>{if(typeof box.beforeLayout==='function'){box.beforeLayout();}});const visibleVerticalBoxCount=verticalBoxes.reduce((total,wrap)=>wrap.box.options&&wrap.box.options.display===false?total:total+1,0)||1;const params=Object.freeze({outerWidth:width,outerHeight:height,padding,availableWidth,availableHeight,vBoxMaxWidth:availableWidth/2/visibleVerticalBoxCount,hBoxMaxHeight:availableHeight/2});const maxPadding=Object.assign({},padding);updateMaxPadding(maxPadding,toPadding(minPadding));const chartArea=Object.assign({maxPadding,w:availableWidth,h:availableHeight,x:padding.left,y:padding.top},padding);const stacks=setLayoutDims(verticalBoxes.concat(horizontalBoxes),params);fitBoxes(boxes.fullSize,chartArea,params,stacks);fitBoxes(verticalBoxes,chartArea,params,stacks);if(fitBoxes(horizontalBoxes,chartArea,params,stacks)){fitBoxes(verticalBoxes,chartArea,params,stacks);}handleMaxPadding(chartArea);placeBoxes(boxes.leftAndTop,chartArea,params,stacks);chartArea.x+=chartArea.w;chartArea.y+=chartArea.h;placeBoxes(boxes.rightAndBottom,chartArea,params,stacks);chart.chartArea={left:chartArea.left,top:chartArea.top,right:chartArea.left+chartArea.w,bottom:chartArea.top+chartArea.h,height:chartArea.h,width:chartArea.w};each(boxes.chartArea,layout=>{const box=layout.box;Object.assign(box,chart.chartArea);box.update(chartArea.w,chartArea.h,{left:0,top:0,right:0,bottom:0});});}};class BasePlatform{acquireContext(canvas,aspectRatio){}releaseContext(context){return false;}addEventListener(chart,type,listener){}removeEventListener(chart,type,listener){}getDevicePixelRatio(){return 1;}getMaximumSize(element,width,height,aspectRatio){width=Math.max(0,width||element.width);height=height||element.height;return{width,height:Math.max(0,aspectRatio?Math.floor(width/aspectRatio):height)};}isAttached(canvas){return true;}updateConfig(config){}}class BasicPlatform extends BasePlatform{acquireContext(item){return item&&item.getContext&&item.getContext('2d')||null;}updateConfig(config){config.options.animation=false;}}const EXPANDO_KEY='$chartjs';const EVENT_TYPES={touchstart:'mousedown',touchmove:'mousemove',touchend:'mouseup',pointerenter:'mouseenter',pointerdown:'mousedown',pointermove:'mousemove',pointerup:'mouseup',pointerleave:'mouseout',pointerout:'mouseout'};const isNullOrEmpty=value=>value===null||value==='';function initCanvas(canvas,aspectRatio){const style=canvas.style;const renderHeight=canvas.getAttribute('height');const renderWidth=canvas.getAttribute('width');canvas[EXPANDO_KEY]={initial:{height:renderHeight,width:renderWidth,style:{display:style.display,height:style.height,width:style.width}}};style.display=style.display||'block';style.boxSizing=style.boxSizing||'border-box';if(isNullOrEmpty(renderWidth)){const displayWidth=readUsedSize(canvas,'width');if(displayWidth!==undefined){canvas.width=displayWidth;}}if(isNullOrEmpty(renderHeight)){if(canvas.style.height===''){canvas.height=canvas.width/(aspectRatio||2);}else{const displayHeight=readUsedSize(canvas,'height');if(displayHeight!==undefined){canvas.height=displayHeight;}}}return canvas;}const eventListenerOptions=supportsEventListenerOptions?{passive:true}:false;function addListener(node,type,listener){if(node){node.addEventListener(type,listener,eventListenerOptions);}}function removeListener(chart,type,listener){if(chart&&chart.canvas){chart.canvas.removeEventListener(type,listener,eventListenerOptions);}}function fromNativeEvent(event,chart){const type=EVENT_TYPES[event.type]||event.type;const{x,y}=getRelativePosition(event,chart);return{type,chart,native:event,x:x!==undefined?x:null,y:y!==undefined?y:null};}function nodeListContains(nodeList,canvas){for(const node of nodeList){if(node===canvas||node.contains(canvas)){return true;}}}function createAttachObserver(chart,type,listener){const canvas=chart.canvas;const observer=new MutationObserver(entries=>{let trigger=false;for(const entry of entries){trigger=trigger||nodeListContains(entry.addedNodes,canvas);trigger=trigger&&!nodeListContains(entry.removedNodes,canvas);}if(trigger){listener();}});observer.observe(document,{childList:true,subtree:true});return observer;}function createDetachObserver(chart,type,listener){const canvas=chart.canvas;const observer=new MutationObserver(entries=>{let trigger=false;for(const entry of entries){trigger=trigger||nodeListContains(entry.removedNodes,canvas);trigger=trigger&&!nodeListContains(entry.addedNodes,canvas);}if(trigger){listener();}});observer.observe(document,{childList:true,subtree:true});return observer;}const drpListeningCharts=new Map();let oldDevicePixelRatio=0;function onWindowResize(){const dpr=window.devicePixelRatio;if(dpr===oldDevicePixelRatio){return;}oldDevicePixelRatio=dpr;drpListeningCharts.forEach((resize,chart)=>{if(chart.currentDevicePixelRatio!==dpr){resize();}});}function listenDevicePixelRatioChanges(chart,resize){if(!drpListeningCharts.size){window.addEventListener('resize',onWindowResize);}drpListeningCharts.set(chart,resize);}function unlistenDevicePixelRatioChanges(chart){drpListeningCharts.delete(chart);if(!drpListeningCharts.size){window.removeEventListener('resize',onWindowResize);}}function createResizeObserver(chart,type,listener){const canvas=chart.canvas;const container=canvas&&_getParentNode(canvas);if(!container){return;}const resize=throttled((width,height)=>{const w=container.clientWidth;listener(width,height);if(w<container.clientWidth){listener();}},window);const observer=new ResizeObserver(entries=>{const entry=entries[0];const width=entry.contentRect.width;const height=entry.contentRect.height;if(width===0&&height===0){return;}resize(width,height);});observer.observe(container);listenDevicePixelRatioChanges(chart,resize);return observer;}function releaseObserver(chart,type,observer){if(observer){observer.disconnect();}if(type==='resize'){unlistenDevicePixelRatioChanges(chart);}}function createProxyAndListen(chart,type,listener){const canvas=chart.canvas;const proxy=throttled(event=>{if(chart.ctx!==null){listener(fromNativeEvent(event,chart));}},chart);addListener(canvas,type,proxy);return proxy;}class DomPlatform extends BasePlatform{acquireContext(canvas,aspectRatio){const context=canvas&&canvas.getContext&&canvas.getContext('2d');if(context&&context.canvas===canvas){initCanvas(canvas,aspectRatio);return context;}return null;}releaseContext(context){const canvas=context.canvas;if(!canvas[EXPANDO_KEY]){return false;}const initial=canvas[EXPANDO_KEY].initial;['height','width'].forEach(prop=>{const value=initial[prop];if(isNullOrUndef(value)){canvas.removeAttribute(prop);}else{canvas.setAttribute(prop,value);}});const style=initial.style||{};Object.keys(style).forEach(key=>{canvas.style[key]=style[key];});canvas.width=canvas.width;delete canvas[EXPANDO_KEY];return true;}addEventListener(chart,type,listener){this.removeEventListener(chart,type);const proxies=chart.$proxies||(chart.$proxies={});const handlers={attach:createAttachObserver,detach:createDetachObserver,resize:createResizeObserver};const handler=handlers[type]||createProxyAndListen;proxies[type]=handler(chart,type,listener);}removeEventListener(chart,type){const proxies=chart.$proxies||(chart.$proxies={});const proxy=proxies[type];if(!proxy){return;}const handlers={attach:releaseObserver,detach:releaseObserver,resize:releaseObserver};const handler=handlers[type]||removeListener;handler(chart,type,proxy);proxies[type]=undefined;}getDevicePixelRatio(){return window.devicePixelRatio;}getMaximumSize(canvas,width,height,aspectRatio){return getMaximumSize(canvas,width,height,aspectRatio);}isAttached(canvas){const container=canvas&&_getParentNode(canvas);return!!(container&&container.isConnected);}}function _detectPlatform(canvas){if(!_isDomSupported()||typeof OffscreenCanvas!=='undefined'&&canvas instanceof OffscreenCanvas){return BasicPlatform;}return DomPlatform;}class Element{constructor(){this.active=false;}tooltipPosition(useFinalPosition){const{x,y}=this.getProps(['x','y'],useFinalPosition);return{x,y};}hasValue(){return isNumber(this.x)&&isNumber(this.y);}getProps(props,final){const anims=this.$animations;if(!final||!anims){// let's not create an object, if not needed\nreturn this;}const ret={};props.forEach(prop=>{ret[prop]=anims[prop]&&anims[prop].active()?anims[prop]._to:this[prop];});return ret;}}Element.defaults={};Element.defaultRoutes=undefined;function autoSkip(scale,ticks){const tickOpts=scale.options.ticks;const determinedMaxTicks=determineMaxTicks(scale);const ticksLimit=Math.min(tickOpts.maxTicksLimit||determinedMaxTicks,determinedMaxTicks);const majorIndices=tickOpts.major.enabled?getMajorIndices(ticks):[];const numMajorIndices=majorIndices.length;const first=majorIndices[0];const last=majorIndices[numMajorIndices-1];const newTicks=[];if(numMajorIndices>ticksLimit){skipMajors(ticks,newTicks,majorIndices,numMajorIndices/ticksLimit);return newTicks;}const spacing=calculateSpacing(majorIndices,ticks,ticksLimit);if(numMajorIndices>0){let i,ilen;const avgMajorSpacing=numMajorIndices>1?Math.round((last-first)/(numMajorIndices-1)):null;skip(ticks,newTicks,spacing,isNullOrUndef(avgMajorSpacing)?0:first-avgMajorSpacing,first);for(i=0,ilen=numMajorIndices-1;i<ilen;i++){skip(ticks,newTicks,spacing,majorIndices[i],majorIndices[i+1]);}skip(ticks,newTicks,spacing,last,isNullOrUndef(avgMajorSpacing)?ticks.length:last+avgMajorSpacing);return newTicks;}skip(ticks,newTicks,spacing);return newTicks;}function determineMaxTicks(scale){const offset=scale.options.offset;const tickLength=scale._tickSize();const maxScale=scale._length/tickLength+(offset?0:1);const maxChart=scale._maxLength/tickLength;return Math.floor(Math.min(maxScale,maxChart));}function calculateSpacing(majorIndices,ticks,ticksLimit){const evenMajorSpacing=getEvenSpacing(majorIndices);const spacing=ticks.length/ticksLimit;if(!evenMajorSpacing){return Math.max(spacing,1);}const factors=_factorize(evenMajorSpacing);for(let i=0,ilen=factors.length-1;i<ilen;i++){const factor=factors[i];if(factor>spacing){return factor;}}return Math.max(spacing,1);}function getMajorIndices(ticks){const result=[];let i,ilen;for(i=0,ilen=ticks.length;i<ilen;i++){if(ticks[i].major){result.push(i);}}return result;}function skipMajors(ticks,newTicks,majorIndices,spacing){let count=0;let next=majorIndices[0];let i;spacing=Math.ceil(spacing);for(i=0;i<ticks.length;i++){if(i===next){newTicks.push(ticks[i]);count++;next=majorIndices[count*spacing];}}}function skip(ticks,newTicks,spacing,majorStart,majorEnd){const start=valueOrDefault(majorStart,0);const end=Math.min(valueOrDefault(majorEnd,ticks.length),ticks.length);let count=0;let length,i,next;spacing=Math.ceil(spacing);if(majorEnd){length=majorEnd-majorStart;spacing=length/Math.floor(length/spacing);}next=start;while(next<0){count++;next=Math.round(start+count*spacing);}for(i=Math.max(start,0);i<end;i++){if(i===next){newTicks.push(ticks[i]);count++;next=Math.round(start+count*spacing);}}}function getEvenSpacing(arr){const len=arr.length;let i,diff;if(len<2){return false;}for(diff=arr[0],i=1;i<len;++i){if(arr[i]-arr[i-1]!==diff){return false;}}return diff;}const reverseAlign=align=>align==='left'?'right':align==='right'?'left':align;const offsetFromEdge=(scale,edge,offset)=>edge==='top'||edge==='left'?scale[edge]+offset:scale[edge]-offset;const getTicksLimit=(ticksLength,maxTicksLimit)=>Math.min(maxTicksLimit||ticksLength,ticksLength);function sample(arr,numItems){const result=[];const increment=arr.length/numItems;const len=arr.length;let i=0;for(;i<len;i+=increment){result.push(arr[Math.floor(i)]);}return result;}function getPixelForGridLine(scale,index,offsetGridLines){const length=scale.ticks.length;const validIndex=Math.min(index,length-1);const start=scale._startPixel;const end=scale._endPixel;const epsilon=1e-6;let lineValue=scale.getPixelForTick(validIndex);let offset;if(offsetGridLines){if(length===1){offset=Math.max(lineValue-start,end-lineValue);}else if(index===0){offset=(scale.getPixelForTick(1)-lineValue)/2;}else{offset=(lineValue-scale.getPixelForTick(validIndex-1))/2;}lineValue+=validIndex<index?offset:-offset;if(lineValue<start-epsilon||lineValue>end+epsilon){return;}}return lineValue;}function garbageCollect(caches,length){each(caches,cache=>{const gc=cache.gc;const gcLen=gc.length/2;let i;if(gcLen>length){for(i=0;i<gcLen;++i){delete cache.data[gc[i]];}gc.splice(0,gcLen);}});}function getTickMarkLength(options){return options.drawTicks?options.tickLength:0;}function getTitleHeight(options,fallback){if(!options.display){return 0;}const font=toFont(options.font,fallback);const padding=toPadding(options.padding);const lines=isArray(options.text)?options.text.length:1;return lines*font.lineHeight+padding.height;}function createScaleContext(parent,scale){return createContext(parent,{scale,type:'scale'});}function createTickContext(parent,index,tick){return createContext(parent,{tick,index,type:'tick'});}function titleAlign(align,position,reverse){let ret=_toLeftRightCenter(align);if(reverse&&position!=='right'||!reverse&&position==='right'){ret=reverseAlign(ret);}return ret;}function titleArgs(scale,offset,position,align){const{top,left,bottom,right,chart}=scale;const{chartArea,scales}=chart;let rotation=0;let maxWidth,titleX,titleY;const height=bottom-top;const width=right-left;if(scale.isHorizontal()){titleX=_alignStartEnd(align,left,right);if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];titleY=scales[positionAxisID].getPixelForValue(value)+height-offset;}else if(position==='center'){titleY=(chartArea.bottom+chartArea.top)/2+height-offset;}else{titleY=offsetFromEdge(scale,position,offset);}maxWidth=right-left;}else{if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];titleX=scales[positionAxisID].getPixelForValue(value)-width+offset;}else if(position==='center'){titleX=(chartArea.left+chartArea.right)/2-width+offset;}else{titleX=offsetFromEdge(scale,position,offset);}titleY=_alignStartEnd(align,bottom,top);rotation=position==='left'?-HALF_PI:HALF_PI;}return{titleX,titleY,maxWidth,rotation};}class Scale extends Element{constructor(cfg){super();this.id=cfg.id;this.type=cfg.type;this.options=undefined;this.ctx=cfg.ctx;this.chart=cfg.chart;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.width=undefined;this.height=undefined;this._margins={left:0,right:0,top:0,bottom:0};this.maxWidth=undefined;this.maxHeight=undefined;this.paddingTop=undefined;this.paddingBottom=undefined;this.paddingLeft=undefined;this.paddingRight=undefined;this.axis=undefined;this.labelRotation=undefined;this.min=undefined;this.max=undefined;this._range=undefined;this.ticks=[];this._gridLineItems=null;this._labelItems=null;this._labelSizes=null;this._length=0;this._maxLength=0;this._longestTextCache={};this._startPixel=undefined;this._endPixel=undefined;this._reversePixels=false;this._userMax=undefined;this._userMin=undefined;this._suggestedMax=undefined;this._suggestedMin=undefined;this._ticksLength=0;this._borderValue=0;this._cache={};this._dataLimitsCached=false;this.$context=undefined;}init(options){this.options=options.setContext(this.getContext());this.axis=options.axis;this._userMin=this.parse(options.min);this._userMax=this.parse(options.max);this._suggestedMin=this.parse(options.suggestedMin);this._suggestedMax=this.parse(options.suggestedMax);}parse(raw,index){return raw;}getUserBounds(){let{_userMin,_userMax,_suggestedMin,_suggestedMax}=this;_userMin=finiteOrDefault(_userMin,Number.POSITIVE_INFINITY);_userMax=finiteOrDefault(_userMax,Number.NEGATIVE_INFINITY);_suggestedMin=finiteOrDefault(_suggestedMin,Number.POSITIVE_INFINITY);_suggestedMax=finiteOrDefault(_suggestedMax,Number.NEGATIVE_INFINITY);return{min:finiteOrDefault(_userMin,_suggestedMin),max:finiteOrDefault(_userMax,_suggestedMax),minDefined:isNumberFinite(_userMin),maxDefined:isNumberFinite(_userMax)};}getMinMax(canStack){let{min,max,minDefined,maxDefined}=this.getUserBounds();let range;if(minDefined&&maxDefined){return{min,max};}const metas=this.getMatchingVisibleMetas();for(let i=0,ilen=metas.length;i<ilen;++i){range=metas[i].controller.getMinMax(this,canStack);if(!minDefined){min=Math.min(min,range.min);}if(!maxDefined){max=Math.max(max,range.max);}}min=maxDefined&&min>max?max:min;max=minDefined&&min>max?min:max;return{min:finiteOrDefault(min,finiteOrDefault(max,min)),max:finiteOrDefault(max,finiteOrDefault(min,max))};}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0};}getTicks(){return this.ticks;}getLabels(){const data=this.chart.data;return this.options.labels||(this.isHorizontal()?data.xLabels:data.yLabels)||data.labels||[];}getLabelItems(){let chartArea=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.chart.chartArea;const items=this._labelItems||(this._labelItems=this._computeLabelItems(chartArea));return items;}beforeLayout(){this._cache={};this._dataLimitsCached=false;}beforeUpdate(){callback(this.options.beforeUpdate,[this]);}update(maxWidth,maxHeight,margins){const{beginAtZero,grace,ticks:tickOpts}=this.options;const sampleSize=tickOpts.sampleSize;this.beforeUpdate();this.maxWidth=maxWidth;this.maxHeight=maxHeight;this._margins=margins=Object.assign({left:0,right:0,top:0,bottom:0},margins);this.ticks=null;this._labelSizes=null;this._gridLineItems=null;this._labelItems=null;this.beforeSetDimensions();this.setDimensions();this.afterSetDimensions();this._maxLength=this.isHorizontal()?this.width+margins.left+margins.right:this.height+margins.top+margins.bottom;if(!this._dataLimitsCached){this.beforeDataLimits();this.determineDataLimits();this.afterDataLimits();this._range=_addGrace(this,grace,beginAtZero);this._dataLimitsCached=true;}this.beforeBuildTicks();this.ticks=this.buildTicks()||[];this.afterBuildTicks();const samplingEnabled=sampleSize<this.ticks.length;this._convertTicksToLabels(samplingEnabled?sample(this.ticks,sampleSize):this.ticks);this.configure();this.beforeCalculateLabelRotation();this.calculateLabelRotation();this.afterCalculateLabelRotation();if(tickOpts.display&&(tickOpts.autoSkip||tickOpts.source==='auto')){this.ticks=autoSkip(this,this.ticks);this._labelSizes=null;this.afterAutoSkip();}if(samplingEnabled){this._convertTicksToLabels(this.ticks);}this.beforeFit();this.fit();this.afterFit();this.afterUpdate();}configure(){let reversePixels=this.options.reverse;let startPixel,endPixel;if(this.isHorizontal()){startPixel=this.left;endPixel=this.right;}else{startPixel=this.top;endPixel=this.bottom;reversePixels=!reversePixels;}this._startPixel=startPixel;this._endPixel=endPixel;this._reversePixels=reversePixels;this._length=endPixel-startPixel;this._alignToPixels=this.options.alignToPixels;}afterUpdate(){callback(this.options.afterUpdate,[this]);}beforeSetDimensions(){callback(this.options.beforeSetDimensions,[this]);}setDimensions(){if(this.isHorizontal()){this.width=this.maxWidth;this.left=0;this.right=this.width;}else{this.height=this.maxHeight;this.top=0;this.bottom=this.height;}this.paddingLeft=0;this.paddingTop=0;this.paddingRight=0;this.paddingBottom=0;}afterSetDimensions(){callback(this.options.afterSetDimensions,[this]);}_callHooks(name){this.chart.notifyPlugins(name,this.getContext());callback(this.options[name],[this]);}beforeDataLimits(){this._callHooks('beforeDataLimits');}determineDataLimits(){}afterDataLimits(){this._callHooks('afterDataLimits');}beforeBuildTicks(){this._callHooks('beforeBuildTicks');}buildTicks(){return[];}afterBuildTicks(){this._callHooks('afterBuildTicks');}beforeTickToLabelConversion(){callback(this.options.beforeTickToLabelConversion,[this]);}generateTickLabels(ticks){const tickOpts=this.options.ticks;let i,ilen,tick;for(i=0,ilen=ticks.length;i<ilen;i++){tick=ticks[i];tick.label=callback(tickOpts.callback,[tick.value,i,ticks],this);}}afterTickToLabelConversion(){callback(this.options.afterTickToLabelConversion,[this]);}beforeCalculateLabelRotation(){callback(this.options.beforeCalculateLabelRotation,[this]);}calculateLabelRotation(){const options=this.options;const tickOpts=options.ticks;const numTicks=getTicksLimit(this.ticks.length,options.ticks.maxTicksLimit);const minRotation=tickOpts.minRotation||0;const maxRotation=tickOpts.maxRotation;let labelRotation=minRotation;let tickWidth,maxHeight,maxLabelDiagonal;if(!this._isVisible()||!tickOpts.display||minRotation>=maxRotation||numTicks<=1||!this.isHorizontal()){this.labelRotation=minRotation;return;}const labelSizes=this._getLabelSizes();const maxLabelWidth=labelSizes.widest.width;const maxLabelHeight=labelSizes.highest.height;const maxWidth=_limitValue(this.chart.width-maxLabelWidth,0,this.maxWidth);tickWidth=options.offset?this.maxWidth/numTicks:maxWidth/(numTicks-1);if(maxLabelWidth+6>tickWidth){tickWidth=maxWidth/(numTicks-(options.offset?0.5:1));maxHeight=this.maxHeight-getTickMarkLength(options.grid)-tickOpts.padding-getTitleHeight(options.title,this.chart.options.font);maxLabelDiagonal=Math.sqrt(maxLabelWidth*maxLabelWidth+maxLabelHeight*maxLabelHeight);labelRotation=toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height+6)/tickWidth,-1,1)),Math.asin(_limitValue(maxHeight/maxLabelDiagonal,-1,1))-Math.asin(_limitValue(maxLabelHeight/maxLabelDiagonal,-1,1))));labelRotation=Math.max(minRotation,Math.min(maxRotation,labelRotation));}this.labelRotation=labelRotation;}afterCalculateLabelRotation(){callback(this.options.afterCalculateLabelRotation,[this]);}afterAutoSkip(){}beforeFit(){callback(this.options.beforeFit,[this]);}fit(){const minSize={width:0,height:0};const{chart,options:{ticks:tickOpts,title:titleOpts,grid:gridOpts}}=this;const display=this._isVisible();const isHorizontal=this.isHorizontal();if(display){const titleHeight=getTitleHeight(titleOpts,chart.options.font);if(isHorizontal){minSize.width=this.maxWidth;minSize.height=getTickMarkLength(gridOpts)+titleHeight;}else{minSize.height=this.maxHeight;minSize.width=getTickMarkLength(gridOpts)+titleHeight;}if(tickOpts.display&&this.ticks.length){const{first,last,widest,highest}=this._getLabelSizes();const tickPadding=tickOpts.padding*2;const angleRadians=toRadians(this.labelRotation);const cos=Math.cos(angleRadians);const sin=Math.sin(angleRadians);if(isHorizontal){const labelHeight=tickOpts.mirror?0:sin*widest.width+cos*highest.height;minSize.height=Math.min(this.maxHeight,minSize.height+labelHeight+tickPadding);}else{const labelWidth=tickOpts.mirror?0:cos*widest.width+sin*highest.height;minSize.width=Math.min(this.maxWidth,minSize.width+labelWidth+tickPadding);}this._calculatePadding(first,last,sin,cos);}}this._handleMargins();if(isHorizontal){this.width=this._length=chart.width-this._margins.left-this._margins.right;this.height=minSize.height;}else{this.width=minSize.width;this.height=this._length=chart.height-this._margins.top-this._margins.bottom;}}_calculatePadding(first,last,sin,cos){const{ticks:{align,padding},position}=this.options;const isRotated=this.labelRotation!==0;const labelsBelowTicks=position!=='top'&&this.axis==='x';if(this.isHorizontal()){const offsetLeft=this.getPixelForTick(0)-this.left;const offsetRight=this.right-this.getPixelForTick(this.ticks.length-1);let paddingLeft=0;let paddingRight=0;if(isRotated){if(labelsBelowTicks){paddingLeft=cos*first.width;paddingRight=sin*last.height;}else{paddingLeft=sin*first.height;paddingRight=cos*last.width;}}else if(align==='start'){paddingRight=last.width;}else if(align==='end'){paddingLeft=first.width;}else if(align!=='inner'){paddingLeft=first.width/2;paddingRight=last.width/2;}this.paddingLeft=Math.max((paddingLeft-offsetLeft+padding)*this.width/(this.width-offsetLeft),0);this.paddingRight=Math.max((paddingRight-offsetRight+padding)*this.width/(this.width-offsetRight),0);}else{let paddingTop=last.height/2;let paddingBottom=first.height/2;if(align==='start'){paddingTop=0;paddingBottom=first.height;}else if(align==='end'){paddingTop=last.height;paddingBottom=0;}this.paddingTop=paddingTop+padding;this.paddingBottom=paddingBottom+padding;}}_handleMargins(){if(this._margins){this._margins.left=Math.max(this.paddingLeft,this._margins.left);this._margins.top=Math.max(this.paddingTop,this._margins.top);this._margins.right=Math.max(this.paddingRight,this._margins.right);this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom);}}afterFit(){callback(this.options.afterFit,[this]);}isHorizontal(){const{axis,position}=this.options;return position==='top'||position==='bottom'||axis==='x';}isFullSize(){return this.options.fullSize;}_convertTicksToLabels(ticks){this.beforeTickToLabelConversion();this.generateTickLabels(ticks);let i,ilen;for(i=0,ilen=ticks.length;i<ilen;i++){if(isNullOrUndef(ticks[i].label)){ticks.splice(i,1);ilen--;i--;}}this.afterTickToLabelConversion();}_getLabelSizes(){let labelSizes=this._labelSizes;if(!labelSizes){const sampleSize=this.options.ticks.sampleSize;let ticks=this.ticks;if(sampleSize<ticks.length){ticks=sample(ticks,sampleSize);}this._labelSizes=labelSizes=this._computeLabelSizes(ticks,ticks.length,this.options.ticks.maxTicksLimit);}return labelSizes;}_computeLabelSizes(ticks,length,maxTicksLimit){const{ctx,_longestTextCache:caches}=this;const widths=[];const heights=[];const increment=Math.floor(length/getTicksLimit(length,maxTicksLimit));let widestLabelSize=0;let highestLabelSize=0;let i,j,jlen,label,tickFont,fontString,cache,lineHeight,width,height,nestedLabel;for(i=0;i<length;i+=increment){label=ticks[i].label;tickFont=this._resolveTickFontOptions(i);ctx.font=fontString=tickFont.string;cache=caches[fontString]=caches[fontString]||{data:{},gc:[]};lineHeight=tickFont.lineHeight;width=height=0;if(!isNullOrUndef(label)&&!isArray(label)){width=_measureText(ctx,cache.data,cache.gc,width,label);height=lineHeight;}else if(isArray(label)){for(j=0,jlen=label.length;j<jlen;++j){nestedLabel=label[j];if(!isNullOrUndef(nestedLabel)&&!isArray(nestedLabel)){width=_measureText(ctx,cache.data,cache.gc,width,nestedLabel);height+=lineHeight;}}}widths.push(width);heights.push(height);widestLabelSize=Math.max(width,widestLabelSize);highestLabelSize=Math.max(height,highestLabelSize);}garbageCollect(caches,length);const widest=widths.indexOf(widestLabelSize);const highest=heights.indexOf(highestLabelSize);const valueAt=idx=>({width:widths[idx]||0,height:heights[idx]||0});return{first:valueAt(0),last:valueAt(length-1),widest:valueAt(widest),highest:valueAt(highest),widths,heights};}getLabelForValue(value){return value;}getPixelForValue(value,index){return NaN;}getValueForPixel(pixel){}getPixelForTick(index){const ticks=this.ticks;if(index<0||index>ticks.length-1){return null;}return this.getPixelForValue(ticks[index].value);}getPixelForDecimal(decimal){if(this._reversePixels){decimal=1-decimal;}const pixel=this._startPixel+decimal*this._length;return _int16Range(this._alignToPixels?_alignPixel(this.chart,pixel,0):pixel);}getDecimalForPixel(pixel){const decimal=(pixel-this._startPixel)/this._length;return this._reversePixels?1-decimal:decimal;}getBasePixel(){return this.getPixelForValue(this.getBaseValue());}getBaseValue(){const{min,max}=this;return min<0&&max<0?max:min>0&&max>0?min:0;}getContext(index){const ticks=this.ticks||[];if(index>=0&&index<ticks.length){const tick=ticks[index];return tick.$context||(tick.$context=createTickContext(this.getContext(),index,tick));}return this.$context||(this.$context=createScaleContext(this.chart.getContext(),this));}_tickSize(){const optionTicks=this.options.ticks;const rot=toRadians(this.labelRotation);const cos=Math.abs(Math.cos(rot));const sin=Math.abs(Math.sin(rot));const labelSizes=this._getLabelSizes();const padding=optionTicks.autoSkipPadding||0;const w=labelSizes?labelSizes.widest.width+padding:0;const h=labelSizes?labelSizes.highest.height+padding:0;return this.isHorizontal()?h*cos>w*sin?w/cos:h/sin:h*sin<w*cos?h/cos:w/sin;}_isVisible(){const display=this.options.display;if(display!=='auto'){return!!display;}return this.getMatchingVisibleMetas().length>0;}_computeGridLineItems(chartArea){const axis=this.axis;const chart=this.chart;const options=this.options;const{grid,position,border}=options;const offset=grid.offset;const isHorizontal=this.isHorizontal();const ticks=this.ticks;const ticksLength=ticks.length+(offset?1:0);const tl=getTickMarkLength(grid);const items=[];const borderOpts=border.setContext(this.getContext());const axisWidth=borderOpts.display?borderOpts.width:0;const axisHalfWidth=axisWidth/2;const alignBorderValue=function(pixel){return _alignPixel(chart,pixel,axisWidth);};let borderValue,i,lineValue,alignedLineValue;let tx1,ty1,tx2,ty2,x1,y1,x2,y2;if(position==='top'){borderValue=alignBorderValue(this.bottom);ty1=this.bottom-tl;ty2=borderValue-axisHalfWidth;y1=alignBorderValue(chartArea.top)+axisHalfWidth;y2=chartArea.bottom;}else if(position==='bottom'){borderValue=alignBorderValue(this.top);y1=chartArea.top;y2=alignBorderValue(chartArea.bottom)-axisHalfWidth;ty1=borderValue+axisHalfWidth;ty2=this.top+tl;}else if(position==='left'){borderValue=alignBorderValue(this.right);tx1=this.right-tl;tx2=borderValue-axisHalfWidth;x1=alignBorderValue(chartArea.left)+axisHalfWidth;x2=chartArea.right;}else if(position==='right'){borderValue=alignBorderValue(this.left);x1=chartArea.left;x2=alignBorderValue(chartArea.right)-axisHalfWidth;tx1=borderValue+axisHalfWidth;tx2=this.left+tl;}else if(axis==='x'){if(position==='center'){borderValue=alignBorderValue((chartArea.top+chartArea.bottom)/2+0.5);}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];borderValue=alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));}y1=chartArea.top;y2=chartArea.bottom;ty1=borderValue+axisHalfWidth;ty2=ty1+tl;}else if(axis==='y'){if(position==='center'){borderValue=alignBorderValue((chartArea.left+chartArea.right)/2);}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];borderValue=alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));}tx1=borderValue-axisHalfWidth;tx2=tx1-tl;x1=chartArea.left;x2=chartArea.right;}const limit=valueOrDefault(options.ticks.maxTicksLimit,ticksLength);const step=Math.max(1,Math.ceil(ticksLength/limit));for(i=0;i<ticksLength;i+=step){const context=this.getContext(i);const optsAtIndex=grid.setContext(context);const optsAtIndexBorder=border.setContext(context);const lineWidth=optsAtIndex.lineWidth;const lineColor=optsAtIndex.color;const borderDash=optsAtIndexBorder.dash||[];const borderDashOffset=optsAtIndexBorder.dashOffset;const tickWidth=optsAtIndex.tickWidth;const tickColor=optsAtIndex.tickColor;const tickBorderDash=optsAtIndex.tickBorderDash||[];const tickBorderDashOffset=optsAtIndex.tickBorderDashOffset;lineValue=getPixelForGridLine(this,i,offset);if(lineValue===undefined){continue;}alignedLineValue=_alignPixel(chart,lineValue,lineWidth);if(isHorizontal){tx1=tx2=x1=x2=alignedLineValue;}else{ty1=ty2=y1=y2=alignedLineValue;}items.push({tx1,ty1,tx2,ty2,x1,y1,x2,y2,width:lineWidth,color:lineColor,borderDash,borderDashOffset,tickWidth,tickColor,tickBorderDash,tickBorderDashOffset});}this._ticksLength=ticksLength;this._borderValue=borderValue;return items;}_computeLabelItems(chartArea){const axis=this.axis;const options=this.options;const{position,ticks:optionTicks}=options;const isHorizontal=this.isHorizontal();const ticks=this.ticks;const{align,crossAlign,padding,mirror}=optionTicks;const tl=getTickMarkLength(options.grid);const tickAndPadding=tl+padding;const hTickAndPadding=mirror?-padding:tickAndPadding;const rotation=-toRadians(this.labelRotation);const items=[];let i,ilen,tick,label,x,y,textAlign,pixel,font,lineHeight,lineCount,textOffset;let textBaseline='middle';if(position==='top'){y=this.bottom-hTickAndPadding;textAlign=this._getXAxisLabelAlignment();}else if(position==='bottom'){y=this.top+hTickAndPadding;textAlign=this._getXAxisLabelAlignment();}else if(position==='left'){const ret=this._getYAxisLabelAlignment(tl);textAlign=ret.textAlign;x=ret.x;}else if(position==='right'){const ret=this._getYAxisLabelAlignment(tl);textAlign=ret.textAlign;x=ret.x;}else if(axis==='x'){if(position==='center'){y=(chartArea.top+chartArea.bottom)/2+tickAndPadding;}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];y=this.chart.scales[positionAxisID].getPixelForValue(value)+tickAndPadding;}textAlign=this._getXAxisLabelAlignment();}else if(axis==='y'){if(position==='center'){x=(chartArea.left+chartArea.right)/2-tickAndPadding;}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];x=this.chart.scales[positionAxisID].getPixelForValue(value);}textAlign=this._getYAxisLabelAlignment(tl).textAlign;}if(axis==='y'){if(align==='start'){textBaseline='top';}else if(align==='end'){textBaseline='bottom';}}const labelSizes=this._getLabelSizes();for(i=0,ilen=ticks.length;i<ilen;++i){tick=ticks[i];label=tick.label;const optsAtIndex=optionTicks.setContext(this.getContext(i));pixel=this.getPixelForTick(i)+optionTicks.labelOffset;font=this._resolveTickFontOptions(i);lineHeight=font.lineHeight;lineCount=isArray(label)?label.length:1;const halfCount=lineCount/2;const color=optsAtIndex.color;const strokeColor=optsAtIndex.textStrokeColor;const strokeWidth=optsAtIndex.textStrokeWidth;let tickTextAlign=textAlign;if(isHorizontal){x=pixel;if(textAlign==='inner'){if(i===ilen-1){tickTextAlign=!this.options.reverse?'right':'left';}else if(i===0){tickTextAlign=!this.options.reverse?'left':'right';}else{tickTextAlign='center';}}if(position==='top'){if(crossAlign==='near'||rotation!==0){textOffset=-lineCount*lineHeight+lineHeight/2;}else if(crossAlign==='center'){textOffset=-labelSizes.highest.height/2-halfCount*lineHeight+lineHeight;}else{textOffset=-labelSizes.highest.height+lineHeight/2;}}else{if(crossAlign==='near'||rotation!==0){textOffset=lineHeight/2;}else if(crossAlign==='center'){textOffset=labelSizes.highest.height/2-halfCount*lineHeight;}else{textOffset=labelSizes.highest.height-lineCount*lineHeight;}}if(mirror){textOffset*=-1;}if(rotation!==0&&!optsAtIndex.showLabelBackdrop){x+=lineHeight/2*Math.sin(rotation);}}else{y=pixel;textOffset=(1-lineCount)*lineHeight/2;}let backdrop;if(optsAtIndex.showLabelBackdrop){const labelPadding=toPadding(optsAtIndex.backdropPadding);const height=labelSizes.heights[i];const width=labelSizes.widths[i];let top=textOffset-labelPadding.top;let left=0-labelPadding.left;switch(textBaseline){case'middle':top-=height/2;break;case'bottom':top-=height;break;}switch(textAlign){case'center':left-=width/2;break;case'right':left-=width;break;case'inner':if(i===ilen-1){left-=width;}else if(i>0){left-=width/2;}break;}backdrop={left,top,width:width+labelPadding.width,height:height+labelPadding.height,color:optsAtIndex.backdropColor};}items.push({label,font,textOffset,options:{rotation,color,strokeColor,strokeWidth,textAlign:tickTextAlign,textBaseline,translation:[x,y],backdrop}});}return items;}_getXAxisLabelAlignment(){const{position,ticks}=this.options;const rotation=-toRadians(this.labelRotation);if(rotation){return position==='top'?'left':'right';}let align='center';if(ticks.align==='start'){align='left';}else if(ticks.align==='end'){align='right';}else if(ticks.align==='inner'){align='inner';}return align;}_getYAxisLabelAlignment(tl){const{position,ticks:{crossAlign,mirror,padding}}=this.options;const labelSizes=this._getLabelSizes();const tickAndPadding=tl+padding;const widest=labelSizes.widest.width;let textAlign;let x;if(position==='left'){if(mirror){x=this.right+padding;if(crossAlign==='near'){textAlign='left';}else if(crossAlign==='center'){textAlign='center';x+=widest/2;}else{textAlign='right';x+=widest;}}else{x=this.right-tickAndPadding;if(crossAlign==='near'){textAlign='right';}else if(crossAlign==='center'){textAlign='center';x-=widest/2;}else{textAlign='left';x=this.left;}}}else if(position==='right'){if(mirror){x=this.left+padding;if(crossAlign==='near'){textAlign='right';}else if(crossAlign==='center'){textAlign='center';x-=widest/2;}else{textAlign='left';x-=widest;}}else{x=this.left+tickAndPadding;if(crossAlign==='near'){textAlign='left';}else if(crossAlign==='center'){textAlign='center';x+=widest/2;}else{textAlign='right';x=this.right;}}}else{textAlign='right';}return{textAlign,x};}_computeLabelArea(){if(this.options.ticks.mirror){return;}const chart=this.chart;const position=this.options.position;if(position==='left'||position==='right'){return{top:0,left:this.left,bottom:chart.height,right:this.right};}if(position==='top'||position==='bottom'){return{top:this.top,left:0,bottom:this.bottom,right:chart.width};}}drawBackground(){const{ctx,options:{backgroundColor},left,top,width,height}=this;if(backgroundColor){ctx.save();ctx.fillStyle=backgroundColor;ctx.fillRect(left,top,width,height);ctx.restore();}}getLineWidthForValue(value){const grid=this.options.grid;if(!this._isVisible()||!grid.display){return 0;}const ticks=this.ticks;const index=ticks.findIndex(t=>t.value===value);if(index>=0){const opts=grid.setContext(this.getContext(index));return opts.lineWidth;}return 0;}drawGrid(chartArea){const grid=this.options.grid;const ctx=this.ctx;const items=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(chartArea));let i,ilen;const drawLine=(p1,p2,style)=>{if(!style.width||!style.color){return;}ctx.save();ctx.lineWidth=style.width;ctx.strokeStyle=style.color;ctx.setLineDash(style.borderDash||[]);ctx.lineDashOffset=style.borderDashOffset;ctx.beginPath();ctx.moveTo(p1.x,p1.y);ctx.lineTo(p2.x,p2.y);ctx.stroke();ctx.restore();};if(grid.display){for(i=0,ilen=items.length;i<ilen;++i){const item=items[i];if(grid.drawOnChartArea){drawLine({x:item.x1,y:item.y1},{x:item.x2,y:item.y2},item);}if(grid.drawTicks){drawLine({x:item.tx1,y:item.ty1},{x:item.tx2,y:item.ty2},{color:item.tickColor,width:item.tickWidth,borderDash:item.tickBorderDash,borderDashOffset:item.tickBorderDashOffset});}}}}drawBorder(){const{chart,ctx,options:{border,grid}}=this;const borderOpts=border.setContext(this.getContext());const axisWidth=border.display?borderOpts.width:0;if(!axisWidth){return;}const lastLineWidth=grid.setContext(this.getContext(0)).lineWidth;const borderValue=this._borderValue;let x1,x2,y1,y2;if(this.isHorizontal()){x1=_alignPixel(chart,this.left,axisWidth)-axisWidth/2;x2=_alignPixel(chart,this.right,lastLineWidth)+lastLineWidth/2;y1=y2=borderValue;}else{y1=_alignPixel(chart,this.top,axisWidth)-axisWidth/2;y2=_alignPixel(chart,this.bottom,lastLineWidth)+lastLineWidth/2;x1=x2=borderValue;}ctx.save();ctx.lineWidth=borderOpts.width;ctx.strokeStyle=borderOpts.color;ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();ctx.restore();}drawLabels(chartArea){const optionTicks=this.options.ticks;if(!optionTicks.display){return;}const ctx=this.ctx;const area=this._computeLabelArea();if(area){clipArea(ctx,area);}const items=this.getLabelItems(chartArea);for(const item of items){const renderTextOptions=item.options;const tickFont=item.font;const label=item.label;const y=item.textOffset;renderText(ctx,label,0,y,tickFont,renderTextOptions);}if(area){unclipArea(ctx);}}drawTitle(){const{ctx,options:{position,title,reverse}}=this;if(!title.display){return;}const font=toFont(title.font);const padding=toPadding(title.padding);const align=title.align;let offset=font.lineHeight/2;if(position==='bottom'||position==='center'||isObject(position)){offset+=padding.bottom;if(isArray(title.text)){offset+=font.lineHeight*(title.text.length-1);}}else{offset+=padding.top;}const{titleX,titleY,maxWidth,rotation}=titleArgs(this,offset,position,align);renderText(ctx,title.text,0,0,font,{color:title.color,maxWidth,rotation,textAlign:titleAlign(align,position,reverse),textBaseline:'middle',translation:[titleX,titleY]});}draw(chartArea){if(!this._isVisible()){return;}this.drawBackground();this.drawGrid(chartArea);this.drawBorder();this.drawTitle();this.drawLabels(chartArea);}_layers(){const opts=this.options;const tz=opts.ticks&&opts.ticks.z||0;const gz=valueOrDefault(opts.grid&&opts.grid.z,-1);const bz=valueOrDefault(opts.border&&opts.border.z,0);if(!this._isVisible()||this.draw!==Scale.prototype.draw){return[{z:tz,draw:chartArea=>{this.draw(chartArea);}}];}return[{z:gz,draw:chartArea=>{this.drawBackground();this.drawGrid(chartArea);this.drawTitle();}},{z:bz,draw:()=>{this.drawBorder();}},{z:tz,draw:chartArea=>{this.drawLabels(chartArea);}}];}getMatchingVisibleMetas(type){const metas=this.chart.getSortedVisibleDatasetMetas();const axisID=this.axis+'AxisID';const result=[];let i,ilen;for(i=0,ilen=metas.length;i<ilen;++i){const meta=metas[i];if(meta[axisID]===this.id&&(!type||meta.type===type)){result.push(meta);}}return result;}_resolveTickFontOptions(index){const opts=this.options.ticks.setContext(this.getContext(index));return toFont(opts.font);}_maxDigits(){const fontSize=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/fontSize;}}class TypedRegistry{constructor(type,scope,override){this.type=type;this.scope=scope;this.override=override;this.items=Object.create(null);}isForType(type){return Object.prototype.isPrototypeOf.call(this.type.prototype,type.prototype);}register(item){const proto=Object.getPrototypeOf(item);let parentScope;if(isIChartComponent(proto)){parentScope=this.register(proto);}const items=this.items;const id=item.id;const scope=this.scope+'.'+id;if(!id){throw new Error('class does not have id: '+item);}if(id in items){return scope;}items[id]=item;registerDefaults(item,scope,parentScope);if(this.override){defaults.override(item.id,item.overrides);}return scope;}get(id){return this.items[id];}unregister(item){const items=this.items;const id=item.id;const scope=this.scope;if(id in items){delete items[id];}if(scope&&id in defaults[scope]){delete defaults[scope][id];if(this.override){delete overrides[id];}}}}function registerDefaults(item,scope,parentScope){const itemDefaults=merge(Object.create(null),[parentScope?defaults.get(parentScope):{},defaults.get(scope),item.defaults]);defaults.set(scope,itemDefaults);if(item.defaultRoutes){routeDefaults(scope,item.defaultRoutes);}if(item.descriptors){defaults.describe(scope,item.descriptors);}}function routeDefaults(scope,routes){Object.keys(routes).forEach(property=>{const propertyParts=property.split('.');const sourceName=propertyParts.pop();const sourceScope=[scope].concat(propertyParts).join('.');const parts=routes[property].split('.');const targetName=parts.pop();const targetScope=parts.join('.');defaults.route(sourceScope,sourceName,targetScope,targetName);});}function isIChartComponent(proto){return'id'in proto&&'defaults'in proto;}class Registry{constructor(){this.controllers=new TypedRegistry(DatasetController,'datasets',true);this.elements=new TypedRegistry(Element,'elements');this.plugins=new TypedRegistry(Object,'plugins');this.scales=new TypedRegistry(Scale,'scales');this._typedRegistries=[this.controllers,this.scales,this.elements];}add(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}this._each('register',args);}remove(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}this._each('unregister',args);}addControllers(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}this._each('register',args,this.controllers);}addElements(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}this._each('register',args,this.elements);}addPlugins(){for(var _len5=arguments.length,args=new Array(_len5),_key5=0;_key5<_len5;_key5++){args[_key5]=arguments[_key5];}this._each('register',args,this.plugins);}addScales(){for(var _len6=arguments.length,args=new Array(_len6),_key6=0;_key6<_len6;_key6++){args[_key6]=arguments[_key6];}this._each('register',args,this.scales);}getController(id){return this._get(id,this.controllers,'controller');}getElement(id){return this._get(id,this.elements,'element');}getPlugin(id){return this._get(id,this.plugins,'plugin');}getScale(id){return this._get(id,this.scales,'scale');}removeControllers(){for(var _len7=arguments.length,args=new Array(_len7),_key7=0;_key7<_len7;_key7++){args[_key7]=arguments[_key7];}this._each('unregister',args,this.controllers);}removeElements(){for(var _len8=arguments.length,args=new Array(_len8),_key8=0;_key8<_len8;_key8++){args[_key8]=arguments[_key8];}this._each('unregister',args,this.elements);}removePlugins(){for(var _len9=arguments.length,args=new Array(_len9),_key9=0;_key9<_len9;_key9++){args[_key9]=arguments[_key9];}this._each('unregister',args,this.plugins);}removeScales(){for(var _len10=arguments.length,args=new Array(_len10),_key10=0;_key10<_len10;_key10++){args[_key10]=arguments[_key10];}this._each('unregister',args,this.scales);}_each(method,args,typedRegistry){[...args].forEach(arg=>{const reg=typedRegistry||this._getRegistryForType(arg);if(typedRegistry||reg.isForType(arg)||reg===this.plugins&&arg.id){this._exec(method,reg,arg);}else{each(arg,item=>{const itemReg=typedRegistry||this._getRegistryForType(item);this._exec(method,itemReg,item);});}});}_exec(method,registry,component){const camelMethod=_capitalize(method);callback(component['before'+camelMethod],[],component);registry[method](component);callback(component['after'+camelMethod],[],component);}_getRegistryForType(type){for(let i=0;i<this._typedRegistries.length;i++){const reg=this._typedRegistries[i];if(reg.isForType(type)){return reg;}}return this.plugins;}_get(id,typedRegistry,type){const item=typedRegistry.get(id);if(item===undefined){throw new Error('\"'+id+'\" is not a registered '+type+'.');}return item;}}var registry=/* #__PURE__ */new Registry();class PluginService{constructor(){this._init=[];}notify(chart,hook,args,filter){if(hook==='beforeInit'){this._init=this._createDescriptors(chart,true);this._notify(this._init,chart,'install');}const descriptors=filter?this._descriptors(chart).filter(filter):this._descriptors(chart);const result=this._notify(descriptors,chart,hook,args);if(hook==='afterDestroy'){this._notify(descriptors,chart,'stop');this._notify(this._init,chart,'uninstall');}return result;}_notify(descriptors,chart,hook,args){args=args||{};for(const descriptor of descriptors){const plugin=descriptor.plugin;const method=plugin[hook];const params=[chart,args,descriptor.options];if(callback(method,params,plugin)===false&&args.cancelable){return false;}}return true;}invalidate(){if(!isNullOrUndef(this._cache)){this._oldCache=this._cache;this._cache=undefined;}}_descriptors(chart){if(this._cache){return this._cache;}const descriptors=this._cache=this._createDescriptors(chart);this._notifyStateChanges(chart);return descriptors;}_createDescriptors(chart,all){const config=chart&&chart.config;const options=valueOrDefault(config.options&&config.options.plugins,{});const plugins=allPlugins(config);return options===false&&!all?[]:createDescriptors(chart,plugins,options,all);}_notifyStateChanges(chart){const previousDescriptors=this._oldCache||[];const descriptors=this._cache;const diff=(a,b)=>a.filter(x=>!b.some(y=>x.plugin.id===y.plugin.id));this._notify(diff(previousDescriptors,descriptors),chart,'stop');this._notify(diff(descriptors,previousDescriptors),chart,'start');}}function allPlugins(config){const localIds={};const plugins=[];const keys=Object.keys(registry.plugins.items);for(let i=0;i<keys.length;i++){plugins.push(registry.getPlugin(keys[i]));}const local=config.plugins||[];for(let i=0;i<local.length;i++){const plugin=local[i];if(plugins.indexOf(plugin)===-1){plugins.push(plugin);localIds[plugin.id]=true;}}return{plugins,localIds};}function getOpts(options,all){if(!all&&options===false){return null;}if(options===true){return{};}return options;}function createDescriptors(chart,_ref2,options,all){let{plugins,localIds}=_ref2;const result=[];const context=chart.getContext();for(const plugin of plugins){const id=plugin.id;const opts=getOpts(options[id],all);if(opts===null){continue;}result.push({plugin,options:pluginOpts(chart.config,{plugin,local:localIds[id]},opts,context)});}return result;}function pluginOpts(config,_ref3,opts,context){let{plugin,local}=_ref3;const keys=config.pluginScopeKeys(plugin);const scopes=config.getOptionScopes(opts,keys);if(local&&plugin.defaults){scopes.push(plugin.defaults);}return config.createResolver(scopes,context,[''],{scriptable:false,indexable:false,allKeys:true});}function getIndexAxis(type,options){const datasetDefaults=defaults.datasets[type]||{};const datasetOptions=(options.datasets||{})[type]||{};return datasetOptions.indexAxis||options.indexAxis||datasetDefaults.indexAxis||'x';}function getAxisFromDefaultScaleID(id,indexAxis){let axis=id;if(id==='_index_'){axis=indexAxis;}else if(id==='_value_'){axis=indexAxis==='x'?'y':'x';}return axis;}function getDefaultScaleIDFromAxis(axis,indexAxis){return axis===indexAxis?'_index_':'_value_';}function idMatchesAxis(id){if(id==='x'||id==='y'||id==='r'){return id;}}function axisFromPosition(position){if(position==='top'||position==='bottom'){return'x';}if(position==='left'||position==='right'){return'y';}}function determineAxis(id){if(idMatchesAxis(id)){return id;}for(var _len11=arguments.length,scaleOptions=new Array(_len11>1?_len11-1:0),_key11=1;_key11<_len11;_key11++){scaleOptions[_key11-1]=arguments[_key11];}for(const opts of scaleOptions){const axis=opts.axis||axisFromPosition(opts.position)||id.length>1&&idMatchesAxis(id[0].toLowerCase());if(axis){return axis;}}throw new Error(\"Cannot determine type of '\".concat(id,\"' axis. Please provide 'axis' or 'position' option.\"));}function getAxisFromDataset(id,axis,dataset){if(dataset[axis+'AxisID']===id){return{axis};}}function retrieveAxisFromDatasets(id,config){if(config.data&&config.data.datasets){const boundDs=config.data.datasets.filter(d=>d.xAxisID===id||d.yAxisID===id);if(boundDs.length){return getAxisFromDataset(id,'x',boundDs[0])||getAxisFromDataset(id,'y',boundDs[0]);}}return{};}function mergeScaleConfig(config,options){const chartDefaults=overrides[config.type]||{scales:{}};const configScales=options.scales||{};const chartIndexAxis=getIndexAxis(config.type,options);const scales=Object.create(null);Object.keys(configScales).forEach(id=>{const scaleConf=configScales[id];if(!isObject(scaleConf)){return console.error(\"Invalid scale configuration for scale: \".concat(id));}if(scaleConf._proxy){return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));}const axis=determineAxis(id,scaleConf,retrieveAxisFromDatasets(id,config),defaults.scales[scaleConf.type]);const defaultId=getDefaultScaleIDFromAxis(axis,chartIndexAxis);const defaultScaleOptions=chartDefaults.scales||{};scales[id]=mergeIf(Object.create(null),[{axis},scaleConf,defaultScaleOptions[axis],defaultScaleOptions[defaultId]]);});config.data.datasets.forEach(dataset=>{const type=dataset.type||config.type;const indexAxis=dataset.indexAxis||getIndexAxis(type,options);const datasetDefaults=overrides[type]||{};const defaultScaleOptions=datasetDefaults.scales||{};Object.keys(defaultScaleOptions).forEach(defaultID=>{const axis=getAxisFromDefaultScaleID(defaultID,indexAxis);const id=dataset[axis+'AxisID']||axis;scales[id]=scales[id]||Object.create(null);mergeIf(scales[id],[{axis},configScales[id],defaultScaleOptions[defaultID]]);});});Object.keys(scales).forEach(key=>{const scale=scales[key];mergeIf(scale,[defaults.scales[scale.type],defaults.scale]);});return scales;}function initOptions(config){const options=config.options||(config.options={});options.plugins=valueOrDefault(options.plugins,{});options.scales=mergeScaleConfig(config,options);}function initData(data){data=data||{};data.datasets=data.datasets||[];data.labels=data.labels||[];return data;}function initConfig(config){config=config||{};config.data=initData(config.data);initOptions(config);return config;}const keyCache=new Map();const keysCached=new Set();function cachedKeys(cacheKey,generate){let keys=keyCache.get(cacheKey);if(!keys){keys=generate();keyCache.set(cacheKey,keys);keysCached.add(keys);}return keys;}const addIfFound=(set,obj,key)=>{const opts=resolveObjectKey(obj,key);if(opts!==undefined){set.add(opts);}};class Config{constructor(config){this._config=initConfig(config);this._scopeCache=new Map();this._resolverCache=new Map();}get platform(){return this._config.platform;}get type(){return this._config.type;}set type(type){this._config.type=type;}get data(){return this._config.data;}set data(data){this._config.data=initData(data);}get options(){return this._config.options;}set options(options){this._config.options=options;}get plugins(){return this._config.plugins;}update(){const config=this._config;this.clearCache();initOptions(config);}clearCache(){this._scopeCache.clear();this._resolverCache.clear();}datasetScopeKeys(datasetType){return cachedKeys(datasetType,()=>[[\"datasets.\".concat(datasetType),'']]);}datasetAnimationScopeKeys(datasetType,transition){return cachedKeys(\"\".concat(datasetType,\".transition.\").concat(transition),()=>[[\"datasets.\".concat(datasetType,\".transitions.\").concat(transition),\"transitions.\".concat(transition)],[\"datasets.\".concat(datasetType),'']]);}datasetElementScopeKeys(datasetType,elementType){return cachedKeys(\"\".concat(datasetType,\"-\").concat(elementType),()=>[[\"datasets.\".concat(datasetType,\".elements.\").concat(elementType),\"datasets.\".concat(datasetType),\"elements.\".concat(elementType),'']]);}pluginScopeKeys(plugin){const id=plugin.id;const type=this.type;return cachedKeys(\"\".concat(type,\"-plugin-\").concat(id),()=>[[\"plugins.\".concat(id),...(plugin.additionalOptionScopes||[])]]);}_cachedScopes(mainScope,resetCache){const _scopeCache=this._scopeCache;let cache=_scopeCache.get(mainScope);if(!cache||resetCache){cache=new Map();_scopeCache.set(mainScope,cache);}return cache;}getOptionScopes(mainScope,keyLists,resetCache){const{options,type}=this;const cache=this._cachedScopes(mainScope,resetCache);const cached=cache.get(keyLists);if(cached){return cached;}const scopes=new Set();keyLists.forEach(keys=>{if(mainScope){scopes.add(mainScope);keys.forEach(key=>addIfFound(scopes,mainScope,key));}keys.forEach(key=>addIfFound(scopes,options,key));keys.forEach(key=>addIfFound(scopes,overrides[type]||{},key));keys.forEach(key=>addIfFound(scopes,defaults,key));keys.forEach(key=>addIfFound(scopes,descriptors,key));});const array=Array.from(scopes);if(array.length===0){array.push(Object.create(null));}if(keysCached.has(keyLists)){cache.set(keyLists,array);}return array;}chartOptionScopes(){const{options,type}=this;return[options,overrides[type]||{},defaults.datasets[type]||{},{type},defaults,descriptors];}resolveNamedOptions(scopes,names,context){let prefixes=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[''];const result={$shared:true};const{resolver,subPrefixes}=getResolver(this._resolverCache,scopes,prefixes);let options=resolver;if(needContext(resolver,names)){result.$shared=false;context=isFunction(context)?context():context;const subResolver=this.createResolver(scopes,context,subPrefixes);options=_attachContext(resolver,context,subResolver);}for(const prop of names){result[prop]=options[prop];}return result;}createResolver(scopes,context){let prefixes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[''];let descriptorDefaults=arguments.length>3?arguments[3]:undefined;const{resolver}=getResolver(this._resolverCache,scopes,prefixes);return isObject(context)?_attachContext(resolver,context,undefined,descriptorDefaults):resolver;}}function getResolver(resolverCache,scopes,prefixes){let cache=resolverCache.get(scopes);if(!cache){cache=new Map();resolverCache.set(scopes,cache);}const cacheKey=prefixes.join();let cached=cache.get(cacheKey);if(!cached){const resolver=_createResolver(scopes,prefixes);cached={resolver,subPrefixes:prefixes.filter(p=>!p.toLowerCase().includes('hover'))};cache.set(cacheKey,cached);}return cached;}const hasFunction=value=>isObject(value)&&Object.getOwnPropertyNames(value).some(key=>isFunction(value[key]));function needContext(proxy,names){const{isScriptable,isIndexable}=_descriptors(proxy);for(const prop of names){const scriptable=isScriptable(prop);const indexable=isIndexable(prop);const value=(indexable||scriptable)&&proxy[prop];if(scriptable&&(isFunction(value)||hasFunction(value))||indexable&&isArray(value)){return true;}}return false;}var version=\"4.4.3\";const KNOWN_POSITIONS=['top','bottom','left','right','chartArea'];function positionIsHorizontal(position,axis){return position==='top'||position==='bottom'||KNOWN_POSITIONS.indexOf(position)===-1&&axis==='x';}function compare2Level(l1,l2){return function(a,b){return a[l1]===b[l1]?a[l2]-b[l2]:a[l1]-b[l1];};}function onAnimationsComplete(context){const chart=context.chart;const animationOptions=chart.options.animation;chart.notifyPlugins('afterRender');callback(animationOptions&&animationOptions.onComplete,[context],chart);}function onAnimationProgress(context){const chart=context.chart;const animationOptions=chart.options.animation;callback(animationOptions&&animationOptions.onProgress,[context],chart);}function getCanvas(item){if(_isDomSupported()&&typeof item==='string'){item=document.getElementById(item);}else if(item&&item.length){item=item[0];}if(item&&item.canvas){item=item.canvas;}return item;}const instances={};const getChart=key=>{const canvas=getCanvas(key);return Object.values(instances).filter(c=>c.canvas===canvas).pop();};function moveNumericKeys(obj,start,move){const keys=Object.keys(obj);for(const key of keys){const intKey=+key;if(intKey>=start){const value=obj[key];delete obj[key];if(move>0||intKey>start){obj[intKey+move]=value;}}}}function determineLastEvent(e,lastEvent,inChartArea,isClick){if(!inChartArea||e.type==='mouseout'){return null;}if(isClick){return lastEvent;}return e;}function getSizeForArea(scale,chartArea,field){return scale.options.clip?scale[field]:chartArea[field];}function getDatasetArea(meta,chartArea){const{xScale,yScale}=meta;if(xScale&&yScale){return{left:getSizeForArea(xScale,chartArea,'left'),right:getSizeForArea(xScale,chartArea,'right'),top:getSizeForArea(yScale,chartArea,'top'),bottom:getSizeForArea(yScale,chartArea,'bottom')};}return chartArea;}class Chart{static register(){registry.add(...arguments);invalidatePlugins();}static unregister(){registry.remove(...arguments);invalidatePlugins();}constructor(item,userConfig){const config=this.config=new Config(userConfig);const initialCanvas=getCanvas(item);const existingChart=getChart(initialCanvas);if(existingChart){throw new Error('Canvas is already in use. Chart with ID \\''+existingChart.id+'\\''+' must be destroyed before the canvas with ID \\''+existingChart.canvas.id+'\\' can be reused.');}const options=config.createResolver(config.chartOptionScopes(),this.getContext());this.platform=new(config.platform||_detectPlatform(initialCanvas))();this.platform.updateConfig(config);const context=this.platform.acquireContext(initialCanvas,options.aspectRatio);const canvas=context&&context.canvas;const height=canvas&&canvas.height;const width=canvas&&canvas.width;this.id=uid();this.ctx=context;this.canvas=canvas;this.width=width;this.height=height;this._options=options;this._aspectRatio=this.aspectRatio;this._layers=[];this._metasets=[];this._stacks=undefined;this.boxes=[];this.currentDevicePixelRatio=undefined;this.chartArea=undefined;this._active=[];this._lastEvent=undefined;this._listeners={};this._responsiveListeners=undefined;this._sortedMetasets=[];this.scales={};this._plugins=new PluginService();this.$proxies={};this._hiddenIndices={};this.attached=false;this._animationsDisabled=undefined;this.$context=undefined;this._doResize=debounce(mode=>this.update(mode),options.resizeDelay||0);this._dataChanges=[];instances[this.id]=this;if(!context||!canvas){console.error(\"Failed to create chart: can't acquire context from the given item\");return;}animator.listen(this,'complete',onAnimationsComplete);animator.listen(this,'progress',onAnimationProgress);this._initialize();if(this.attached){this.update();}}get aspectRatio(){const{options:{aspectRatio,maintainAspectRatio},width,height,_aspectRatio}=this;if(!isNullOrUndef(aspectRatio)){return aspectRatio;}if(maintainAspectRatio&&_aspectRatio){return _aspectRatio;}return height?width/height:null;}get data(){return this.config.data;}set data(data){this.config.data=data;}get options(){return this._options;}set options(options){this.config.options=options;}get registry(){return registry;}_initialize(){this.notifyPlugins('beforeInit');if(this.options.responsive){this.resize();}else{retinaScale(this,this.options.devicePixelRatio);}this.bindEvents();this.notifyPlugins('afterInit');return this;}clear(){clearCanvas(this.canvas,this.ctx);return this;}stop(){animator.stop(this);return this;}resize(width,height){if(!animator.running(this)){this._resize(width,height);}else{this._resizeBeforeDraw={width,height};}}_resize(width,height){const options=this.options;const canvas=this.canvas;const aspectRatio=options.maintainAspectRatio&&this.aspectRatio;const newSize=this.platform.getMaximumSize(canvas,width,height,aspectRatio);const newRatio=options.devicePixelRatio||this.platform.getDevicePixelRatio();const mode=this.width?'resize':'attach';this.width=newSize.width;this.height=newSize.height;this._aspectRatio=this.aspectRatio;if(!retinaScale(this,newRatio,true)){return;}this.notifyPlugins('resize',{size:newSize});callback(options.onResize,[this,newSize],this);if(this.attached){if(this._doResize(mode)){this.render();}}}ensureScalesHaveIDs(){const options=this.options;const scalesOptions=options.scales||{};each(scalesOptions,(axisOptions,axisID)=>{axisOptions.id=axisID;});}buildOrUpdateScales(){const options=this.options;const scaleOpts=options.scales;const scales=this.scales;const updated=Object.keys(scales).reduce((obj,id)=>{obj[id]=false;return obj;},{});let items=[];if(scaleOpts){items=items.concat(Object.keys(scaleOpts).map(id=>{const scaleOptions=scaleOpts[id];const axis=determineAxis(id,scaleOptions);const isRadial=axis==='r';const isHorizontal=axis==='x';return{options:scaleOptions,dposition:isRadial?'chartArea':isHorizontal?'bottom':'left',dtype:isRadial?'radialLinear':isHorizontal?'category':'linear'};}));}each(items,item=>{const scaleOptions=item.options;const id=scaleOptions.id;const axis=determineAxis(id,scaleOptions);const scaleType=valueOrDefault(scaleOptions.type,item.dtype);if(scaleOptions.position===undefined||positionIsHorizontal(scaleOptions.position,axis)!==positionIsHorizontal(item.dposition)){scaleOptions.position=item.dposition;}updated[id]=true;let scale=null;if(id in scales&&scales[id].type===scaleType){scale=scales[id];}else{const scaleClass=registry.getScale(scaleType);scale=new scaleClass({id,type:scaleType,ctx:this.ctx,chart:this});scales[scale.id]=scale;}scale.init(scaleOptions,options);});each(updated,(hasUpdated,id)=>{if(!hasUpdated){delete scales[id];}});each(scales,scale=>{layouts.configure(this,scale,scale.options);layouts.addBox(this,scale);});}_updateMetasets(){const metasets=this._metasets;const numData=this.data.datasets.length;const numMeta=metasets.length;metasets.sort((a,b)=>a.index-b.index);if(numMeta>numData){for(let i=numData;i<numMeta;++i){this._destroyDatasetMeta(i);}metasets.splice(numData,numMeta-numData);}this._sortedMetasets=metasets.slice(0).sort(compare2Level('order','index'));}_removeUnreferencedMetasets(){const{_metasets:metasets,data:{datasets}}=this;if(metasets.length>datasets.length){delete this._stacks;}metasets.forEach((meta,index)=>{if(datasets.filter(x=>x===meta._dataset).length===0){this._destroyDatasetMeta(index);}});}buildOrUpdateControllers(){const newControllers=[];const datasets=this.data.datasets;let i,ilen;this._removeUnreferencedMetasets();for(i=0,ilen=datasets.length;i<ilen;i++){const dataset=datasets[i];let meta=this.getDatasetMeta(i);const type=dataset.type||this.config.type;if(meta.type&&meta.type!==type){this._destroyDatasetMeta(i);meta=this.getDatasetMeta(i);}meta.type=type;meta.indexAxis=dataset.indexAxis||getIndexAxis(type,this.options);meta.order=dataset.order||0;meta.index=i;meta.label=''+dataset.label;meta.visible=this.isDatasetVisible(i);if(meta.controller){meta.controller.updateIndex(i);meta.controller.linkScales();}else{const ControllerClass=registry.getController(type);const{datasetElementType,dataElementType}=defaults.datasets[type];Object.assign(ControllerClass,{dataElementType:registry.getElement(dataElementType),datasetElementType:datasetElementType&&registry.getElement(datasetElementType)});meta.controller=new ControllerClass(this,i);newControllers.push(meta.controller);}}this._updateMetasets();return newControllers;}_resetElements(){each(this.data.datasets,(dataset,datasetIndex)=>{this.getDatasetMeta(datasetIndex).controller.reset();},this);}reset(){this._resetElements();this.notifyPlugins('reset');}update(mode){const config=this.config;config.update();const options=this._options=config.createResolver(config.chartOptionScopes(),this.getContext());const animsDisabled=this._animationsDisabled=!options.animation;this._updateScales();this._checkEventBindings();this._updateHiddenIndices();this._plugins.invalidate();if(this.notifyPlugins('beforeUpdate',{mode,cancelable:true})===false){return;}const newControllers=this.buildOrUpdateControllers();this.notifyPlugins('beforeElementsUpdate');let minPadding=0;for(let i=0,ilen=this.data.datasets.length;i<ilen;i++){const{controller}=this.getDatasetMeta(i);const reset=!animsDisabled&&newControllers.indexOf(controller)===-1;controller.buildOrUpdateElements(reset);minPadding=Math.max(+controller.getMaxOverflow(),minPadding);}minPadding=this._minPadding=options.layout.autoPadding?minPadding:0;this._updateLayout(minPadding);if(!animsDisabled){each(newControllers,controller=>{controller.reset();});}this._updateDatasets(mode);this.notifyPlugins('afterUpdate',{mode});this._layers.sort(compare2Level('z','_idx'));const{_active,_lastEvent}=this;if(_lastEvent){this._eventHandler(_lastEvent,true);}else if(_active.length){this._updateHoverStyles(_active,_active,true);}this.render();}_updateScales(){each(this.scales,scale=>{layouts.removeBox(this,scale);});this.ensureScalesHaveIDs();this.buildOrUpdateScales();}_checkEventBindings(){const options=this.options;const existingEvents=new Set(Object.keys(this._listeners));const newEvents=new Set(options.events);if(!setsEqual(existingEvents,newEvents)||!!this._responsiveListeners!==options.responsive){this.unbindEvents();this.bindEvents();}}_updateHiddenIndices(){const{_hiddenIndices}=this;const changes=this._getUniformDataChanges()||[];for(const{method,start,count}of changes){const move=method==='_removeElements'?-count:count;moveNumericKeys(_hiddenIndices,start,move);}}_getUniformDataChanges(){const _dataChanges=this._dataChanges;if(!_dataChanges||!_dataChanges.length){return;}this._dataChanges=[];const datasetCount=this.data.datasets.length;const makeSet=idx=>new Set(_dataChanges.filter(c=>c[0]===idx).map((c,i)=>i+','+c.splice(1).join(',')));const changeSet=makeSet(0);for(let i=1;i<datasetCount;i++){if(!setsEqual(changeSet,makeSet(i))){return;}}return Array.from(changeSet).map(c=>c.split(',')).map(a=>({method:a[1],start:+a[2],count:+a[3]}));}_updateLayout(minPadding){if(this.notifyPlugins('beforeLayout',{cancelable:true})===false){return;}layouts.update(this,this.width,this.height,minPadding);const area=this.chartArea;const noArea=area.width<=0||area.height<=0;this._layers=[];each(this.boxes,box=>{if(noArea&&box.position==='chartArea'){return;}if(box.configure){box.configure();}this._layers.push(...box._layers());},this);this._layers.forEach((item,index)=>{item._idx=index;});this.notifyPlugins('afterLayout');}_updateDatasets(mode){if(this.notifyPlugins('beforeDatasetsUpdate',{mode,cancelable:true})===false){return;}for(let i=0,ilen=this.data.datasets.length;i<ilen;++i){this.getDatasetMeta(i).controller.configure();}for(let i=0,ilen=this.data.datasets.length;i<ilen;++i){this._updateDataset(i,isFunction(mode)?mode({datasetIndex:i}):mode);}this.notifyPlugins('afterDatasetsUpdate',{mode});}_updateDataset(index,mode){const meta=this.getDatasetMeta(index);const args={meta,index,mode,cancelable:true};if(this.notifyPlugins('beforeDatasetUpdate',args)===false){return;}meta.controller._update(mode);args.cancelable=false;this.notifyPlugins('afterDatasetUpdate',args);}render(){if(this.notifyPlugins('beforeRender',{cancelable:true})===false){return;}if(animator.has(this)){if(this.attached&&!animator.running(this)){animator.start(this);}}else{this.draw();onAnimationsComplete({chart:this});}}draw(){let i;if(this._resizeBeforeDraw){const{width,height}=this._resizeBeforeDraw;this._resize(width,height);this._resizeBeforeDraw=null;}this.clear();if(this.width<=0||this.height<=0){return;}if(this.notifyPlugins('beforeDraw',{cancelable:true})===false){return;}const layers=this._layers;for(i=0;i<layers.length&&layers[i].z<=0;++i){layers[i].draw(this.chartArea);}this._drawDatasets();for(;i<layers.length;++i){layers[i].draw(this.chartArea);}this.notifyPlugins('afterDraw');}_getSortedDatasetMetas(filterVisible){const metasets=this._sortedMetasets;const result=[];let i,ilen;for(i=0,ilen=metasets.length;i<ilen;++i){const meta=metasets[i];if(!filterVisible||meta.visible){result.push(meta);}}return result;}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(true);}_drawDatasets(){if(this.notifyPlugins('beforeDatasetsDraw',{cancelable:true})===false){return;}const metasets=this.getSortedVisibleDatasetMetas();for(let i=metasets.length-1;i>=0;--i){this._drawDataset(metasets[i]);}this.notifyPlugins('afterDatasetsDraw');}_drawDataset(meta){const ctx=this.ctx;const clip=meta._clip;const useClip=!clip.disabled;const area=getDatasetArea(meta,this.chartArea);const args={meta,index:meta.index,cancelable:true};if(this.notifyPlugins('beforeDatasetDraw',args)===false){return;}if(useClip){clipArea(ctx,{left:clip.left===false?0:area.left-clip.left,right:clip.right===false?this.width:area.right+clip.right,top:clip.top===false?0:area.top-clip.top,bottom:clip.bottom===false?this.height:area.bottom+clip.bottom});}meta.controller.draw();if(useClip){unclipArea(ctx);}args.cancelable=false;this.notifyPlugins('afterDatasetDraw',args);}isPointInArea(point){return _isPointInArea(point,this.chartArea,this._minPadding);}getElementsAtEventForMode(e,mode,options,useFinalPosition){const method=Interaction.modes[mode];if(typeof method==='function'){return method(this,e,options,useFinalPosition);}return[];}getDatasetMeta(datasetIndex){const dataset=this.data.datasets[datasetIndex];const metasets=this._metasets;let meta=metasets.filter(x=>x&&x._dataset===dataset).pop();if(!meta){meta={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:dataset&&dataset.order||0,index:datasetIndex,_dataset:dataset,_parsed:[],_sorted:false};metasets.push(meta);}return meta;}getContext(){return this.$context||(this.$context=createContext(null,{chart:this,type:'chart'}));}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length;}isDatasetVisible(datasetIndex){const dataset=this.data.datasets[datasetIndex];if(!dataset){return false;}const meta=this.getDatasetMeta(datasetIndex);return typeof meta.hidden==='boolean'?!meta.hidden:!dataset.hidden;}setDatasetVisibility(datasetIndex,visible){const meta=this.getDatasetMeta(datasetIndex);meta.hidden=!visible;}toggleDataVisibility(index){this._hiddenIndices[index]=!this._hiddenIndices[index];}getDataVisibility(index){return!this._hiddenIndices[index];}_updateVisibility(datasetIndex,dataIndex,visible){const mode=visible?'show':'hide';const meta=this.getDatasetMeta(datasetIndex);const anims=meta.controller._resolveAnimations(undefined,mode);if(defined(dataIndex)){meta.data[dataIndex].hidden=!visible;this.update();}else{this.setDatasetVisibility(datasetIndex,visible);anims.update(meta,{visible});this.update(ctx=>ctx.datasetIndex===datasetIndex?mode:undefined);}}hide(datasetIndex,dataIndex){this._updateVisibility(datasetIndex,dataIndex,false);}show(datasetIndex,dataIndex){this._updateVisibility(datasetIndex,dataIndex,true);}_destroyDatasetMeta(datasetIndex){const meta=this._metasets[datasetIndex];if(meta&&meta.controller){meta.controller._destroy();}delete this._metasets[datasetIndex];}_stop(){let i,ilen;this.stop();animator.remove(this);for(i=0,ilen=this.data.datasets.length;i<ilen;++i){this._destroyDatasetMeta(i);}}destroy(){this.notifyPlugins('beforeDestroy');const{canvas,ctx}=this;this._stop();this.config.clearCache();if(canvas){this.unbindEvents();clearCanvas(canvas,ctx);this.platform.releaseContext(ctx);this.canvas=null;this.ctx=null;}delete instances[this.id];this.notifyPlugins('afterDestroy');}toBase64Image(){return this.canvas.toDataURL(...arguments);}bindEvents(){this.bindUserEvents();if(this.options.responsive){this.bindResponsiveEvents();}else{this.attached=true;}}bindUserEvents(){const listeners=this._listeners;const platform=this.platform;const _add=(type,listener)=>{platform.addEventListener(this,type,listener);listeners[type]=listener;};const listener=(e,x,y)=>{e.offsetX=x;e.offsetY=y;this._eventHandler(e);};each(this.options.events,type=>_add(type,listener));}bindResponsiveEvents(){if(!this._responsiveListeners){this._responsiveListeners={};}const listeners=this._responsiveListeners;const platform=this.platform;const _add=(type,listener)=>{platform.addEventListener(this,type,listener);listeners[type]=listener;};const _remove=(type,listener)=>{if(listeners[type]){platform.removeEventListener(this,type,listener);delete listeners[type];}};const listener=(width,height)=>{if(this.canvas){this.resize(width,height);}};let detached;const attached=()=>{_remove('attach',attached);this.attached=true;this.resize();_add('resize',listener);_add('detach',detached);};detached=()=>{this.attached=false;_remove('resize',listener);this._stop();this._resize(0,0);_add('attach',attached);};if(platform.isAttached(this.canvas)){attached();}else{detached();}}unbindEvents(){each(this._listeners,(listener,type)=>{this.platform.removeEventListener(this,type,listener);});this._listeners={};each(this._responsiveListeners,(listener,type)=>{this.platform.removeEventListener(this,type,listener);});this._responsiveListeners=undefined;}updateHoverStyle(items,mode,enabled){const prefix=enabled?'set':'remove';let meta,item,i,ilen;if(mode==='dataset'){meta=this.getDatasetMeta(items[0].datasetIndex);meta.controller['_'+prefix+'DatasetHoverStyle']();}for(i=0,ilen=items.length;i<ilen;++i){item=items[i];const controller=item&&this.getDatasetMeta(item.datasetIndex).controller;if(controller){controller[prefix+'HoverStyle'](item.element,item.datasetIndex,item.index);}}}getActiveElements(){return this._active||[];}setActiveElements(activeElements){const lastActive=this._active||[];const active=activeElements.map(_ref4=>{let{datasetIndex,index}=_ref4;const meta=this.getDatasetMeta(datasetIndex);if(!meta){throw new Error('No dataset found at index '+datasetIndex);}return{datasetIndex,element:meta.data[index],index};});const changed=!_elementsEqual(active,lastActive);if(changed){this._active=active;this._lastEvent=null;this._updateHoverStyles(active,lastActive);}}notifyPlugins(hook,args,filter){return this._plugins.notify(this,hook,args,filter);}isPluginEnabled(pluginId){return this._plugins._cache.filter(p=>p.plugin.id===pluginId).length===1;}_updateHoverStyles(active,lastActive,replay){const hoverOptions=this.options.hover;const diff=(a,b)=>a.filter(x=>!b.some(y=>x.datasetIndex===y.datasetIndex&&x.index===y.index));const deactivated=diff(lastActive,active);const activated=replay?active:diff(active,lastActive);if(deactivated.length){this.updateHoverStyle(deactivated,hoverOptions.mode,false);}if(activated.length&&hoverOptions.mode){this.updateHoverStyle(activated,hoverOptions.mode,true);}}_eventHandler(e,replay){const args={event:e,replay,cancelable:true,inChartArea:this.isPointInArea(e)};const eventFilter=plugin=>(plugin.options.events||this.options.events).includes(e.native.type);if(this.notifyPlugins('beforeEvent',args,eventFilter)===false){return;}const changed=this._handleEvent(e,replay,args.inChartArea);args.cancelable=false;this.notifyPlugins('afterEvent',args,eventFilter);if(changed||args.changed){this.render();}return this;}_handleEvent(e,replay,inChartArea){const{_active:lastActive=[],options}=this;const useFinalPosition=replay;const active=this._getActiveElements(e,lastActive,inChartArea,useFinalPosition);const isClick=_isClickEvent(e);const lastEvent=determineLastEvent(e,this._lastEvent,inChartArea,isClick);if(inChartArea){this._lastEvent=null;callback(options.onHover,[e,active,this],this);if(isClick){callback(options.onClick,[e,active,this],this);}}const changed=!_elementsEqual(active,lastActive);if(changed||replay){this._active=active;this._updateHoverStyles(active,lastActive,replay);}this._lastEvent=lastEvent;return changed;}_getActiveElements(e,lastActive,inChartArea,useFinalPosition){if(e.type==='mouseout'){return[];}if(!inChartArea){return lastActive;}const hoverOptions=this.options.hover;return this.getElementsAtEventForMode(e,hoverOptions.mode,hoverOptions,useFinalPosition);}}Chart.defaults=defaults;Chart.instances=instances;Chart.overrides=overrides;Chart.registry=registry;Chart.version=version;Chart.getChart=getChart;function invalidatePlugins(){return each(Chart.instances,chart=>chart._plugins.invalidate());}function clipArc(ctx,element,endAngle){const{startAngle,pixelMargin,x,y,outerRadius,innerRadius}=element;let angleMargin=pixelMargin/outerRadius;// Draw an inner border by clipping the arc and drawing a double-width border\n// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\nctx.beginPath();ctx.arc(x,y,outerRadius,startAngle-angleMargin,endAngle+angleMargin);if(innerRadius>pixelMargin){angleMargin=pixelMargin/innerRadius;ctx.arc(x,y,innerRadius,endAngle+angleMargin,startAngle-angleMargin,true);}else{ctx.arc(x,y,pixelMargin,endAngle+HALF_PI,startAngle-HALF_PI);}ctx.closePath();ctx.clip();}function toRadiusCorners(value){return _readValueToProps(value,['outerStart','outerEnd','innerStart','innerEnd']);}/**\n * Parse border radius from the provided options\n */function parseBorderRadius$1(arc,innerRadius,outerRadius,angleDelta){const o=toRadiusCorners(arc.options.borderRadius);const halfThickness=(outerRadius-innerRadius)/2;const innerLimit=Math.min(halfThickness,angleDelta*innerRadius/2);// Outer limits are complicated. We want to compute the available angular distance at\n// a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n// We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n//\n// If the borderRadius is large, that value can become negative.\n// This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n// we know that the thickness term will dominate and compute the limits at that point\nconst computeOuterLimit=val=>{const outerArcLimit=(outerRadius-Math.min(halfThickness,val))*angleDelta/2;return _limitValue(val,0,Math.min(halfThickness,outerArcLimit));};return{outerStart:computeOuterLimit(o.outerStart),outerEnd:computeOuterLimit(o.outerEnd),innerStart:_limitValue(o.innerStart,0,innerLimit),innerEnd:_limitValue(o.innerEnd,0,innerLimit)};}/**\n * Convert (r, 𝜃) to (x, y)\n */function rThetaToXY(r,theta,x,y){return{x:x+r*Math.cos(theta),y:y+r*Math.sin(theta)};}/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */function pathArc(ctx,element,offset,spacing,end,circular){const{x,y,startAngle:start,pixelMargin,innerRadius:innerR}=element;const outerRadius=Math.max(element.outerRadius+spacing+offset-pixelMargin,0);const innerRadius=innerR>0?innerR+spacing+offset+pixelMargin:0;let spacingOffset=0;const alpha=end-start;if(spacing){// When spacing is present, it is the same for all items\n// So we adjust the start and end angle of the arc such that\n// the distance is the same as it would be without the spacing\nconst noSpacingInnerRadius=innerR>0?innerR-spacing:0;const noSpacingOuterRadius=outerRadius>0?outerRadius-spacing:0;const avNogSpacingRadius=(noSpacingInnerRadius+noSpacingOuterRadius)/2;const adjustedAngle=avNogSpacingRadius!==0?alpha*avNogSpacingRadius/(avNogSpacingRadius+spacing):alpha;spacingOffset=(alpha-adjustedAngle)/2;}const beta=Math.max(0.001,alpha*outerRadius-offset/PI)/outerRadius;const angleOffset=(alpha-beta)/2;const startAngle=start+angleOffset+spacingOffset;const endAngle=end-angleOffset-spacingOffset;const{outerStart,outerEnd,innerStart,innerEnd}=parseBorderRadius$1(element,innerRadius,outerRadius,endAngle-startAngle);const outerStartAdjustedRadius=outerRadius-outerStart;const outerEndAdjustedRadius=outerRadius-outerEnd;const outerStartAdjustedAngle=startAngle+outerStart/outerStartAdjustedRadius;const outerEndAdjustedAngle=endAngle-outerEnd/outerEndAdjustedRadius;const innerStartAdjustedRadius=innerRadius+innerStart;const innerEndAdjustedRadius=innerRadius+innerEnd;const innerStartAdjustedAngle=startAngle+innerStart/innerStartAdjustedRadius;const innerEndAdjustedAngle=endAngle-innerEnd/innerEndAdjustedRadius;ctx.beginPath();if(circular){// The first arc segments from point 1 to point a to point 2\nconst outerMidAdjustedAngle=(outerStartAdjustedAngle+outerEndAdjustedAngle)/2;ctx.arc(x,y,outerRadius,outerStartAdjustedAngle,outerMidAdjustedAngle);ctx.arc(x,y,outerRadius,outerMidAdjustedAngle,outerEndAdjustedAngle);// The corner segment from point 2 to point 3\nif(outerEnd>0){const pCenter=rThetaToXY(outerEndAdjustedRadius,outerEndAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,outerEnd,outerEndAdjustedAngle,endAngle+HALF_PI);}// The line from point 3 to point 4\nconst p4=rThetaToXY(innerEndAdjustedRadius,endAngle,x,y);ctx.lineTo(p4.x,p4.y);// The corner segment from point 4 to point 5\nif(innerEnd>0){const pCenter=rThetaToXY(innerEndAdjustedRadius,innerEndAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,innerEnd,endAngle+HALF_PI,innerEndAdjustedAngle+Math.PI);}// The inner arc from point 5 to point b to point 6\nconst innerMidAdjustedAngle=(endAngle-innerEnd/innerRadius+(startAngle+innerStart/innerRadius))/2;ctx.arc(x,y,innerRadius,endAngle-innerEnd/innerRadius,innerMidAdjustedAngle,true);ctx.arc(x,y,innerRadius,innerMidAdjustedAngle,startAngle+innerStart/innerRadius,true);// The corner segment from point 6 to point 7\nif(innerStart>0){const pCenter=rThetaToXY(innerStartAdjustedRadius,innerStartAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,innerStart,innerStartAdjustedAngle+Math.PI,startAngle-HALF_PI);}// The line from point 7 to point 8\nconst p8=rThetaToXY(outerStartAdjustedRadius,startAngle,x,y);ctx.lineTo(p8.x,p8.y);// The corner segment from point 8 to point 1\nif(outerStart>0){const pCenter=rThetaToXY(outerStartAdjustedRadius,outerStartAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,outerStart,startAngle-HALF_PI,outerStartAdjustedAngle);}}else{ctx.moveTo(x,y);const outerStartX=Math.cos(outerStartAdjustedAngle)*outerRadius+x;const outerStartY=Math.sin(outerStartAdjustedAngle)*outerRadius+y;ctx.lineTo(outerStartX,outerStartY);const outerEndX=Math.cos(outerEndAdjustedAngle)*outerRadius+x;const outerEndY=Math.sin(outerEndAdjustedAngle)*outerRadius+y;ctx.lineTo(outerEndX,outerEndY);}ctx.closePath();}function drawArc(ctx,element,offset,spacing,circular){const{fullCircles,startAngle,circumference}=element;let endAngle=element.endAngle;if(fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);for(let i=0;i<fullCircles;++i){ctx.fill();}if(!isNaN(circumference)){endAngle=startAngle+(circumference%TAU||TAU);}}pathArc(ctx,element,offset,spacing,endAngle,circular);ctx.fill();return endAngle;}function drawBorder(ctx,element,offset,spacing,circular){const{fullCircles,startAngle,circumference,options}=element;const{borderWidth,borderJoinStyle,borderDash,borderDashOffset}=options;const inner=options.borderAlign==='inner';if(!borderWidth){return;}ctx.setLineDash(borderDash||[]);ctx.lineDashOffset=borderDashOffset;if(inner){ctx.lineWidth=borderWidth*2;ctx.lineJoin=borderJoinStyle||'round';}else{ctx.lineWidth=borderWidth;ctx.lineJoin=borderJoinStyle||'bevel';}let endAngle=element.endAngle;if(fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);for(let i=0;i<fullCircles;++i){ctx.stroke();}if(!isNaN(circumference)){endAngle=startAngle+(circumference%TAU||TAU);}}if(inner){clipArc(ctx,element,endAngle);}if(!fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);ctx.stroke();}}class ArcElement extends Element{constructor(cfg){super();this.options=undefined;this.circumference=undefined;this.startAngle=undefined;this.endAngle=undefined;this.innerRadius=undefined;this.outerRadius=undefined;this.pixelMargin=0;this.fullCircles=0;if(cfg){Object.assign(this,cfg);}}inRange(chartX,chartY,useFinalPosition){const point=this.getProps(['x','y'],useFinalPosition);const{angle,distance}=getAngleFromPoint(point,{x:chartX,y:chartY});const{startAngle,endAngle,innerRadius,outerRadius,circumference}=this.getProps(['startAngle','endAngle','innerRadius','outerRadius','circumference'],useFinalPosition);const rAdjust=(this.options.spacing+this.options.borderWidth)/2;const _circumference=valueOrDefault(circumference,endAngle-startAngle);const betweenAngles=_circumference>=TAU||_angleBetween(angle,startAngle,endAngle);const withinRadius=_isBetween(distance,innerRadius+rAdjust,outerRadius+rAdjust);return betweenAngles&&withinRadius;}getCenterPoint(useFinalPosition){const{x,y,startAngle,endAngle,innerRadius,outerRadius}=this.getProps(['x','y','startAngle','endAngle','innerRadius','outerRadius'],useFinalPosition);const{offset,spacing}=this.options;const halfAngle=(startAngle+endAngle)/2;const halfRadius=(innerRadius+outerRadius+spacing+offset)/2;return{x:x+Math.cos(halfAngle)*halfRadius,y:y+Math.sin(halfAngle)*halfRadius};}tooltipPosition(useFinalPosition){return this.getCenterPoint(useFinalPosition);}draw(ctx){const{options,circumference}=this;const offset=(options.offset||0)/4;const spacing=(options.spacing||0)/2;const circular=options.circular;this.pixelMargin=options.borderAlign==='inner'?0.33:0;this.fullCircles=circumference>TAU?Math.floor(circumference/TAU):0;if(circumference===0||this.innerRadius<0||this.outerRadius<0){return;}ctx.save();const halfAngle=(this.startAngle+this.endAngle)/2;ctx.translate(Math.cos(halfAngle)*offset,Math.sin(halfAngle)*offset);const fix=1-Math.sin(Math.min(PI,circumference||0));const radiusOffset=offset*fix;ctx.fillStyle=options.backgroundColor;ctx.strokeStyle=options.borderColor;drawArc(ctx,this,radiusOffset,spacing,circular);drawBorder(ctx,this,radiusOffset,spacing,circular);ctx.restore();}}ArcElement.id='arc';ArcElement.defaults={borderAlign:'center',borderColor:'#fff',borderDash:[],borderDashOffset:0,borderJoinStyle:undefined,borderRadius:0,borderWidth:2,offset:0,spacing:0,angle:undefined,circular:true};ArcElement.defaultRoutes={backgroundColor:'backgroundColor'};ArcElement.descriptors={_scriptable:true,_indexable:name=>name!=='borderDash'};function setStyle(ctx,options){let style=arguments.length>2&&arguments[2]!==undefined?arguments[2]:options;ctx.lineCap=valueOrDefault(style.borderCapStyle,options.borderCapStyle);ctx.setLineDash(valueOrDefault(style.borderDash,options.borderDash));ctx.lineDashOffset=valueOrDefault(style.borderDashOffset,options.borderDashOffset);ctx.lineJoin=valueOrDefault(style.borderJoinStyle,options.borderJoinStyle);ctx.lineWidth=valueOrDefault(style.borderWidth,options.borderWidth);ctx.strokeStyle=valueOrDefault(style.borderColor,options.borderColor);}function lineTo(ctx,previous,target){ctx.lineTo(target.x,target.y);}function getLineMethod(options){if(options.stepped){return _steppedLineTo;}if(options.tension||options.cubicInterpolationMode==='monotone'){return _bezierCurveTo;}return lineTo;}function pathVars(points,segment){let params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const count=points.length;const{start:paramsStart=0,end:paramsEnd=count-1}=params;const{start:segmentStart,end:segmentEnd}=segment;const start=Math.max(paramsStart,segmentStart);const end=Math.min(paramsEnd,segmentEnd);const outside=paramsStart<segmentStart&&paramsEnd<segmentStart||paramsStart>segmentEnd&&paramsEnd>segmentEnd;return{count,start,loop:segment.loop,ilen:end<start&&!outside?count+end-start:end-start};}function pathSegment(ctx,line,segment,params){const{points,options}=line;const{count,start,loop,ilen}=pathVars(points,segment,params);const lineMethod=getLineMethod(options);let{move=true,reverse}=params||{};let i,point,prev;for(i=0;i<=ilen;++i){point=points[(start+(reverse?ilen-i:i))%count];if(point.skip){continue;}else if(move){ctx.moveTo(point.x,point.y);move=false;}else{lineMethod(ctx,prev,point,reverse,options.stepped);}prev=point;}if(loop){point=points[(start+(reverse?ilen:0))%count];lineMethod(ctx,prev,point,reverse,options.stepped);}return!!loop;}function fastPathSegment(ctx,line,segment,params){const points=line.points;const{count,start,ilen}=pathVars(points,segment,params);const{move=true,reverse}=params||{};let avgX=0;let countX=0;let i,point,prevX,minY,maxY,lastY;const pointIndex=index=>(start+(reverse?ilen-index:index))%count;const drawX=()=>{if(minY!==maxY){ctx.lineTo(avgX,maxY);ctx.lineTo(avgX,minY);ctx.lineTo(avgX,lastY);}};if(move){point=points[pointIndex(0)];ctx.moveTo(point.x,point.y);}for(i=0;i<=ilen;++i){point=points[pointIndex(i)];if(point.skip){continue;}const x=point.x;const y=point.y;const truncX=x|0;if(truncX===prevX){if(y<minY){minY=y;}else if(y>maxY){maxY=y;}avgX=(countX*avgX+x)/++countX;}else{drawX();ctx.lineTo(x,y);prevX=truncX;countX=0;minY=maxY=y;}lastY=y;}drawX();}function _getSegmentMethod(line){const opts=line.options;const borderDash=opts.borderDash&&opts.borderDash.length;const useFastPath=!line._decimated&&!line._loop&&!opts.tension&&opts.cubicInterpolationMode!=='monotone'&&!opts.stepped&&!borderDash;return useFastPath?fastPathSegment:pathSegment;}function _getInterpolationMethod(options){if(options.stepped){return _steppedInterpolation;}if(options.tension||options.cubicInterpolationMode==='monotone'){return _bezierInterpolation;}return _pointInLine;}function strokePathWithCache(ctx,line,start,count){let path=line._path;if(!path){path=line._path=new Path2D();if(line.path(path,start,count)){path.closePath();}}setStyle(ctx,line.options);ctx.stroke(path);}function strokePathDirect(ctx,line,start,count){const{segments,options}=line;const segmentMethod=_getSegmentMethod(line);for(const segment of segments){setStyle(ctx,options,segment.style);ctx.beginPath();if(segmentMethod(ctx,line,segment,{start,end:start+count-1})){ctx.closePath();}ctx.stroke();}}const usePath2D=typeof Path2D==='function';function draw(ctx,line,start,count){if(usePath2D&&!line.options.segment){strokePathWithCache(ctx,line,start,count);}else{strokePathDirect(ctx,line,start,count);}}class LineElement extends Element{constructor(cfg){super();this.animated=true;this.options=undefined;this._chart=undefined;this._loop=undefined;this._fullLoop=undefined;this._path=undefined;this._points=undefined;this._segments=undefined;this._decimated=false;this._pointsUpdated=false;this._datasetIndex=undefined;if(cfg){Object.assign(this,cfg);}}updateControlPoints(chartArea,indexAxis){const options=this.options;if((options.tension||options.cubicInterpolationMode==='monotone')&&!options.stepped&&!this._pointsUpdated){const loop=options.spanGaps?this._loop:this._fullLoop;_updateBezierControlPoints(this._points,options,chartArea,loop,indexAxis);this._pointsUpdated=true;}}set points(points){this._points=points;delete this._segments;delete this._path;this._pointsUpdated=false;}get points(){return this._points;}get segments(){return this._segments||(this._segments=_computeSegments(this,this.options.segment));}first(){const segments=this.segments;const points=this.points;return segments.length&&points[segments[0].start];}last(){const segments=this.segments;const points=this.points;const count=segments.length;return count&&points[segments[count-1].end];}interpolate(point,property){const options=this.options;const value=point[property];const points=this.points;const segments=_boundSegments(this,{property,start:value,end:value});if(!segments.length){return;}const result=[];const _interpolate=_getInterpolationMethod(options);let i,ilen;for(i=0,ilen=segments.length;i<ilen;++i){const{start,end}=segments[i];const p1=points[start];const p2=points[end];if(p1===p2){result.push(p1);continue;}const t=Math.abs((value-p1[property])/(p2[property]-p1[property]));const interpolated=_interpolate(p1,p2,t,options.stepped);interpolated[property]=point[property];result.push(interpolated);}return result.length===1?result[0]:result;}pathSegment(ctx,segment,params){const segmentMethod=_getSegmentMethod(this);return segmentMethod(ctx,this,segment,params);}path(ctx,start,count){const segments=this.segments;const segmentMethod=_getSegmentMethod(this);let loop=this._loop;start=start||0;count=count||this.points.length-start;for(const segment of segments){loop&=segmentMethod(ctx,this,segment,{start,end:start+count-1});}return!!loop;}draw(ctx,chartArea,start,count){const options=this.options||{};const points=this.points||[];if(points.length&&options.borderWidth){ctx.save();draw(ctx,this,start,count);ctx.restore();}if(this.animated){this._pointsUpdated=false;this._path=undefined;}}}LineElement.id='line';LineElement.defaults={borderCapStyle:'butt',borderDash:[],borderDashOffset:0,borderJoinStyle:'miter',borderWidth:3,capBezierPoints:true,cubicInterpolationMode:'default',fill:false,spanGaps:false,stepped:false,tension:0};LineElement.defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};LineElement.descriptors={_scriptable:true,_indexable:name=>name!=='borderDash'&&name!=='fill'};function inRange$1(el,pos,axis,useFinalPosition){const options=el.options;const{[axis]:value}=el.getProps([axis],useFinalPosition);return Math.abs(pos-value)<options.radius+options.hitRadius;}class PointElement extends Element{constructor(cfg){super();this.options=undefined;this.parsed=undefined;this.skip=undefined;this.stop=undefined;if(cfg){Object.assign(this,cfg);}}inRange(mouseX,mouseY,useFinalPosition){const options=this.options;const{x,y}=this.getProps(['x','y'],useFinalPosition);return Math.pow(mouseX-x,2)+Math.pow(mouseY-y,2)<Math.pow(options.hitRadius+options.radius,2);}inXRange(mouseX,useFinalPosition){return inRange$1(this,mouseX,'x',useFinalPosition);}inYRange(mouseY,useFinalPosition){return inRange$1(this,mouseY,'y',useFinalPosition);}getCenterPoint(useFinalPosition){const{x,y}=this.getProps(['x','y'],useFinalPosition);return{x,y};}size(options){options=options||this.options||{};let radius=options.radius||0;radius=Math.max(radius,radius&&options.hoverRadius||0);const borderWidth=radius&&options.borderWidth||0;return(radius+borderWidth)*2;}draw(ctx,area){const options=this.options;if(this.skip||options.radius<0.1||!_isPointInArea(this,area,this.size(options)/2)){return;}ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.fillStyle=options.backgroundColor;drawPoint(ctx,options,this.x,this.y);}getRange(){const options=this.options||{};// @ts-expect-error Fallbacks should never be hit in practice\nreturn options.radius+options.hitRadius;}}PointElement.id='point';/**\n   * @type {any}\n   */PointElement.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:'circle',radius:3,rotation:0};/**\n   * @type {any}\n   */PointElement.defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};function getBarBounds(bar,useFinalPosition){const{x,y,base,width,height}=bar.getProps(['x','y','base','width','height'],useFinalPosition);let left,right,top,bottom,half;if(bar.horizontal){half=height/2;left=Math.min(x,base);right=Math.max(x,base);top=y-half;bottom=y+half;}else{half=width/2;left=x-half;right=x+half;top=Math.min(y,base);bottom=Math.max(y,base);}return{left,top,right,bottom};}function skipOrLimit(skip,value,min,max){return skip?0:_limitValue(value,min,max);}function parseBorderWidth(bar,maxW,maxH){const value=bar.options.borderWidth;const skip=bar.borderSkipped;const o=toTRBL(value);return{t:skipOrLimit(skip.top,o.top,0,maxH),r:skipOrLimit(skip.right,o.right,0,maxW),b:skipOrLimit(skip.bottom,o.bottom,0,maxH),l:skipOrLimit(skip.left,o.left,0,maxW)};}function parseBorderRadius(bar,maxW,maxH){const{enableBorderRadius}=bar.getProps(['enableBorderRadius']);const value=bar.options.borderRadius;const o=toTRBLCorners(value);const maxR=Math.min(maxW,maxH);const skip=bar.borderSkipped;const enableBorder=enableBorderRadius||isObject(value);return{topLeft:skipOrLimit(!enableBorder||skip.top||skip.left,o.topLeft,0,maxR),topRight:skipOrLimit(!enableBorder||skip.top||skip.right,o.topRight,0,maxR),bottomLeft:skipOrLimit(!enableBorder||skip.bottom||skip.left,o.bottomLeft,0,maxR),bottomRight:skipOrLimit(!enableBorder||skip.bottom||skip.right,o.bottomRight,0,maxR)};}function boundingRects(bar){const bounds=getBarBounds(bar);const width=bounds.right-bounds.left;const height=bounds.bottom-bounds.top;const border=parseBorderWidth(bar,width/2,height/2);const radius=parseBorderRadius(bar,width/2,height/2);return{outer:{x:bounds.left,y:bounds.top,w:width,h:height,radius},inner:{x:bounds.left+border.l,y:bounds.top+border.t,w:width-border.l-border.r,h:height-border.t-border.b,radius:{topLeft:Math.max(0,radius.topLeft-Math.max(border.t,border.l)),topRight:Math.max(0,radius.topRight-Math.max(border.t,border.r)),bottomLeft:Math.max(0,radius.bottomLeft-Math.max(border.b,border.l)),bottomRight:Math.max(0,radius.bottomRight-Math.max(border.b,border.r))}}};}function inRange(bar,x,y,useFinalPosition){const skipX=x===null;const skipY=y===null;const skipBoth=skipX&&skipY;const bounds=bar&&!skipBoth&&getBarBounds(bar,useFinalPosition);return bounds&&(skipX||_isBetween(x,bounds.left,bounds.right))&&(skipY||_isBetween(y,bounds.top,bounds.bottom));}function hasRadius(radius){return radius.topLeft||radius.topRight||radius.bottomLeft||radius.bottomRight;}function addNormalRectPath(ctx,rect){ctx.rect(rect.x,rect.y,rect.w,rect.h);}function inflateRect(rect,amount){let refRect=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const x=rect.x!==refRect.x?-amount:0;const y=rect.y!==refRect.y?-amount:0;const w=(rect.x+rect.w!==refRect.x+refRect.w?amount:0)-x;const h=(rect.y+rect.h!==refRect.y+refRect.h?amount:0)-y;return{x:rect.x+x,y:rect.y+y,w:rect.w+w,h:rect.h+h,radius:rect.radius};}class BarElement extends Element{constructor(cfg){super();this.options=undefined;this.horizontal=undefined;this.base=undefined;this.width=undefined;this.height=undefined;this.inflateAmount=undefined;if(cfg){Object.assign(this,cfg);}}draw(ctx){const{inflateAmount,options:{borderColor,backgroundColor}}=this;const{inner,outer}=boundingRects(this);const addRectPath=hasRadius(outer.radius)?addRoundedRectPath:addNormalRectPath;ctx.save();if(outer.w!==inner.w||outer.h!==inner.h){ctx.beginPath();addRectPath(ctx,inflateRect(outer,inflateAmount,inner));ctx.clip();addRectPath(ctx,inflateRect(inner,-inflateAmount,outer));ctx.fillStyle=borderColor;ctx.fill('evenodd');}ctx.beginPath();addRectPath(ctx,inflateRect(inner,inflateAmount));ctx.fillStyle=backgroundColor;ctx.fill();ctx.restore();}inRange(mouseX,mouseY,useFinalPosition){return inRange(this,mouseX,mouseY,useFinalPosition);}inXRange(mouseX,useFinalPosition){return inRange(this,mouseX,null,useFinalPosition);}inYRange(mouseY,useFinalPosition){return inRange(this,null,mouseY,useFinalPosition);}getCenterPoint(useFinalPosition){const{x,y,base,horizontal}=this.getProps(['x','y','base','horizontal'],useFinalPosition);return{x:horizontal?(x+base)/2:x,y:horizontal?y:(y+base)/2};}getRange(axis){return axis==='x'?this.width/2:this.height/2;}}BarElement.id='bar';BarElement.defaults={borderSkipped:'start',borderWidth:0,borderRadius:0,inflateAmount:'auto',pointStyle:undefined};BarElement.defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};var elements=/*#__PURE__*/Object.freeze({__proto__:null,ArcElement:ArcElement,BarElement:BarElement,LineElement:LineElement,PointElement:PointElement});const BORDER_COLORS=['rgb(54, 162, 235)','rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(153, 102, 255)','rgb(201, 203, 207)'// grey\n];// Border colors with 50% transparency\nconst BACKGROUND_COLORS=/* #__PURE__ */BORDER_COLORS.map(color=>color.replace('rgb(','rgba(').replace(')',', 0.5)'));function getBorderColor(i){return BORDER_COLORS[i%BORDER_COLORS.length];}function getBackgroundColor(i){return BACKGROUND_COLORS[i%BACKGROUND_COLORS.length];}function colorizeDefaultDataset(dataset,i){dataset.borderColor=getBorderColor(i);dataset.backgroundColor=getBackgroundColor(i);return++i;}function colorizeDoughnutDataset(dataset,i){dataset.backgroundColor=dataset.data.map(()=>getBorderColor(i++));return i;}function colorizePolarAreaDataset(dataset,i){dataset.backgroundColor=dataset.data.map(()=>getBackgroundColor(i++));return i;}function getColorizer(chart){let i=0;return(dataset,datasetIndex)=>{const controller=chart.getDatasetMeta(datasetIndex).controller;if(controller instanceof DoughnutController){i=colorizeDoughnutDataset(dataset,i);}else if(controller instanceof PolarAreaController){i=colorizePolarAreaDataset(dataset,i);}else if(controller){i=colorizeDefaultDataset(dataset,i);}};}function containsColorsDefinitions(descriptors){let k;for(k in descriptors){if(descriptors[k].borderColor||descriptors[k].backgroundColor){return true;}}return false;}function containsColorsDefinition(descriptor){return descriptor&&(descriptor.borderColor||descriptor.backgroundColor);}var plugin_colors={id:'colors',defaults:{enabled:true,forceOverride:false},beforeLayout(chart,_args,options){if(!options.enabled){return;}const{data:{datasets},options:chartOptions}=chart.config;const{elements}=chartOptions;if(!options.forceOverride&&(containsColorsDefinitions(datasets)||containsColorsDefinition(chartOptions)||elements&&containsColorsDefinitions(elements))){return;}const colorizer=getColorizer(chart);datasets.forEach(colorizer);}};function lttbDecimation(data,start,count,availableWidth,options){const samples=options.samples||availableWidth;if(samples>=count){return data.slice(start,start+count);}const decimated=[];const bucketWidth=(count-2)/(samples-2);let sampledIndex=0;const endIndex=start+count-1;let a=start;let i,maxAreaPoint,maxArea,area,nextA;decimated[sampledIndex++]=data[a];for(i=0;i<samples-2;i++){let avgX=0;let avgY=0;let j;const avgRangeStart=Math.floor((i+1)*bucketWidth)+1+start;const avgRangeEnd=Math.min(Math.floor((i+2)*bucketWidth)+1,count)+start;const avgRangeLength=avgRangeEnd-avgRangeStart;for(j=avgRangeStart;j<avgRangeEnd;j++){avgX+=data[j].x;avgY+=data[j].y;}avgX/=avgRangeLength;avgY/=avgRangeLength;const rangeOffs=Math.floor(i*bucketWidth)+1+start;const rangeTo=Math.min(Math.floor((i+1)*bucketWidth)+1,count)+start;const{x:pointAx,y:pointAy}=data[a];maxArea=area=-1;for(j=rangeOffs;j<rangeTo;j++){area=0.5*Math.abs((pointAx-avgX)*(data[j].y-pointAy)-(pointAx-data[j].x)*(avgY-pointAy));if(area>maxArea){maxArea=area;maxAreaPoint=data[j];nextA=j;}}decimated[sampledIndex++]=maxAreaPoint;a=nextA;}decimated[sampledIndex++]=data[endIndex];return decimated;}function minMaxDecimation(data,start,count,availableWidth){let avgX=0;let countX=0;let i,point,x,y,prevX,minIndex,maxIndex,startIndex,minY,maxY;const decimated=[];const endIndex=start+count-1;const xMin=data[start].x;const xMax=data[endIndex].x;const dx=xMax-xMin;for(i=start;i<start+count;++i){point=data[i];x=(point.x-xMin)/dx*availableWidth;y=point.y;const truncX=x|0;if(truncX===prevX){if(y<minY){minY=y;minIndex=i;}else if(y>maxY){maxY=y;maxIndex=i;}avgX=(countX*avgX+point.x)/++countX;}else{const lastIndex=i-1;if(!isNullOrUndef(minIndex)&&!isNullOrUndef(maxIndex)){const intermediateIndex1=Math.min(minIndex,maxIndex);const intermediateIndex2=Math.max(minIndex,maxIndex);if(intermediateIndex1!==startIndex&&intermediateIndex1!==lastIndex){decimated.push({...data[intermediateIndex1],x:avgX});}if(intermediateIndex2!==startIndex&&intermediateIndex2!==lastIndex){decimated.push({...data[intermediateIndex2],x:avgX});}}if(i>0&&lastIndex!==startIndex){decimated.push(data[lastIndex]);}decimated.push(point);prevX=truncX;countX=0;minY=maxY=y;minIndex=maxIndex=startIndex=i;}}return decimated;}function cleanDecimatedDataset(dataset){if(dataset._decimated){const data=dataset._data;delete dataset._decimated;delete dataset._data;Object.defineProperty(dataset,'data',{configurable:true,enumerable:true,writable:true,value:data});}}function cleanDecimatedData(chart){chart.data.datasets.forEach(dataset=>{cleanDecimatedDataset(dataset);});}function getStartAndCountOfVisiblePointsSimplified(meta,points){const pointCount=points.length;let start=0;let count;const{iScale}=meta;const{min,max,minDefined,maxDefined}=iScale.getUserBounds();if(minDefined){start=_limitValue(_lookupByKey(points,iScale.axis,min).lo,0,pointCount-1);}if(maxDefined){count=_limitValue(_lookupByKey(points,iScale.axis,max).hi+1,start,pointCount)-start;}else{count=pointCount-start;}return{start,count};}var plugin_decimation={id:'decimation',defaults:{algorithm:'min-max',enabled:false},beforeElementsUpdate:(chart,args,options)=>{if(!options.enabled){cleanDecimatedData(chart);return;}const availableWidth=chart.width;chart.data.datasets.forEach((dataset,datasetIndex)=>{const{_data,indexAxis}=dataset;const meta=chart.getDatasetMeta(datasetIndex);const data=_data||dataset.data;if(resolve([indexAxis,chart.options.indexAxis])==='y'){return;}if(!meta.controller.supportsDecimation){return;}const xAxis=chart.scales[meta.xAxisID];if(xAxis.type!=='linear'&&xAxis.type!=='time'){return;}if(chart.options.parsing){return;}let{start,count}=getStartAndCountOfVisiblePointsSimplified(meta,data);const threshold=options.threshold||4*availableWidth;if(count<=threshold){cleanDecimatedDataset(dataset);return;}if(isNullOrUndef(_data)){dataset._data=data;delete dataset.data;Object.defineProperty(dataset,'data',{configurable:true,enumerable:true,get:function(){return this._decimated;},set:function(d){this._data=d;}});}let decimated;switch(options.algorithm){case'lttb':decimated=lttbDecimation(data,start,count,availableWidth,options);break;case'min-max':decimated=minMaxDecimation(data,start,count,availableWidth);break;default:throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm,\"'\"));}dataset._decimated=decimated;});},destroy(chart){cleanDecimatedData(chart);}};function _segments(line,target,property){const segments=line.segments;const points=line.points;const tpoints=target.points;const parts=[];for(const segment of segments){let{start,end}=segment;end=_findSegmentEnd(start,end,points);const bounds=_getBounds(property,points[start],points[end],segment.loop);if(!target.segments){parts.push({source:segment,target:bounds,start:points[start],end:points[end]});continue;}const targetSegments=_boundSegments(target,bounds);for(const tgt of targetSegments){const subBounds=_getBounds(property,tpoints[tgt.start],tpoints[tgt.end],tgt.loop);const fillSources=_boundSegment(segment,points,subBounds);for(const fillSource of fillSources){parts.push({source:fillSource,target:tgt,start:{[property]:_getEdge(bounds,subBounds,'start',Math.max)},end:{[property]:_getEdge(bounds,subBounds,'end',Math.min)}});}}}return parts;}function _getBounds(property,first,last,loop){if(loop){return;}let start=first[property];let end=last[property];if(property==='angle'){start=_normalizeAngle(start);end=_normalizeAngle(end);}return{property,start,end};}function _pointsFromSegments(boundary,line){const{x=null,y=null}=boundary||{};const linePoints=line.points;const points=[];line.segments.forEach(_ref5=>{let{start,end}=_ref5;end=_findSegmentEnd(start,end,linePoints);const first=linePoints[start];const last=linePoints[end];if(y!==null){points.push({x:first.x,y});points.push({x:last.x,y});}else if(x!==null){points.push({x,y:first.y});points.push({x,y:last.y});}});return points;}function _findSegmentEnd(start,end,points){for(;end>start;end--){const point=points[end];if(!isNaN(point.x)&&!isNaN(point.y)){break;}}return end;}function _getEdge(a,b,prop,fn){if(a&&b){return fn(a[prop],b[prop]);}return a?a[prop]:b?b[prop]:0;}function _createBoundaryLine(boundary,line){let points=[];let _loop=false;if(isArray(boundary)){_loop=true;points=boundary;}else{points=_pointsFromSegments(boundary,line);}return points.length?new LineElement({points,options:{tension:0},_loop,_fullLoop:_loop}):null;}function _shouldApplyFill(source){return source&&source.fill!==false;}function _resolveTarget(sources,index,propagate){const source=sources[index];let fill=source.fill;const visited=[index];let target;if(!propagate){return fill;}while(fill!==false&&visited.indexOf(fill)===-1){if(!isNumberFinite(fill)){return fill;}target=sources[fill];if(!target){return false;}if(target.visible){return fill;}visited.push(fill);fill=target.fill;}return false;}function _decodeFill(line,index,count){const fill=parseFillOption(line);if(isObject(fill)){return isNaN(fill.value)?false:fill;}let target=parseFloat(fill);if(isNumberFinite(target)&&Math.floor(target)===target){return decodeTargetIndex(fill[0],index,target,count);}return['origin','start','end','stack','shape'].indexOf(fill)>=0&&fill;}function decodeTargetIndex(firstCh,index,target,count){if(firstCh==='-'||firstCh==='+'){target=index+target;}if(target===index||target<0||target>=count){return false;}return target;}function _getTargetPixel(fill,scale){let pixel=null;if(fill==='start'){pixel=scale.bottom;}else if(fill==='end'){pixel=scale.top;}else if(isObject(fill)){pixel=scale.getPixelForValue(fill.value);}else if(scale.getBasePixel){pixel=scale.getBasePixel();}return pixel;}function _getTargetValue(fill,scale,startValue){let value;if(fill==='start'){value=startValue;}else if(fill==='end'){value=scale.options.reverse?scale.min:scale.max;}else if(isObject(fill)){value=fill.value;}else{value=scale.getBaseValue();}return value;}function parseFillOption(line){const options=line.options;const fillOption=options.fill;let fill=valueOrDefault(fillOption&&fillOption.target,fillOption);if(fill===undefined){fill=!!options.backgroundColor;}if(fill===false||fill===null){return false;}if(fill===true){return'origin';}return fill;}function _buildStackLine(source){const{scale,index,line}=source;const points=[];const segments=line.segments;const sourcePoints=line.points;const linesBelow=getLinesBelow(scale,index);linesBelow.push(_createBoundaryLine({x:null,y:scale.bottom},line));for(let i=0;i<segments.length;i++){const segment=segments[i];for(let j=segment.start;j<=segment.end;j++){addPointsBelow(points,sourcePoints[j],linesBelow);}}return new LineElement({points,options:{}});}function getLinesBelow(scale,index){const below=[];const metas=scale.getMatchingVisibleMetas('line');for(let i=0;i<metas.length;i++){const meta=metas[i];if(meta.index===index){break;}if(!meta.hidden){below.unshift(meta.dataset);}}return below;}function addPointsBelow(points,sourcePoint,linesBelow){const postponed=[];for(let j=0;j<linesBelow.length;j++){const line=linesBelow[j];const{first,last,point}=findPoint(line,sourcePoint,'x');if(!point||first&&last){continue;}if(first){postponed.unshift(point);}else{points.push(point);if(!last){break;}}}points.push(...postponed);}function findPoint(line,sourcePoint,property){const point=line.interpolate(sourcePoint,property);if(!point){return{};}const pointValue=point[property];const segments=line.segments;const linePoints=line.points;let first=false;let last=false;for(let i=0;i<segments.length;i++){const segment=segments[i];const firstValue=linePoints[segment.start][property];const lastValue=linePoints[segment.end][property];if(_isBetween(pointValue,firstValue,lastValue)){first=pointValue===firstValue;last=pointValue===lastValue;break;}}return{first,last,point};}class simpleArc{constructor(opts){this.x=opts.x;this.y=opts.y;this.radius=opts.radius;}pathSegment(ctx,bounds,opts){const{x,y,radius}=this;bounds=bounds||{start:0,end:TAU};ctx.arc(x,y,radius,bounds.end,bounds.start,true);return!opts.bounds;}interpolate(point){const{x,y,radius}=this;const angle=point.angle;return{x:x+Math.cos(angle)*radius,y:y+Math.sin(angle)*radius,angle};}}function _getTarget(source){const{chart,fill,line}=source;if(isNumberFinite(fill)){return getLineByIndex(chart,fill);}if(fill==='stack'){return _buildStackLine(source);}if(fill==='shape'){return true;}const boundary=computeBoundary(source);if(boundary instanceof simpleArc){return boundary;}return _createBoundaryLine(boundary,line);}function getLineByIndex(chart,index){const meta=chart.getDatasetMeta(index);const visible=meta&&chart.isDatasetVisible(index);return visible?meta.dataset:null;}function computeBoundary(source){const scale=source.scale||{};if(scale.getPointPositionForValue){return computeCircularBoundary(source);}return computeLinearBoundary(source);}function computeLinearBoundary(source){const{scale={},fill}=source;const pixel=_getTargetPixel(fill,scale);if(isNumberFinite(pixel)){const horizontal=scale.isHorizontal();return{x:horizontal?pixel:null,y:horizontal?null:pixel};}return null;}function computeCircularBoundary(source){const{scale,fill}=source;const options=scale.options;const length=scale.getLabels().length;const start=options.reverse?scale.max:scale.min;const value=_getTargetValue(fill,scale,start);const target=[];if(options.grid.circular){const center=scale.getPointPositionForValue(0,start);return new simpleArc({x:center.x,y:center.y,radius:scale.getDistanceFromCenterForValue(value)});}for(let i=0;i<length;++i){target.push(scale.getPointPositionForValue(i,value));}return target;}function _drawfill(ctx,source,area){const target=_getTarget(source);const{line,scale,axis}=source;const lineOpts=line.options;const fillOption=lineOpts.fill;const color=lineOpts.backgroundColor;const{above=color,below=color}=fillOption||{};if(target&&line.points.length){clipArea(ctx,area);doFill(ctx,{line,target,above,below,area,scale,axis});unclipArea(ctx);}}function doFill(ctx,cfg){const{line,target,above,below,area,scale}=cfg;const property=line._loop?'angle':cfg.axis;ctx.save();if(property==='x'&&below!==above){clipVertical(ctx,target,area.top);fill(ctx,{line,target,color:above,scale,property});ctx.restore();ctx.save();clipVertical(ctx,target,area.bottom);}fill(ctx,{line,target,color:below,scale,property});ctx.restore();}function clipVertical(ctx,target,clipY){const{segments,points}=target;let first=true;let lineLoop=false;ctx.beginPath();for(const segment of segments){const{start,end}=segment;const firstPoint=points[start];const lastPoint=points[_findSegmentEnd(start,end,points)];if(first){ctx.moveTo(firstPoint.x,firstPoint.y);first=false;}else{ctx.lineTo(firstPoint.x,clipY);ctx.lineTo(firstPoint.x,firstPoint.y);}lineLoop=!!target.pathSegment(ctx,segment,{move:lineLoop});if(lineLoop){ctx.closePath();}else{ctx.lineTo(lastPoint.x,clipY);}}ctx.lineTo(target.first().x,clipY);ctx.closePath();ctx.clip();}function fill(ctx,cfg){const{line,target,property,color,scale}=cfg;const segments=_segments(line,target,property);for(const{source:src,target:tgt,start,end}of segments){const{style:{backgroundColor=color}={}}=src;const notShape=target!==true;ctx.save();ctx.fillStyle=backgroundColor;clipBounds(ctx,scale,notShape&&_getBounds(property,start,end));ctx.beginPath();const lineLoop=!!line.pathSegment(ctx,src);let loop;if(notShape){if(lineLoop){ctx.closePath();}else{interpolatedLineTo(ctx,target,end,property);}const targetLoop=!!target.pathSegment(ctx,tgt,{move:lineLoop,reverse:true});loop=lineLoop&&targetLoop;if(!loop){interpolatedLineTo(ctx,target,start,property);}}ctx.closePath();ctx.fill(loop?'evenodd':'nonzero');ctx.restore();}}function clipBounds(ctx,scale,bounds){const{top,bottom}=scale.chart.chartArea;const{property,start,end}=bounds||{};if(property==='x'){ctx.beginPath();ctx.rect(start,top,end-start,bottom-top);ctx.clip();}}function interpolatedLineTo(ctx,target,point,property){const interpolatedPoint=target.interpolate(point,property);if(interpolatedPoint){ctx.lineTo(interpolatedPoint.x,interpolatedPoint.y);}}var index={id:'filler',afterDatasetsUpdate(chart,_args,options){const count=(chart.data.datasets||[]).length;const sources=[];let meta,i,line,source;for(i=0;i<count;++i){meta=chart.getDatasetMeta(i);line=meta.dataset;source=null;if(line&&line.options&&line instanceof LineElement){source={visible:chart.isDatasetVisible(i),index:i,fill:_decodeFill(line,i,count),chart,axis:meta.controller.options.indexAxis,scale:meta.vScale,line};}meta.$filler=source;sources.push(source);}for(i=0;i<count;++i){source=sources[i];if(!source||source.fill===false){continue;}source.fill=_resolveTarget(sources,i,options.propagate);}},beforeDraw(chart,_args,options){const draw=options.drawTime==='beforeDraw';const metasets=chart.getSortedVisibleDatasetMetas();const area=chart.chartArea;for(let i=metasets.length-1;i>=0;--i){const source=metasets[i].$filler;if(!source){continue;}source.line.updateControlPoints(area,source.axis);if(draw&&source.fill){_drawfill(chart.ctx,source,area);}}},beforeDatasetsDraw(chart,_args,options){if(options.drawTime!=='beforeDatasetsDraw'){return;}const metasets=chart.getSortedVisibleDatasetMetas();for(let i=metasets.length-1;i>=0;--i){const source=metasets[i].$filler;if(_shouldApplyFill(source)){_drawfill(chart.ctx,source,chart.chartArea);}}},beforeDatasetDraw(chart,args,options){const source=args.meta.$filler;if(!_shouldApplyFill(source)||options.drawTime!=='beforeDatasetDraw'){return;}_drawfill(chart.ctx,source,chart.chartArea);},defaults:{propagate:true,drawTime:'beforeDatasetDraw'}};const getBoxSize=(labelOpts,fontSize)=>{let{boxHeight=fontSize,boxWidth=fontSize}=labelOpts;if(labelOpts.usePointStyle){boxHeight=Math.min(boxHeight,fontSize);boxWidth=labelOpts.pointStyleWidth||Math.min(boxWidth,fontSize);}return{boxWidth,boxHeight,itemHeight:Math.max(fontSize,boxHeight)};};const itemsEqual=(a,b)=>a!==null&&b!==null&&a.datasetIndex===b.datasetIndex&&a.index===b.index;class Legend extends Element{constructor(config){super();this._added=false;this.legendHitBoxes=[];this._hoveredItem=null;this.doughnutMode=false;this.chart=config.chart;this.options=config.options;this.ctx=config.ctx;this.legendItems=undefined;this.columnSizes=undefined;this.lineWidths=undefined;this.maxHeight=undefined;this.maxWidth=undefined;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.height=undefined;this.width=undefined;this._margins=undefined;this.position=undefined;this.weight=undefined;this.fullSize=undefined;}update(maxWidth,maxHeight,margins){this.maxWidth=maxWidth;this.maxHeight=maxHeight;this._margins=margins;this.setDimensions();this.buildLabels();this.fit();}setDimensions(){if(this.isHorizontal()){this.width=this.maxWidth;this.left=this._margins.left;this.right=this.width;}else{this.height=this.maxHeight;this.top=this._margins.top;this.bottom=this.height;}}buildLabels(){const labelOpts=this.options.labels||{};let legendItems=callback(labelOpts.generateLabels,[this.chart],this)||[];if(labelOpts.filter){legendItems=legendItems.filter(item=>labelOpts.filter(item,this.chart.data));}if(labelOpts.sort){legendItems=legendItems.sort((a,b)=>labelOpts.sort(a,b,this.chart.data));}if(this.options.reverse){legendItems.reverse();}this.legendItems=legendItems;}fit(){const{options,ctx}=this;if(!options.display){this.width=this.height=0;return;}const labelOpts=options.labels;const labelFont=toFont(labelOpts.font);const fontSize=labelFont.size;const titleHeight=this._computeTitleHeight();const{boxWidth,itemHeight}=getBoxSize(labelOpts,fontSize);let width,height;ctx.font=labelFont.string;if(this.isHorizontal()){width=this.maxWidth;height=this._fitRows(titleHeight,fontSize,boxWidth,itemHeight)+10;}else{height=this.maxHeight;width=this._fitCols(titleHeight,labelFont,boxWidth,itemHeight)+10;}this.width=Math.min(width,options.maxWidth||this.maxWidth);this.height=Math.min(height,options.maxHeight||this.maxHeight);}_fitRows(titleHeight,fontSize,boxWidth,itemHeight){const{ctx,maxWidth,options:{labels:{padding}}}=this;const hitboxes=this.legendHitBoxes=[];const lineWidths=this.lineWidths=[0];const lineHeight=itemHeight+padding;let totalHeight=titleHeight;ctx.textAlign='left';ctx.textBaseline='middle';let row=-1;let top=-lineHeight;this.legendItems.forEach((legendItem,i)=>{const itemWidth=boxWidth+fontSize/2+ctx.measureText(legendItem.text).width;if(i===0||lineWidths[lineWidths.length-1]+itemWidth+2*padding>maxWidth){totalHeight+=lineHeight;lineWidths[lineWidths.length-(i>0?0:1)]=0;top+=lineHeight;row++;}hitboxes[i]={left:0,top,row,width:itemWidth,height:itemHeight};lineWidths[lineWidths.length-1]+=itemWidth+padding;});return totalHeight;}_fitCols(titleHeight,labelFont,boxWidth,_itemHeight){const{ctx,maxHeight,options:{labels:{padding}}}=this;const hitboxes=this.legendHitBoxes=[];const columnSizes=this.columnSizes=[];const heightLimit=maxHeight-titleHeight;let totalWidth=padding;let currentColWidth=0;let currentColHeight=0;let left=0;let col=0;this.legendItems.forEach((legendItem,i)=>{const{itemWidth,itemHeight}=calculateItemSize(boxWidth,labelFont,ctx,legendItem,_itemHeight);if(i>0&&currentColHeight+itemHeight+2*padding>heightLimit){totalWidth+=currentColWidth+padding;columnSizes.push({width:currentColWidth,height:currentColHeight});left+=currentColWidth+padding;col++;currentColWidth=currentColHeight=0;}hitboxes[i]={left,top:currentColHeight,col,width:itemWidth,height:itemHeight};currentColWidth=Math.max(currentColWidth,itemWidth);currentColHeight+=itemHeight+padding;});totalWidth+=currentColWidth;columnSizes.push({width:currentColWidth,height:currentColHeight});return totalWidth;}adjustHitBoxes(){if(!this.options.display){return;}const titleHeight=this._computeTitleHeight();const{legendHitBoxes:hitboxes,options:{align,labels:{padding},rtl}}=this;const rtlHelper=getRtlAdapter(rtl,this.left,this.width);if(this.isHorizontal()){let row=0;let left=_alignStartEnd(align,this.left+padding,this.right-this.lineWidths[row]);for(const hitbox of hitboxes){if(row!==hitbox.row){row=hitbox.row;left=_alignStartEnd(align,this.left+padding,this.right-this.lineWidths[row]);}hitbox.top+=this.top+titleHeight+padding;hitbox.left=rtlHelper.leftForLtr(rtlHelper.x(left),hitbox.width);left+=hitbox.width+padding;}}else{let col=0;let top=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-this.columnSizes[col].height);for(const hitbox of hitboxes){if(hitbox.col!==col){col=hitbox.col;top=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-this.columnSizes[col].height);}hitbox.top=top;hitbox.left+=this.left+padding;hitbox.left=rtlHelper.leftForLtr(rtlHelper.x(hitbox.left),hitbox.width);top+=hitbox.height+padding;}}}isHorizontal(){return this.options.position==='top'||this.options.position==='bottom';}draw(){if(this.options.display){const ctx=this.ctx;clipArea(ctx,this);this._draw();unclipArea(ctx);}}_draw(){const{options:opts,columnSizes,lineWidths,ctx}=this;const{align,labels:labelOpts}=opts;const defaultColor=defaults.color;const rtlHelper=getRtlAdapter(opts.rtl,this.left,this.width);const labelFont=toFont(labelOpts.font);const{padding}=labelOpts;const fontSize=labelFont.size;const halfFontSize=fontSize/2;let cursor;this.drawTitle();ctx.textAlign=rtlHelper.textAlign('left');ctx.textBaseline='middle';ctx.lineWidth=0.5;ctx.font=labelFont.string;const{boxWidth,boxHeight,itemHeight}=getBoxSize(labelOpts,fontSize);const drawLegendBox=function(x,y,legendItem){if(isNaN(boxWidth)||boxWidth<=0||isNaN(boxHeight)||boxHeight<0){return;}ctx.save();const lineWidth=valueOrDefault(legendItem.lineWidth,1);ctx.fillStyle=valueOrDefault(legendItem.fillStyle,defaultColor);ctx.lineCap=valueOrDefault(legendItem.lineCap,'butt');ctx.lineDashOffset=valueOrDefault(legendItem.lineDashOffset,0);ctx.lineJoin=valueOrDefault(legendItem.lineJoin,'miter');ctx.lineWidth=lineWidth;ctx.strokeStyle=valueOrDefault(legendItem.strokeStyle,defaultColor);ctx.setLineDash(valueOrDefault(legendItem.lineDash,[]));if(labelOpts.usePointStyle){const drawOptions={radius:boxHeight*Math.SQRT2/2,pointStyle:legendItem.pointStyle,rotation:legendItem.rotation,borderWidth:lineWidth};const centerX=rtlHelper.xPlus(x,boxWidth/2);const centerY=y+halfFontSize;drawPointLegend(ctx,drawOptions,centerX,centerY,labelOpts.pointStyleWidth&&boxWidth);}else{const yBoxTop=y+Math.max((fontSize-boxHeight)/2,0);const xBoxLeft=rtlHelper.leftForLtr(x,boxWidth);const borderRadius=toTRBLCorners(legendItem.borderRadius);ctx.beginPath();if(Object.values(borderRadius).some(v=>v!==0)){addRoundedRectPath(ctx,{x:xBoxLeft,y:yBoxTop,w:boxWidth,h:boxHeight,radius:borderRadius});}else{ctx.rect(xBoxLeft,yBoxTop,boxWidth,boxHeight);}ctx.fill();if(lineWidth!==0){ctx.stroke();}}ctx.restore();};const fillText=function(x,y,legendItem){renderText(ctx,legendItem.text,x,y+itemHeight/2,labelFont,{strikethrough:legendItem.hidden,textAlign:rtlHelper.textAlign(legendItem.textAlign)});};const isHorizontal=this.isHorizontal();const titleHeight=this._computeTitleHeight();if(isHorizontal){cursor={x:_alignStartEnd(align,this.left+padding,this.right-lineWidths[0]),y:this.top+padding+titleHeight,line:0};}else{cursor={x:this.left+padding,y:_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-columnSizes[0].height),line:0};}overrideTextDirection(this.ctx,opts.textDirection);const lineHeight=itemHeight+padding;this.legendItems.forEach((legendItem,i)=>{ctx.strokeStyle=legendItem.fontColor;ctx.fillStyle=legendItem.fontColor;const textWidth=ctx.measureText(legendItem.text).width;const textAlign=rtlHelper.textAlign(legendItem.textAlign||(legendItem.textAlign=labelOpts.textAlign));const width=boxWidth+halfFontSize+textWidth;let x=cursor.x;let y=cursor.y;rtlHelper.setWidth(this.width);if(isHorizontal){if(i>0&&x+width+padding>this.right){y=cursor.y+=lineHeight;cursor.line++;x=cursor.x=_alignStartEnd(align,this.left+padding,this.right-lineWidths[cursor.line]);}}else if(i>0&&y+lineHeight>this.bottom){x=cursor.x=x+columnSizes[cursor.line].width+padding;cursor.line++;y=cursor.y=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-columnSizes[cursor.line].height);}const realX=rtlHelper.x(x);drawLegendBox(realX,y,legendItem);x=_textX(textAlign,x+boxWidth+halfFontSize,isHorizontal?x+width:this.right,opts.rtl);fillText(rtlHelper.x(x),y,legendItem);if(isHorizontal){cursor.x+=width+padding;}else if(typeof legendItem.text!=='string'){const fontLineHeight=labelFont.lineHeight;cursor.y+=calculateLegendItemHeight(legendItem,fontLineHeight)+padding;}else{cursor.y+=lineHeight;}});restoreTextDirection(this.ctx,opts.textDirection);}drawTitle(){const opts=this.options;const titleOpts=opts.title;const titleFont=toFont(titleOpts.font);const titlePadding=toPadding(titleOpts.padding);if(!titleOpts.display){return;}const rtlHelper=getRtlAdapter(opts.rtl,this.left,this.width);const ctx=this.ctx;const position=titleOpts.position;const halfFontSize=titleFont.size/2;const topPaddingPlusHalfFontSize=titlePadding.top+halfFontSize;let y;let left=this.left;let maxWidth=this.width;if(this.isHorizontal()){maxWidth=Math.max(...this.lineWidths);y=this.top+topPaddingPlusHalfFontSize;left=_alignStartEnd(opts.align,left,this.right-maxWidth);}else{const maxHeight=this.columnSizes.reduce((acc,size)=>Math.max(acc,size.height),0);y=topPaddingPlusHalfFontSize+_alignStartEnd(opts.align,this.top,this.bottom-maxHeight-opts.labels.padding-this._computeTitleHeight());}const x=_alignStartEnd(position,left,left+maxWidth);ctx.textAlign=rtlHelper.textAlign(_toLeftRightCenter(position));ctx.textBaseline='middle';ctx.strokeStyle=titleOpts.color;ctx.fillStyle=titleOpts.color;ctx.font=titleFont.string;renderText(ctx,titleOpts.text,x,y,titleFont);}_computeTitleHeight(){const titleOpts=this.options.title;const titleFont=toFont(titleOpts.font);const titlePadding=toPadding(titleOpts.padding);return titleOpts.display?titleFont.lineHeight+titlePadding.height:0;}_getLegendItemAt(x,y){let i,hitBox,lh;if(_isBetween(x,this.left,this.right)&&_isBetween(y,this.top,this.bottom)){lh=this.legendHitBoxes;for(i=0;i<lh.length;++i){hitBox=lh[i];if(_isBetween(x,hitBox.left,hitBox.left+hitBox.width)&&_isBetween(y,hitBox.top,hitBox.top+hitBox.height)){return this.legendItems[i];}}}return null;}handleEvent(e){const opts=this.options;if(!isListened(e.type,opts)){return;}const hoveredItem=this._getLegendItemAt(e.x,e.y);if(e.type==='mousemove'||e.type==='mouseout'){const previous=this._hoveredItem;const sameItem=itemsEqual(previous,hoveredItem);if(previous&&!sameItem){callback(opts.onLeave,[e,previous,this],this);}this._hoveredItem=hoveredItem;if(hoveredItem&&!sameItem){callback(opts.onHover,[e,hoveredItem,this],this);}}else if(hoveredItem){callback(opts.onClick,[e,hoveredItem,this],this);}}}function calculateItemSize(boxWidth,labelFont,ctx,legendItem,_itemHeight){const itemWidth=calculateItemWidth(legendItem,boxWidth,labelFont,ctx);const itemHeight=calculateItemHeight(_itemHeight,legendItem,labelFont.lineHeight);return{itemWidth,itemHeight};}function calculateItemWidth(legendItem,boxWidth,labelFont,ctx){let legendItemText=legendItem.text;if(legendItemText&&typeof legendItemText!=='string'){legendItemText=legendItemText.reduce((a,b)=>a.length>b.length?a:b);}return boxWidth+labelFont.size/2+ctx.measureText(legendItemText).width;}function calculateItemHeight(_itemHeight,legendItem,fontLineHeight){let itemHeight=_itemHeight;if(typeof legendItem.text!=='string'){itemHeight=calculateLegendItemHeight(legendItem,fontLineHeight);}return itemHeight;}function calculateLegendItemHeight(legendItem,fontLineHeight){const labelHeight=legendItem.text?legendItem.text.length:0;return fontLineHeight*labelHeight;}function isListened(type,opts){if((type==='mousemove'||type==='mouseout')&&(opts.onHover||opts.onLeave)){return true;}if(opts.onClick&&(type==='click'||type==='mouseup')){return true;}return false;}var plugin_legend={id:'legend',_element:Legend,start(chart,_args,options){const legend=chart.legend=new Legend({ctx:chart.ctx,options,chart});layouts.configure(chart,legend,options);layouts.addBox(chart,legend);},stop(chart){layouts.removeBox(chart,chart.legend);delete chart.legend;},beforeUpdate(chart,_args,options){const legend=chart.legend;layouts.configure(chart,legend,options);legend.options=options;},afterUpdate(chart){const legend=chart.legend;legend.buildLabels();legend.adjustHitBoxes();},afterEvent(chart,args){if(!args.replay){chart.legend.handleEvent(args.event);}},defaults:{display:true,position:'top',align:'center',fullSize:true,reverse:false,weight:1000,onClick(e,legendItem,legend){const index=legendItem.datasetIndex;const ci=legend.chart;if(ci.isDatasetVisible(index)){ci.hide(index);legendItem.hidden=true;}else{ci.show(index);legendItem.hidden=false;}},onHover:null,onLeave:null,labels:{color:ctx=>ctx.chart.options.color,boxWidth:40,padding:10,generateLabels(chart){const datasets=chart.data.datasets;const{labels:{usePointStyle,pointStyle,textAlign,color,useBorderRadius,borderRadius}}=chart.legend.options;return chart._getSortedDatasetMetas().map(meta=>{const style=meta.controller.getStyle(usePointStyle?0:undefined);const borderWidth=toPadding(style.borderWidth);return{text:datasets[meta.index].label,fillStyle:style.backgroundColor,fontColor:color,hidden:!meta.visible,lineCap:style.borderCapStyle,lineDash:style.borderDash,lineDashOffset:style.borderDashOffset,lineJoin:style.borderJoinStyle,lineWidth:(borderWidth.width+borderWidth.height)/4,strokeStyle:style.borderColor,pointStyle:pointStyle||style.pointStyle,rotation:style.rotation,textAlign:textAlign||style.textAlign,borderRadius:useBorderRadius&&(borderRadius||style.borderRadius),datasetIndex:meta.index};},this);}},title:{color:ctx=>ctx.chart.options.color,display:false,position:'center',text:''}},descriptors:{_scriptable:name=>!name.startsWith('on'),labels:{_scriptable:name=>!['generateLabels','filter','sort'].includes(name)}}};class Title extends Element{constructor(config){super();this.chart=config.chart;this.options=config.options;this.ctx=config.ctx;this._padding=undefined;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.width=undefined;this.height=undefined;this.position=undefined;this.weight=undefined;this.fullSize=undefined;}update(maxWidth,maxHeight){const opts=this.options;this.left=0;this.top=0;if(!opts.display){this.width=this.height=this.right=this.bottom=0;return;}this.width=this.right=maxWidth;this.height=this.bottom=maxHeight;const lineCount=isArray(opts.text)?opts.text.length:1;this._padding=toPadding(opts.padding);const textSize=lineCount*toFont(opts.font).lineHeight+this._padding.height;if(this.isHorizontal()){this.height=textSize;}else{this.width=textSize;}}isHorizontal(){const pos=this.options.position;return pos==='top'||pos==='bottom';}_drawArgs(offset){const{top,left,bottom,right,options}=this;const align=options.align;let rotation=0;let maxWidth,titleX,titleY;if(this.isHorizontal()){titleX=_alignStartEnd(align,left,right);titleY=top+offset;maxWidth=right-left;}else{if(options.position==='left'){titleX=left+offset;titleY=_alignStartEnd(align,bottom,top);rotation=PI*-0.5;}else{titleX=right-offset;titleY=_alignStartEnd(align,top,bottom);rotation=PI*0.5;}maxWidth=bottom-top;}return{titleX,titleY,maxWidth,rotation};}draw(){const ctx=this.ctx;const opts=this.options;if(!opts.display){return;}const fontOpts=toFont(opts.font);const lineHeight=fontOpts.lineHeight;const offset=lineHeight/2+this._padding.top;const{titleX,titleY,maxWidth,rotation}=this._drawArgs(offset);renderText(ctx,opts.text,0,0,fontOpts,{color:opts.color,maxWidth,rotation,textAlign:_toLeftRightCenter(opts.align),textBaseline:'middle',translation:[titleX,titleY]});}}function createTitle(chart,titleOpts){const title=new Title({ctx:chart.ctx,options:titleOpts,chart});layouts.configure(chart,title,titleOpts);layouts.addBox(chart,title);chart.titleBlock=title;}var plugin_title={id:'title',_element:Title,start(chart,_args,options){createTitle(chart,options);},stop(chart){const titleBlock=chart.titleBlock;layouts.removeBox(chart,titleBlock);delete chart.titleBlock;},beforeUpdate(chart,_args,options){const title=chart.titleBlock;layouts.configure(chart,title,options);title.options=options;},defaults:{align:'center',display:false,font:{weight:'bold'},fullSize:true,padding:10,position:'top',text:'',weight:2000},defaultRoutes:{color:'color'},descriptors:{_scriptable:true,_indexable:false}};const map=new WeakMap();var plugin_subtitle={id:'subtitle',start(chart,_args,options){const title=new Title({ctx:chart.ctx,options,chart});layouts.configure(chart,title,options);layouts.addBox(chart,title);map.set(chart,title);},stop(chart){layouts.removeBox(chart,map.get(chart));map.delete(chart);},beforeUpdate(chart,_args,options){const title=map.get(chart);layouts.configure(chart,title,options);title.options=options;},defaults:{align:'center',display:false,font:{weight:'normal'},fullSize:true,padding:0,position:'top',text:'',weight:1500},defaultRoutes:{color:'color'},descriptors:{_scriptable:true,_indexable:false}};const positioners={average(items){if(!items.length){return false;}let i,len;let xSet=new Set();let y=0;let count=0;for(i=0,len=items.length;i<len;++i){const el=items[i].element;if(el&&el.hasValue()){const pos=el.tooltipPosition();xSet.add(pos.x);y+=pos.y;++count;}}const xAverage=[...xSet].reduce((a,b)=>a+b)/xSet.size;return{x:xAverage,y:y/count};},nearest(items,eventPosition){if(!items.length){return false;}let x=eventPosition.x;let y=eventPosition.y;let minDistance=Number.POSITIVE_INFINITY;let i,len,nearestElement;for(i=0,len=items.length;i<len;++i){const el=items[i].element;if(el&&el.hasValue()){const center=el.getCenterPoint();const d=distanceBetweenPoints(eventPosition,center);if(d<minDistance){minDistance=d;nearestElement=el;}}}if(nearestElement){const tp=nearestElement.tooltipPosition();x=tp.x;y=tp.y;}return{x,y};}};function pushOrConcat(base,toPush){if(toPush){if(isArray(toPush)){Array.prototype.push.apply(base,toPush);}else{base.push(toPush);}}return base;}function splitNewlines(str){if((typeof str==='string'||str instanceof String)&&str.indexOf('\\n')>-1){return str.split('\\n');}return str;}function createTooltipItem(chart,item){const{element,datasetIndex,index}=item;const controller=chart.getDatasetMeta(datasetIndex).controller;const{label,value}=controller.getLabelAndValue(index);return{chart,label,parsed:controller.getParsed(index),raw:chart.data.datasets[datasetIndex].data[index],formattedValue:value,dataset:controller.getDataset(),dataIndex:index,datasetIndex,element};}function getTooltipSize(tooltip,options){const ctx=tooltip.chart.ctx;const{body,footer,title}=tooltip;const{boxWidth,boxHeight}=options;const bodyFont=toFont(options.bodyFont);const titleFont=toFont(options.titleFont);const footerFont=toFont(options.footerFont);const titleLineCount=title.length;const footerLineCount=footer.length;const bodyLineItemCount=body.length;const padding=toPadding(options.padding);let height=padding.height;let width=0;let combinedBodyLength=body.reduce((count,bodyItem)=>count+bodyItem.before.length+bodyItem.lines.length+bodyItem.after.length,0);combinedBodyLength+=tooltip.beforeBody.length+tooltip.afterBody.length;if(titleLineCount){height+=titleLineCount*titleFont.lineHeight+(titleLineCount-1)*options.titleSpacing+options.titleMarginBottom;}if(combinedBodyLength){const bodyLineHeight=options.displayColors?Math.max(boxHeight,bodyFont.lineHeight):bodyFont.lineHeight;height+=bodyLineItemCount*bodyLineHeight+(combinedBodyLength-bodyLineItemCount)*bodyFont.lineHeight+(combinedBodyLength-1)*options.bodySpacing;}if(footerLineCount){height+=options.footerMarginTop+footerLineCount*footerFont.lineHeight+(footerLineCount-1)*options.footerSpacing;}let widthPadding=0;const maxLineWidth=function(line){width=Math.max(width,ctx.measureText(line).width+widthPadding);};ctx.save();ctx.font=titleFont.string;each(tooltip.title,maxLineWidth);ctx.font=bodyFont.string;each(tooltip.beforeBody.concat(tooltip.afterBody),maxLineWidth);widthPadding=options.displayColors?boxWidth+2+options.boxPadding:0;each(body,bodyItem=>{each(bodyItem.before,maxLineWidth);each(bodyItem.lines,maxLineWidth);each(bodyItem.after,maxLineWidth);});widthPadding=0;ctx.font=footerFont.string;each(tooltip.footer,maxLineWidth);ctx.restore();width+=padding.width;return{width,height};}function determineYAlign(chart,size){const{y,height}=size;if(y<height/2){return'top';}else if(y>chart.height-height/2){return'bottom';}return'center';}function doesNotFitWithAlign(xAlign,chart,options,size){const{x,width}=size;const caret=options.caretSize+options.caretPadding;if(xAlign==='left'&&x+width+caret>chart.width){return true;}if(xAlign==='right'&&x-width-caret<0){return true;}}function determineXAlign(chart,options,size,yAlign){const{x,width}=size;const{width:chartWidth,chartArea:{left,right}}=chart;let xAlign='center';if(yAlign==='center'){xAlign=x<=(left+right)/2?'left':'right';}else if(x<=width/2){xAlign='left';}else if(x>=chartWidth-width/2){xAlign='right';}if(doesNotFitWithAlign(xAlign,chart,options,size)){xAlign='center';}return xAlign;}function determineAlignment(chart,options,size){const yAlign=size.yAlign||options.yAlign||determineYAlign(chart,size);return{xAlign:size.xAlign||options.xAlign||determineXAlign(chart,options,size,yAlign),yAlign};}function alignX(size,xAlign){let{x,width}=size;if(xAlign==='right'){x-=width;}else if(xAlign==='center'){x-=width/2;}return x;}function alignY(size,yAlign,paddingAndSize){let{y,height}=size;if(yAlign==='top'){y+=paddingAndSize;}else if(yAlign==='bottom'){y-=height+paddingAndSize;}else{y-=height/2;}return y;}function getBackgroundPoint(options,size,alignment,chart){const{caretSize,caretPadding,cornerRadius}=options;const{xAlign,yAlign}=alignment;const paddingAndSize=caretSize+caretPadding;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(cornerRadius);let x=alignX(size,xAlign);const y=alignY(size,yAlign,paddingAndSize);if(yAlign==='center'){if(xAlign==='left'){x+=paddingAndSize;}else if(xAlign==='right'){x-=paddingAndSize;}}else if(xAlign==='left'){x-=Math.max(topLeft,bottomLeft)+caretSize;}else if(xAlign==='right'){x+=Math.max(topRight,bottomRight)+caretSize;}return{x:_limitValue(x,0,chart.width-size.width),y:_limitValue(y,0,chart.height-size.height)};}function getAlignedX(tooltip,align,options){const padding=toPadding(options.padding);return align==='center'?tooltip.x+tooltip.width/2:align==='right'?tooltip.x+tooltip.width-padding.right:tooltip.x+padding.left;}function getBeforeAfterBodyLines(callback){return pushOrConcat([],splitNewlines(callback));}function createTooltipContext(parent,tooltip,tooltipItems){return createContext(parent,{tooltip,tooltipItems,type:'tooltip'});}function overrideCallbacks(callbacks,context){const override=context&&context.dataset&&context.dataset.tooltip&&context.dataset.tooltip.callbacks;return override?callbacks.override(override):callbacks;}const defaultCallbacks={beforeTitle:noop,title(tooltipItems){if(tooltipItems.length>0){const item=tooltipItems[0];const labels=item.chart.data.labels;const labelCount=labels?labels.length:0;if(this&&this.options&&this.options.mode==='dataset'){return item.dataset.label||'';}else if(item.label){return item.label;}else if(labelCount>0&&item.dataIndex<labelCount){return labels[item.dataIndex];}}return'';},afterTitle:noop,beforeBody:noop,beforeLabel:noop,label(tooltipItem){if(this&&this.options&&this.options.mode==='dataset'){return tooltipItem.label+': '+tooltipItem.formattedValue||tooltipItem.formattedValue;}let label=tooltipItem.dataset.label||'';if(label){label+=': ';}const value=tooltipItem.formattedValue;if(!isNullOrUndef(value)){label+=value;}return label;},labelColor(tooltipItem){const meta=tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);const options=meta.controller.getStyle(tooltipItem.dataIndex);return{borderColor:options.borderColor,backgroundColor:options.backgroundColor,borderWidth:options.borderWidth,borderDash:options.borderDash,borderDashOffset:options.borderDashOffset,borderRadius:0};},labelTextColor(){return this.options.bodyColor;},labelPointStyle(tooltipItem){const meta=tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);const options=meta.controller.getStyle(tooltipItem.dataIndex);return{pointStyle:options.pointStyle,rotation:options.rotation};},afterLabel:noop,afterBody:noop,beforeFooter:noop,footer:noop,afterFooter:noop};function invokeCallbackWithFallback(callbacks,name,ctx,arg){const result=callbacks[name].call(ctx,arg);if(typeof result==='undefined'){return defaultCallbacks[name].call(ctx,arg);}return result;}class Tooltip extends Element{constructor(config){super();this.opacity=0;this._active=[];this._eventPosition=undefined;this._size=undefined;this._cachedAnimations=undefined;this._tooltipItems=[];this.$animations=undefined;this.$context=undefined;this.chart=config.chart;this.options=config.options;this.dataPoints=undefined;this.title=undefined;this.beforeBody=undefined;this.body=undefined;this.afterBody=undefined;this.footer=undefined;this.xAlign=undefined;this.yAlign=undefined;this.x=undefined;this.y=undefined;this.height=undefined;this.width=undefined;this.caretX=undefined;this.caretY=undefined;this.labelColors=undefined;this.labelPointStyles=undefined;this.labelTextColors=undefined;}initialize(options){this.options=options;this._cachedAnimations=undefined;this.$context=undefined;}_resolveAnimations(){const cached=this._cachedAnimations;if(cached){return cached;}const chart=this.chart;const options=this.options.setContext(this.getContext());const opts=options.enabled&&chart.options.animation&&options.animations;const animations=new Animations(this.chart,opts);if(opts._cacheable){this._cachedAnimations=Object.freeze(animations);}return animations;}getContext(){return this.$context||(this.$context=createTooltipContext(this.chart.getContext(),this,this._tooltipItems));}getTitle(context,options){const{callbacks}=options;const beforeTitle=invokeCallbackWithFallback(callbacks,'beforeTitle',this,context);const title=invokeCallbackWithFallback(callbacks,'title',this,context);const afterTitle=invokeCallbackWithFallback(callbacks,'afterTitle',this,context);let lines=[];lines=pushOrConcat(lines,splitNewlines(beforeTitle));lines=pushOrConcat(lines,splitNewlines(title));lines=pushOrConcat(lines,splitNewlines(afterTitle));return lines;}getBeforeBody(tooltipItems,options){return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks,'beforeBody',this,tooltipItems));}getBody(tooltipItems,options){const{callbacks}=options;const bodyItems=[];each(tooltipItems,context=>{const bodyItem={before:[],lines:[],after:[]};const scoped=overrideCallbacks(callbacks,context);pushOrConcat(bodyItem.before,splitNewlines(invokeCallbackWithFallback(scoped,'beforeLabel',this,context)));pushOrConcat(bodyItem.lines,invokeCallbackWithFallback(scoped,'label',this,context));pushOrConcat(bodyItem.after,splitNewlines(invokeCallbackWithFallback(scoped,'afterLabel',this,context)));bodyItems.push(bodyItem);});return bodyItems;}getAfterBody(tooltipItems,options){return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks,'afterBody',this,tooltipItems));}getFooter(tooltipItems,options){const{callbacks}=options;const beforeFooter=invokeCallbackWithFallback(callbacks,'beforeFooter',this,tooltipItems);const footer=invokeCallbackWithFallback(callbacks,'footer',this,tooltipItems);const afterFooter=invokeCallbackWithFallback(callbacks,'afterFooter',this,tooltipItems);let lines=[];lines=pushOrConcat(lines,splitNewlines(beforeFooter));lines=pushOrConcat(lines,splitNewlines(footer));lines=pushOrConcat(lines,splitNewlines(afterFooter));return lines;}_createItems(options){const active=this._active;const data=this.chart.data;const labelColors=[];const labelPointStyles=[];const labelTextColors=[];let tooltipItems=[];let i,len;for(i=0,len=active.length;i<len;++i){tooltipItems.push(createTooltipItem(this.chart,active[i]));}if(options.filter){tooltipItems=tooltipItems.filter((element,index,array)=>options.filter(element,index,array,data));}if(options.itemSort){tooltipItems=tooltipItems.sort((a,b)=>options.itemSort(a,b,data));}each(tooltipItems,context=>{const scoped=overrideCallbacks(options.callbacks,context);labelColors.push(invokeCallbackWithFallback(scoped,'labelColor',this,context));labelPointStyles.push(invokeCallbackWithFallback(scoped,'labelPointStyle',this,context));labelTextColors.push(invokeCallbackWithFallback(scoped,'labelTextColor',this,context));});this.labelColors=labelColors;this.labelPointStyles=labelPointStyles;this.labelTextColors=labelTextColors;this.dataPoints=tooltipItems;return tooltipItems;}update(changed,replay){const options=this.options.setContext(this.getContext());const active=this._active;let properties;let tooltipItems=[];if(!active.length){if(this.opacity!==0){properties={opacity:0};}}else{const position=positioners[options.position].call(this,active,this._eventPosition);tooltipItems=this._createItems(options);this.title=this.getTitle(tooltipItems,options);this.beforeBody=this.getBeforeBody(tooltipItems,options);this.body=this.getBody(tooltipItems,options);this.afterBody=this.getAfterBody(tooltipItems,options);this.footer=this.getFooter(tooltipItems,options);const size=this._size=getTooltipSize(this,options);const positionAndSize=Object.assign({},position,size);const alignment=determineAlignment(this.chart,options,positionAndSize);const backgroundPoint=getBackgroundPoint(options,positionAndSize,alignment,this.chart);this.xAlign=alignment.xAlign;this.yAlign=alignment.yAlign;properties={opacity:1,x:backgroundPoint.x,y:backgroundPoint.y,width:size.width,height:size.height,caretX:position.x,caretY:position.y};}this._tooltipItems=tooltipItems;this.$context=undefined;if(properties){this._resolveAnimations().update(this,properties);}if(changed&&options.external){options.external.call(this,{chart:this.chart,tooltip:this,replay});}}drawCaret(tooltipPoint,ctx,size,options){const caretPosition=this.getCaretPosition(tooltipPoint,size,options);ctx.lineTo(caretPosition.x1,caretPosition.y1);ctx.lineTo(caretPosition.x2,caretPosition.y2);ctx.lineTo(caretPosition.x3,caretPosition.y3);}getCaretPosition(tooltipPoint,size,options){const{xAlign,yAlign}=this;const{caretSize,cornerRadius}=options;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(cornerRadius);const{x:ptX,y:ptY}=tooltipPoint;const{width,height}=size;let x1,x2,x3,y1,y2,y3;if(yAlign==='center'){y2=ptY+height/2;if(xAlign==='left'){x1=ptX;x2=x1-caretSize;y1=y2+caretSize;y3=y2-caretSize;}else{x1=ptX+width;x2=x1+caretSize;y1=y2-caretSize;y3=y2+caretSize;}x3=x1;}else{if(xAlign==='left'){x2=ptX+Math.max(topLeft,bottomLeft)+caretSize;}else if(xAlign==='right'){x2=ptX+width-Math.max(topRight,bottomRight)-caretSize;}else{x2=this.caretX;}if(yAlign==='top'){y1=ptY;y2=y1-caretSize;x1=x2-caretSize;x3=x2+caretSize;}else{y1=ptY+height;y2=y1+caretSize;x1=x2+caretSize;x3=x2-caretSize;}y3=y1;}return{x1,x2,x3,y1,y2,y3};}drawTitle(pt,ctx,options){const title=this.title;const length=title.length;let titleFont,titleSpacing,i;if(length){const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);pt.x=getAlignedX(this,options.titleAlign,options);ctx.textAlign=rtlHelper.textAlign(options.titleAlign);ctx.textBaseline='middle';titleFont=toFont(options.titleFont);titleSpacing=options.titleSpacing;ctx.fillStyle=options.titleColor;ctx.font=titleFont.string;for(i=0;i<length;++i){ctx.fillText(title[i],rtlHelper.x(pt.x),pt.y+titleFont.lineHeight/2);pt.y+=titleFont.lineHeight+titleSpacing;if(i+1===length){pt.y+=options.titleMarginBottom-titleSpacing;}}}}_drawColorBox(ctx,pt,i,rtlHelper,options){const labelColor=this.labelColors[i];const labelPointStyle=this.labelPointStyles[i];const{boxHeight,boxWidth}=options;const bodyFont=toFont(options.bodyFont);const colorX=getAlignedX(this,'left',options);const rtlColorX=rtlHelper.x(colorX);const yOffSet=boxHeight<bodyFont.lineHeight?(bodyFont.lineHeight-boxHeight)/2:0;const colorY=pt.y+yOffSet;if(options.usePointStyle){const drawOptions={radius:Math.min(boxWidth,boxHeight)/2,pointStyle:labelPointStyle.pointStyle,rotation:labelPointStyle.rotation,borderWidth:1};const centerX=rtlHelper.leftForLtr(rtlColorX,boxWidth)+boxWidth/2;const centerY=colorY+boxHeight/2;ctx.strokeStyle=options.multiKeyBackground;ctx.fillStyle=options.multiKeyBackground;drawPoint(ctx,drawOptions,centerX,centerY);ctx.strokeStyle=labelColor.borderColor;ctx.fillStyle=labelColor.backgroundColor;drawPoint(ctx,drawOptions,centerX,centerY);}else{ctx.lineWidth=isObject(labelColor.borderWidth)?Math.max(...Object.values(labelColor.borderWidth)):labelColor.borderWidth||1;ctx.strokeStyle=labelColor.borderColor;ctx.setLineDash(labelColor.borderDash||[]);ctx.lineDashOffset=labelColor.borderDashOffset||0;const outerX=rtlHelper.leftForLtr(rtlColorX,boxWidth);const innerX=rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX,1),boxWidth-2);const borderRadius=toTRBLCorners(labelColor.borderRadius);if(Object.values(borderRadius).some(v=>v!==0)){ctx.beginPath();ctx.fillStyle=options.multiKeyBackground;addRoundedRectPath(ctx,{x:outerX,y:colorY,w:boxWidth,h:boxHeight,radius:borderRadius});ctx.fill();ctx.stroke();ctx.fillStyle=labelColor.backgroundColor;ctx.beginPath();addRoundedRectPath(ctx,{x:innerX,y:colorY+1,w:boxWidth-2,h:boxHeight-2,radius:borderRadius});ctx.fill();}else{ctx.fillStyle=options.multiKeyBackground;ctx.fillRect(outerX,colorY,boxWidth,boxHeight);ctx.strokeRect(outerX,colorY,boxWidth,boxHeight);ctx.fillStyle=labelColor.backgroundColor;ctx.fillRect(innerX,colorY+1,boxWidth-2,boxHeight-2);}}ctx.fillStyle=this.labelTextColors[i];}drawBody(pt,ctx,options){const{body}=this;const{bodySpacing,bodyAlign,displayColors,boxHeight,boxWidth,boxPadding}=options;const bodyFont=toFont(options.bodyFont);let bodyLineHeight=bodyFont.lineHeight;let xLinePadding=0;const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);const fillLineOfText=function(line){ctx.fillText(line,rtlHelper.x(pt.x+xLinePadding),pt.y+bodyLineHeight/2);pt.y+=bodyLineHeight+bodySpacing;};const bodyAlignForCalculation=rtlHelper.textAlign(bodyAlign);let bodyItem,textColor,lines,i,j,ilen,jlen;ctx.textAlign=bodyAlign;ctx.textBaseline='middle';ctx.font=bodyFont.string;pt.x=getAlignedX(this,bodyAlignForCalculation,options);ctx.fillStyle=options.bodyColor;each(this.beforeBody,fillLineOfText);xLinePadding=displayColors&&bodyAlignForCalculation!=='right'?bodyAlign==='center'?boxWidth/2+boxPadding:boxWidth+2+boxPadding:0;for(i=0,ilen=body.length;i<ilen;++i){bodyItem=body[i];textColor=this.labelTextColors[i];ctx.fillStyle=textColor;each(bodyItem.before,fillLineOfText);lines=bodyItem.lines;if(displayColors&&lines.length){this._drawColorBox(ctx,pt,i,rtlHelper,options);bodyLineHeight=Math.max(bodyFont.lineHeight,boxHeight);}for(j=0,jlen=lines.length;j<jlen;++j){fillLineOfText(lines[j]);bodyLineHeight=bodyFont.lineHeight;}each(bodyItem.after,fillLineOfText);}xLinePadding=0;bodyLineHeight=bodyFont.lineHeight;each(this.afterBody,fillLineOfText);pt.y-=bodySpacing;}drawFooter(pt,ctx,options){const footer=this.footer;const length=footer.length;let footerFont,i;if(length){const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);pt.x=getAlignedX(this,options.footerAlign,options);pt.y+=options.footerMarginTop;ctx.textAlign=rtlHelper.textAlign(options.footerAlign);ctx.textBaseline='middle';footerFont=toFont(options.footerFont);ctx.fillStyle=options.footerColor;ctx.font=footerFont.string;for(i=0;i<length;++i){ctx.fillText(footer[i],rtlHelper.x(pt.x),pt.y+footerFont.lineHeight/2);pt.y+=footerFont.lineHeight+options.footerSpacing;}}}drawBackground(pt,ctx,tooltipSize,options){const{xAlign,yAlign}=this;const{x,y}=pt;const{width,height}=tooltipSize;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(options.cornerRadius);ctx.fillStyle=options.backgroundColor;ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.beginPath();ctx.moveTo(x+topLeft,y);if(yAlign==='top'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x+width-topRight,y);ctx.quadraticCurveTo(x+width,y,x+width,y+topRight);if(yAlign==='center'&&xAlign==='right'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x+width,y+height-bottomRight);ctx.quadraticCurveTo(x+width,y+height,x+width-bottomRight,y+height);if(yAlign==='bottom'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x+bottomLeft,y+height);ctx.quadraticCurveTo(x,y+height,x,y+height-bottomLeft);if(yAlign==='center'&&xAlign==='left'){this.drawCaret(pt,ctx,tooltipSize,options);}ctx.lineTo(x,y+topLeft);ctx.quadraticCurveTo(x,y,x+topLeft,y);ctx.closePath();ctx.fill();if(options.borderWidth>0){ctx.stroke();}}_updateAnimationTarget(options){const chart=this.chart;const anims=this.$animations;const animX=anims&&anims.x;const animY=anims&&anims.y;if(animX||animY){const position=positioners[options.position].call(this,this._active,this._eventPosition);if(!position){return;}const size=this._size=getTooltipSize(this,options);const positionAndSize=Object.assign({},position,this._size);const alignment=determineAlignment(chart,options,positionAndSize);const point=getBackgroundPoint(options,positionAndSize,alignment,chart);if(animX._to!==point.x||animY._to!==point.y){this.xAlign=alignment.xAlign;this.yAlign=alignment.yAlign;this.width=size.width;this.height=size.height;this.caretX=position.x;this.caretY=position.y;this._resolveAnimations().update(this,point);}}}_willRender(){return!!this.opacity;}draw(ctx){const options=this.options.setContext(this.getContext());let opacity=this.opacity;if(!opacity){return;}this._updateAnimationTarget(options);const tooltipSize={width:this.width,height:this.height};const pt={x:this.x,y:this.y};opacity=Math.abs(opacity)<1e-3?0:opacity;const padding=toPadding(options.padding);const hasTooltipContent=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;if(options.enabled&&hasTooltipContent){ctx.save();ctx.globalAlpha=opacity;this.drawBackground(pt,ctx,tooltipSize,options);overrideTextDirection(ctx,options.textDirection);pt.y+=padding.top;this.drawTitle(pt,ctx,options);this.drawBody(pt,ctx,options);this.drawFooter(pt,ctx,options);restoreTextDirection(ctx,options.textDirection);ctx.restore();}}getActiveElements(){return this._active||[];}setActiveElements(activeElements,eventPosition){const lastActive=this._active;const active=activeElements.map(_ref6=>{let{datasetIndex,index}=_ref6;const meta=this.chart.getDatasetMeta(datasetIndex);if(!meta){throw new Error('Cannot find a dataset at index '+datasetIndex);}return{datasetIndex,element:meta.data[index],index};});const changed=!_elementsEqual(lastActive,active);const positionChanged=this._positionChanged(active,eventPosition);if(changed||positionChanged){this._active=active;this._eventPosition=eventPosition;this._ignoreReplayEvents=true;this.update(true);}}handleEvent(e,replay){let inChartArea=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(replay&&this._ignoreReplayEvents){return false;}this._ignoreReplayEvents=false;const options=this.options;const lastActive=this._active||[];const active=this._getActiveElements(e,lastActive,replay,inChartArea);const positionChanged=this._positionChanged(active,e);const changed=replay||!_elementsEqual(active,lastActive)||positionChanged;if(changed){this._active=active;if(options.enabled||options.external){this._eventPosition={x:e.x,y:e.y};this.update(true,replay);}}return changed;}_getActiveElements(e,lastActive,replay,inChartArea){const options=this.options;if(e.type==='mouseout'){return[];}if(!inChartArea){return lastActive.filter(i=>this.chart.data.datasets[i.datasetIndex]&&this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index)!==undefined);}const active=this.chart.getElementsAtEventForMode(e,options.mode,options,replay);if(options.reverse){active.reverse();}return active;}_positionChanged(active,e){const{caretX,caretY,options}=this;const position=positioners[options.position].call(this,active,e);return position!==false&&(caretX!==position.x||caretY!==position.y);}}Tooltip.positioners=positioners;var plugin_tooltip={id:'tooltip',_element:Tooltip,positioners,afterInit(chart,_args,options){if(options){chart.tooltip=new Tooltip({chart,options});}},beforeUpdate(chart,_args,options){if(chart.tooltip){chart.tooltip.initialize(options);}},reset(chart,_args,options){if(chart.tooltip){chart.tooltip.initialize(options);}},afterDraw(chart){const tooltip=chart.tooltip;if(tooltip&&tooltip._willRender()){const args={tooltip};if(chart.notifyPlugins('beforeTooltipDraw',{...args,cancelable:true})===false){return;}tooltip.draw(chart.ctx);chart.notifyPlugins('afterTooltipDraw',args);}},afterEvent(chart,args){if(chart.tooltip){const useFinalPosition=args.replay;if(chart.tooltip.handleEvent(args.event,useFinalPosition,args.inChartArea)){args.changed=true;}}},defaults:{enabled:true,external:null,position:'average',backgroundColor:'rgba(0,0,0,0.8)',titleColor:'#fff',titleFont:{weight:'bold'},titleSpacing:2,titleMarginBottom:6,titleAlign:'left',bodyColor:'#fff',bodySpacing:2,bodyFont:{},bodyAlign:'left',footerColor:'#fff',footerSpacing:2,footerMarginTop:6,footerFont:{weight:'bold'},footerAlign:'left',padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(ctx,opts)=>opts.bodyFont.size,boxWidth:(ctx,opts)=>opts.bodyFont.size,multiKeyBackground:'#fff',displayColors:true,boxPadding:0,borderColor:'rgba(0,0,0,0)',borderWidth:0,animation:{duration:400,easing:'easeOutQuart'},animations:{numbers:{type:'number',properties:['x','y','width','height','caretX','caretY']},opacity:{easing:'linear',duration:200}},callbacks:defaultCallbacks},defaultRoutes:{bodyFont:'font',footerFont:'font',titleFont:'font'},descriptors:{_scriptable:name=>name!=='filter'&&name!=='itemSort'&&name!=='external',_indexable:false,callbacks:{_scriptable:false,_indexable:false},animation:{_fallback:false},animations:{_fallback:'animation'}},additionalOptionScopes:['interaction']};var plugins=/*#__PURE__*/Object.freeze({__proto__:null,Colors:plugin_colors,Decimation:plugin_decimation,Filler:index,Legend:plugin_legend,SubTitle:plugin_subtitle,Title:plugin_title,Tooltip:plugin_tooltip});const addIfString=(labels,raw,index,addedLabels)=>{if(typeof raw==='string'){index=labels.push(raw)-1;addedLabels.unshift({index,label:raw});}else if(isNaN(raw)){index=null;}return index;};function findOrAddLabel(labels,raw,index,addedLabels){const first=labels.indexOf(raw);if(first===-1){return addIfString(labels,raw,index,addedLabels);}const last=labels.lastIndexOf(raw);return first!==last?index:first;}const validIndex=(index,max)=>index===null?null:_limitValue(Math.round(index),0,max);function _getLabelForValue(value){const labels=this.getLabels();if(value>=0&&value<labels.length){return labels[value];}return value;}class CategoryScale extends Scale{constructor(cfg){super(cfg);this._startValue=undefined;this._valueRange=0;this._addedLabels=[];}init(scaleOptions){const added=this._addedLabels;if(added.length){const labels=this.getLabels();for(const{index,label}of added){if(labels[index]===label){labels.splice(index,1);}}this._addedLabels=[];}super.init(scaleOptions);}parse(raw,index){if(isNullOrUndef(raw)){return null;}const labels=this.getLabels();index=isFinite(index)&&labels[index]===raw?index:findOrAddLabel(labels,raw,valueOrDefault(index,raw),this._addedLabels);return validIndex(index,labels.length-1);}determineDataLimits(){const{minDefined,maxDefined}=this.getUserBounds();let{min,max}=this.getMinMax(true);if(this.options.bounds==='ticks'){if(!minDefined){min=0;}if(!maxDefined){max=this.getLabels().length-1;}}this.min=min;this.max=max;}buildTicks(){const min=this.min;const max=this.max;const offset=this.options.offset;const ticks=[];let labels=this.getLabels();labels=min===0&&max===labels.length-1?labels:labels.slice(min,max+1);this._valueRange=Math.max(labels.length-(offset?0:1),1);this._startValue=this.min-(offset?0.5:0);for(let value=min;value<=max;value++){ticks.push({value});}return ticks;}getLabelForValue(value){return _getLabelForValue.call(this,value);}configure(){super.configure();if(!this.isHorizontal()){this._reversePixels=!this._reversePixels;}}getPixelForValue(value){if(typeof value!=='number'){value=this.parse(value);}return value===null?NaN:this.getPixelForDecimal((value-this._startValue)/this._valueRange);}getPixelForTick(index){const ticks=this.ticks;if(index<0||index>ticks.length-1){return null;}return this.getPixelForValue(ticks[index].value);}getValueForPixel(pixel){return Math.round(this._startValue+this.getDecimalForPixel(pixel)*this._valueRange);}getBasePixel(){return this.bottom;}}CategoryScale.id='category';CategoryScale.defaults={ticks:{callback:_getLabelForValue}};function generateTicks$1(generationOptions,dataRange){const ticks=[];const MIN_SPACING=1e-14;const{bounds,step,min,max,precision,count,maxTicks,maxDigits,includeBounds}=generationOptions;const unit=step||1;const maxSpaces=maxTicks-1;const{min:rmin,max:rmax}=dataRange;const minDefined=!isNullOrUndef(min);const maxDefined=!isNullOrUndef(max);const countDefined=!isNullOrUndef(count);const minSpacing=(rmax-rmin)/(maxDigits+1);let spacing=niceNum((rmax-rmin)/maxSpaces/unit)*unit;let factor,niceMin,niceMax,numSpaces;if(spacing<MIN_SPACING&&!minDefined&&!maxDefined){return[{value:rmin},{value:rmax}];}numSpaces=Math.ceil(rmax/spacing)-Math.floor(rmin/spacing);if(numSpaces>maxSpaces){spacing=niceNum(numSpaces*spacing/maxSpaces/unit)*unit;}if(!isNullOrUndef(precision)){factor=Math.pow(10,precision);spacing=Math.ceil(spacing*factor)/factor;}if(bounds==='ticks'){niceMin=Math.floor(rmin/spacing)*spacing;niceMax=Math.ceil(rmax/spacing)*spacing;}else{niceMin=rmin;niceMax=rmax;}if(minDefined&&maxDefined&&step&&almostWhole((max-min)/step,spacing/1000)){numSpaces=Math.round(Math.min((max-min)/spacing,maxTicks));spacing=(max-min)/numSpaces;niceMin=min;niceMax=max;}else if(countDefined){niceMin=minDefined?min:niceMin;niceMax=maxDefined?max:niceMax;numSpaces=count-1;spacing=(niceMax-niceMin)/numSpaces;}else{numSpaces=(niceMax-niceMin)/spacing;if(almostEquals(numSpaces,Math.round(numSpaces),spacing/1000)){numSpaces=Math.round(numSpaces);}else{numSpaces=Math.ceil(numSpaces);}}const decimalPlaces=Math.max(_decimalPlaces(spacing),_decimalPlaces(niceMin));factor=Math.pow(10,isNullOrUndef(precision)?decimalPlaces:precision);niceMin=Math.round(niceMin*factor)/factor;niceMax=Math.round(niceMax*factor)/factor;let j=0;if(minDefined){if(includeBounds&&niceMin!==min){ticks.push({value:min});if(niceMin<min){j++;}if(almostEquals(Math.round((niceMin+j*spacing)*factor)/factor,min,relativeLabelSize(min,minSpacing,generationOptions))){j++;}}else if(niceMin<min){j++;}}for(;j<numSpaces;++j){const tickValue=Math.round((niceMin+j*spacing)*factor)/factor;if(maxDefined&&tickValue>max){break;}ticks.push({value:tickValue});}if(maxDefined&&includeBounds&&niceMax!==max){if(ticks.length&&almostEquals(ticks[ticks.length-1].value,max,relativeLabelSize(max,minSpacing,generationOptions))){ticks[ticks.length-1].value=max;}else{ticks.push({value:max});}}else if(!maxDefined||niceMax===max){ticks.push({value:niceMax});}return ticks;}function relativeLabelSize(value,minSpacing,_ref7){let{horizontal,minRotation}=_ref7;const rad=toRadians(minRotation);const ratio=(horizontal?Math.sin(rad):Math.cos(rad))||0.001;const length=0.75*minSpacing*(''+value).length;return Math.min(minSpacing/ratio,length);}class LinearScaleBase extends Scale{constructor(cfg){super(cfg);this.start=undefined;this.end=undefined;this._startValue=undefined;this._endValue=undefined;this._valueRange=0;}parse(raw,index){if(isNullOrUndef(raw)){return null;}if((typeof raw==='number'||raw instanceof Number)&&!isFinite(+raw)){return null;}return+raw;}handleTickRangeOptions(){const{beginAtZero}=this.options;const{minDefined,maxDefined}=this.getUserBounds();let{min,max}=this;const setMin=v=>min=minDefined?min:v;const setMax=v=>max=maxDefined?max:v;if(beginAtZero){const minSign=sign(min);const maxSign=sign(max);if(minSign<0&&maxSign<0){setMax(0);}else if(minSign>0&&maxSign>0){setMin(0);}}if(min===max){let offset=max===0?1:Math.abs(max*0.05);setMax(max+offset);if(!beginAtZero){setMin(min-offset);}}this.min=min;this.max=max;}getTickLimit(){const tickOpts=this.options.ticks;let{maxTicksLimit,stepSize}=tickOpts;let maxTicks;if(stepSize){maxTicks=Math.ceil(this.max/stepSize)-Math.floor(this.min/stepSize)+1;if(maxTicks>1000){console.warn(\"scales.\".concat(this.id,\".ticks.stepSize: \").concat(stepSize,\" would result generating up to \").concat(maxTicks,\" ticks. Limiting to 1000.\"));maxTicks=1000;}}else{maxTicks=this.computeTickLimit();maxTicksLimit=maxTicksLimit||11;}if(maxTicksLimit){maxTicks=Math.min(maxTicksLimit,maxTicks);}return maxTicks;}computeTickLimit(){return Number.POSITIVE_INFINITY;}buildTicks(){const opts=this.options;const tickOpts=opts.ticks;let maxTicks=this.getTickLimit();maxTicks=Math.max(2,maxTicks);const numericGeneratorOptions={maxTicks,bounds:opts.bounds,min:opts.min,max:opts.max,precision:tickOpts.precision,step:tickOpts.stepSize,count:tickOpts.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:tickOpts.minRotation||0,includeBounds:tickOpts.includeBounds!==false};const dataRange=this._range||this;const ticks=generateTicks$1(numericGeneratorOptions,dataRange);if(opts.bounds==='ticks'){_setMinAndMaxByKey(ticks,this,'value');}if(opts.reverse){ticks.reverse();this.start=this.max;this.end=this.min;}else{this.start=this.min;this.end=this.max;}return ticks;}configure(){const ticks=this.ticks;let start=this.min;let end=this.max;super.configure();if(this.options.offset&&ticks.length){const offset=(end-start)/Math.max(ticks.length-1,1)/2;start-=offset;end+=offset;}this._startValue=start;this._endValue=end;this._valueRange=end-start;}getLabelForValue(value){return formatNumber(value,this.chart.options.locale,this.options.ticks.format);}}class LinearScale extends LinearScaleBase{determineDataLimits(){const{min,max}=this.getMinMax(true);this.min=isNumberFinite(min)?min:0;this.max=isNumberFinite(max)?max:1;this.handleTickRangeOptions();}computeTickLimit(){const horizontal=this.isHorizontal();const length=horizontal?this.width:this.height;const minRotation=toRadians(this.options.ticks.minRotation);const ratio=(horizontal?Math.sin(minRotation):Math.cos(minRotation))||0.001;const tickFont=this._resolveTickFontOptions(0);return Math.ceil(length/Math.min(40,tickFont.lineHeight/ratio));}getPixelForValue(value){return value===null?NaN:this.getPixelForDecimal((value-this._startValue)/this._valueRange);}getValueForPixel(pixel){return this._startValue+this.getDecimalForPixel(pixel)*this._valueRange;}}LinearScale.id='linear';LinearScale.defaults={ticks:{callback:Ticks.formatters.numeric}};const log10Floor=v=>Math.floor(log10(v));const changeExponent=(v,m)=>Math.pow(10,log10Floor(v)+m);function isMajor(tickVal){const remain=tickVal/Math.pow(10,log10Floor(tickVal));return remain===1;}function steps(min,max,rangeExp){const rangeStep=Math.pow(10,rangeExp);const start=Math.floor(min/rangeStep);const end=Math.ceil(max/rangeStep);return end-start;}function startExp(min,max){const range=max-min;let rangeExp=log10Floor(range);while(steps(min,max,rangeExp)>10){rangeExp++;}while(steps(min,max,rangeExp)<10){rangeExp--;}return Math.min(rangeExp,log10Floor(min));}function generateTicks(generationOptions,_ref8){let{min,max}=_ref8;min=finiteOrDefault(generationOptions.min,min);const ticks=[];const minExp=log10Floor(min);let exp=startExp(min,max);let precision=exp<0?Math.pow(10,Math.abs(exp)):1;const stepSize=Math.pow(10,exp);const base=minExp>exp?Math.pow(10,minExp):0;const start=Math.round((min-base)*precision)/precision;const offset=Math.floor((min-base)/stepSize/10)*stepSize*10;let significand=Math.floor((start-offset)/Math.pow(10,exp));let value=finiteOrDefault(generationOptions.min,Math.round((base+offset+significand*Math.pow(10,exp))*precision)/precision);while(value<max){ticks.push({value,major:isMajor(value),significand});if(significand>=10){significand=significand<15?15:20;}else{significand++;}if(significand>=20){exp++;significand=2;precision=exp>=0?1:precision;}value=Math.round((base+offset+significand*Math.pow(10,exp))*precision)/precision;}const lastTick=finiteOrDefault(generationOptions.max,value);ticks.push({value:lastTick,major:isMajor(lastTick),significand});return ticks;}class LogarithmicScale extends Scale{constructor(cfg){super(cfg);this.start=undefined;this.end=undefined;this._startValue=undefined;this._valueRange=0;}parse(raw,index){const value=LinearScaleBase.prototype.parse.apply(this,[raw,index]);if(value===0){this._zero=true;return undefined;}return isNumberFinite(value)&&value>0?value:null;}determineDataLimits(){const{min,max}=this.getMinMax(true);this.min=isNumberFinite(min)?Math.max(0,min):null;this.max=isNumberFinite(max)?Math.max(0,max):null;if(this.options.beginAtZero){this._zero=true;}if(this._zero&&this.min!==this._suggestedMin&&!isNumberFinite(this._userMin)){this.min=min===changeExponent(this.min,0)?changeExponent(this.min,-1):changeExponent(this.min,0);}this.handleTickRangeOptions();}handleTickRangeOptions(){const{minDefined,maxDefined}=this.getUserBounds();let min=this.min;let max=this.max;const setMin=v=>min=minDefined?min:v;const setMax=v=>max=maxDefined?max:v;if(min===max){if(min<=0){setMin(1);setMax(10);}else{setMin(changeExponent(min,-1));setMax(changeExponent(max,+1));}}if(min<=0){setMin(changeExponent(max,-1));}if(max<=0){setMax(changeExponent(min,+1));}this.min=min;this.max=max;}buildTicks(){const opts=this.options;const generationOptions={min:this._userMin,max:this._userMax};const ticks=generateTicks(generationOptions,this);if(opts.bounds==='ticks'){_setMinAndMaxByKey(ticks,this,'value');}if(opts.reverse){ticks.reverse();this.start=this.max;this.end=this.min;}else{this.start=this.min;this.end=this.max;}return ticks;}getLabelForValue(value){return value===undefined?'0':formatNumber(value,this.chart.options.locale,this.options.ticks.format);}configure(){const start=this.min;super.configure();this._startValue=log10(start);this._valueRange=log10(this.max)-log10(start);}getPixelForValue(value){if(value===undefined||value===0){value=this.min;}if(value===null||isNaN(value)){return NaN;}return this.getPixelForDecimal(value===this.min?0:(log10(value)-this._startValue)/this._valueRange);}getValueForPixel(pixel){const decimal=this.getDecimalForPixel(pixel);return Math.pow(10,this._startValue+decimal*this._valueRange);}}LogarithmicScale.id='logarithmic';LogarithmicScale.defaults={ticks:{callback:Ticks.formatters.logarithmic,major:{enabled:true}}};function getTickBackdropHeight(opts){const tickOpts=opts.ticks;if(tickOpts.display&&opts.display){const padding=toPadding(tickOpts.backdropPadding);return valueOrDefault(tickOpts.font&&tickOpts.font.size,defaults.font.size)+padding.height;}return 0;}function measureLabelSize(ctx,font,label){label=isArray(label)?label:[label];return{w:_longestText(ctx,font.string,label),h:label.length*font.lineHeight};}function determineLimits(angle,pos,size,min,max){if(angle===min||angle===max){return{start:pos-size/2,end:pos+size/2};}else if(angle<min||angle>max){return{start:pos-size,end:pos};}return{start:pos,end:pos+size};}function fitWithPointLabels(scale){const orig={l:scale.left+scale._padding.left,r:scale.right-scale._padding.right,t:scale.top+scale._padding.top,b:scale.bottom-scale._padding.bottom};const limits=Object.assign({},orig);const labelSizes=[];const padding=[];const valueCount=scale._pointLabels.length;const pointLabelOpts=scale.options.pointLabels;const additionalAngle=pointLabelOpts.centerPointLabels?PI/valueCount:0;for(let i=0;i<valueCount;i++){const opts=pointLabelOpts.setContext(scale.getPointLabelContext(i));padding[i]=opts.padding;const pointPosition=scale.getPointPosition(i,scale.drawingArea+padding[i],additionalAngle);const plFont=toFont(opts.font);const textSize=measureLabelSize(scale.ctx,plFont,scale._pointLabels[i]);labelSizes[i]=textSize;const angleRadians=_normalizeAngle(scale.getIndexAngle(i)+additionalAngle);const angle=Math.round(toDegrees(angleRadians));const hLimits=determineLimits(angle,pointPosition.x,textSize.w,0,180);const vLimits=determineLimits(angle,pointPosition.y,textSize.h,90,270);updateLimits(limits,orig,angleRadians,hLimits,vLimits);}scale.setCenterPoint(orig.l-limits.l,limits.r-orig.r,orig.t-limits.t,limits.b-orig.b);scale._pointLabelItems=buildPointLabelItems(scale,labelSizes,padding);}function updateLimits(limits,orig,angle,hLimits,vLimits){const sin=Math.abs(Math.sin(angle));const cos=Math.abs(Math.cos(angle));let x=0;let y=0;if(hLimits.start<orig.l){x=(orig.l-hLimits.start)/sin;limits.l=Math.min(limits.l,orig.l-x);}else if(hLimits.end>orig.r){x=(hLimits.end-orig.r)/sin;limits.r=Math.max(limits.r,orig.r+x);}if(vLimits.start<orig.t){y=(orig.t-vLimits.start)/cos;limits.t=Math.min(limits.t,orig.t-y);}else if(vLimits.end>orig.b){y=(vLimits.end-orig.b)/cos;limits.b=Math.max(limits.b,orig.b+y);}}function createPointLabelItem(scale,index,itemOpts){const outerDistance=scale.drawingArea;const{extra,additionalAngle,padding,size}=itemOpts;const pointLabelPosition=scale.getPointPosition(index,outerDistance+extra+padding,additionalAngle);const angle=Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle+HALF_PI)));const y=yForAngle(pointLabelPosition.y,size.h,angle);const textAlign=getTextAlignForAngle(angle);const left=leftForTextAlign(pointLabelPosition.x,size.w,textAlign);return{visible:true,x:pointLabelPosition.x,y,textAlign,left,top:y,right:left+size.w,bottom:y+size.h};}function isNotOverlapped(item,area){if(!area){return true;}const{left,top,right,bottom}=item;const apexesInArea=_isPointInArea({x:left,y:top},area)||_isPointInArea({x:left,y:bottom},area)||_isPointInArea({x:right,y:top},area)||_isPointInArea({x:right,y:bottom},area);return!apexesInArea;}function buildPointLabelItems(scale,labelSizes,padding){const items=[];const valueCount=scale._pointLabels.length;const opts=scale.options;const{centerPointLabels,display}=opts.pointLabels;const itemOpts={extra:getTickBackdropHeight(opts)/2,additionalAngle:centerPointLabels?PI/valueCount:0};let area;for(let i=0;i<valueCount;i++){itemOpts.padding=padding[i];itemOpts.size=labelSizes[i];const item=createPointLabelItem(scale,i,itemOpts);items.push(item);if(display==='auto'){item.visible=isNotOverlapped(item,area);if(item.visible){area=item;}}}return items;}function getTextAlignForAngle(angle){if(angle===0||angle===180){return'center';}else if(angle<180){return'left';}return'right';}function leftForTextAlign(x,w,align){if(align==='right'){x-=w;}else if(align==='center'){x-=w/2;}return x;}function yForAngle(y,h,angle){if(angle===90||angle===270){y-=h/2;}else if(angle>270||angle<90){y-=h;}return y;}function drawPointLabelBox(ctx,opts,item){const{left,top,right,bottom}=item;const{backdropColor}=opts;if(!isNullOrUndef(backdropColor)){const borderRadius=toTRBLCorners(opts.borderRadius);const padding=toPadding(opts.backdropPadding);ctx.fillStyle=backdropColor;const backdropLeft=left-padding.left;const backdropTop=top-padding.top;const backdropWidth=right-left+padding.width;const backdropHeight=bottom-top+padding.height;if(Object.values(borderRadius).some(v=>v!==0)){ctx.beginPath();addRoundedRectPath(ctx,{x:backdropLeft,y:backdropTop,w:backdropWidth,h:backdropHeight,radius:borderRadius});ctx.fill();}else{ctx.fillRect(backdropLeft,backdropTop,backdropWidth,backdropHeight);}}}function drawPointLabels(scale,labelCount){const{ctx,options:{pointLabels}}=scale;for(let i=labelCount-1;i>=0;i--){const item=scale._pointLabelItems[i];if(!item.visible){continue;}const optsAtIndex=pointLabels.setContext(scale.getPointLabelContext(i));drawPointLabelBox(ctx,optsAtIndex,item);const plFont=toFont(optsAtIndex.font);const{x,y,textAlign}=item;renderText(ctx,scale._pointLabels[i],x,y+plFont.lineHeight/2,plFont,{color:optsAtIndex.color,textAlign:textAlign,textBaseline:'middle'});}}function pathRadiusLine(scale,radius,circular,labelCount){const{ctx}=scale;if(circular){ctx.arc(scale.xCenter,scale.yCenter,radius,0,TAU);}else{let pointPosition=scale.getPointPosition(0,radius);ctx.moveTo(pointPosition.x,pointPosition.y);for(let i=1;i<labelCount;i++){pointPosition=scale.getPointPosition(i,radius);ctx.lineTo(pointPosition.x,pointPosition.y);}}}function drawRadiusLine(scale,gridLineOpts,radius,labelCount,borderOpts){const ctx=scale.ctx;const circular=gridLineOpts.circular;const{color,lineWidth}=gridLineOpts;if(!circular&&!labelCount||!color||!lineWidth||radius<0){return;}ctx.save();ctx.strokeStyle=color;ctx.lineWidth=lineWidth;ctx.setLineDash(borderOpts.dash);ctx.lineDashOffset=borderOpts.dashOffset;ctx.beginPath();pathRadiusLine(scale,radius,circular,labelCount);ctx.closePath();ctx.stroke();ctx.restore();}function createPointLabelContext(parent,index,label){return createContext(parent,{label,index,type:'pointLabel'});}class RadialLinearScale extends LinearScaleBase{constructor(cfg){super(cfg);this.xCenter=undefined;this.yCenter=undefined;this.drawingArea=undefined;this._pointLabels=[];this._pointLabelItems=[];}setDimensions(){const padding=this._padding=toPadding(getTickBackdropHeight(this.options)/2);const w=this.width=this.maxWidth-padding.width;const h=this.height=this.maxHeight-padding.height;this.xCenter=Math.floor(this.left+w/2+padding.left);this.yCenter=Math.floor(this.top+h/2+padding.top);this.drawingArea=Math.floor(Math.min(w,h)/2);}determineDataLimits(){const{min,max}=this.getMinMax(false);this.min=isNumberFinite(min)&&!isNaN(min)?min:0;this.max=isNumberFinite(max)&&!isNaN(max)?max:0;this.handleTickRangeOptions();}computeTickLimit(){return Math.ceil(this.drawingArea/getTickBackdropHeight(this.options));}generateTickLabels(ticks){LinearScaleBase.prototype.generateTickLabels.call(this,ticks);this._pointLabels=this.getLabels().map((value,index)=>{const label=callback(this.options.pointLabels.callback,[value,index],this);return label||label===0?label:'';}).filter((v,i)=>this.chart.getDataVisibility(i));}fit(){const opts=this.options;if(opts.display&&opts.pointLabels.display){fitWithPointLabels(this);}else{this.setCenterPoint(0,0,0,0);}}setCenterPoint(leftMovement,rightMovement,topMovement,bottomMovement){this.xCenter+=Math.floor((leftMovement-rightMovement)/2);this.yCenter+=Math.floor((topMovement-bottomMovement)/2);this.drawingArea-=Math.min(this.drawingArea/2,Math.max(leftMovement,rightMovement,topMovement,bottomMovement));}getIndexAngle(index){const angleMultiplier=TAU/(this._pointLabels.length||1);const startAngle=this.options.startAngle||0;return _normalizeAngle(index*angleMultiplier+toRadians(startAngle));}getDistanceFromCenterForValue(value){if(isNullOrUndef(value)){return NaN;}const scalingFactor=this.drawingArea/(this.max-this.min);if(this.options.reverse){return(this.max-value)*scalingFactor;}return(value-this.min)*scalingFactor;}getValueForDistanceFromCenter(distance){if(isNullOrUndef(distance)){return NaN;}const scaledDistance=distance/(this.drawingArea/(this.max-this.min));return this.options.reverse?this.max-scaledDistance:this.min+scaledDistance;}getPointLabelContext(index){const pointLabels=this._pointLabels||[];if(index>=0&&index<pointLabels.length){const pointLabel=pointLabels[index];return createPointLabelContext(this.getContext(),index,pointLabel);}}getPointPosition(index,distanceFromCenter){let additionalAngle=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;const angle=this.getIndexAngle(index)-HALF_PI+additionalAngle;return{x:Math.cos(angle)*distanceFromCenter+this.xCenter,y:Math.sin(angle)*distanceFromCenter+this.yCenter,angle};}getPointPositionForValue(index,value){return this.getPointPosition(index,this.getDistanceFromCenterForValue(value));}getBasePosition(index){return this.getPointPositionForValue(index||0,this.getBaseValue());}getPointLabelPosition(index){const{left,top,right,bottom}=this._pointLabelItems[index];return{left,top,right,bottom};}drawBackground(){const{backgroundColor,grid:{circular}}=this.options;if(backgroundColor){const ctx=this.ctx;ctx.save();ctx.beginPath();pathRadiusLine(this,this.getDistanceFromCenterForValue(this._endValue),circular,this._pointLabels.length);ctx.closePath();ctx.fillStyle=backgroundColor;ctx.fill();ctx.restore();}}drawGrid(){const ctx=this.ctx;const opts=this.options;const{angleLines,grid,border}=opts;const labelCount=this._pointLabels.length;let i,offset,position;if(opts.pointLabels.display){drawPointLabels(this,labelCount);}if(grid.display){this.ticks.forEach((tick,index)=>{if(index!==0||index===0&&this.min<0){offset=this.getDistanceFromCenterForValue(tick.value);const context=this.getContext(index);const optsAtIndex=grid.setContext(context);const optsAtIndexBorder=border.setContext(context);drawRadiusLine(this,optsAtIndex,offset,labelCount,optsAtIndexBorder);}});}if(angleLines.display){ctx.save();for(i=labelCount-1;i>=0;i--){const optsAtIndex=angleLines.setContext(this.getPointLabelContext(i));const{color,lineWidth}=optsAtIndex;if(!lineWidth||!color){continue;}ctx.lineWidth=lineWidth;ctx.strokeStyle=color;ctx.setLineDash(optsAtIndex.borderDash);ctx.lineDashOffset=optsAtIndex.borderDashOffset;offset=this.getDistanceFromCenterForValue(opts.ticks.reverse?this.min:this.max);position=this.getPointPosition(i,offset);ctx.beginPath();ctx.moveTo(this.xCenter,this.yCenter);ctx.lineTo(position.x,position.y);ctx.stroke();}ctx.restore();}}drawBorder(){}drawLabels(){const ctx=this.ctx;const opts=this.options;const tickOpts=opts.ticks;if(!tickOpts.display){return;}const startAngle=this.getIndexAngle(0);let offset,width;ctx.save();ctx.translate(this.xCenter,this.yCenter);ctx.rotate(startAngle);ctx.textAlign='center';ctx.textBaseline='middle';this.ticks.forEach((tick,index)=>{if(index===0&&this.min>=0&&!opts.reverse){return;}const optsAtIndex=tickOpts.setContext(this.getContext(index));const tickFont=toFont(optsAtIndex.font);offset=this.getDistanceFromCenterForValue(this.ticks[index].value);if(optsAtIndex.showLabelBackdrop){ctx.font=tickFont.string;width=ctx.measureText(tick.label).width;ctx.fillStyle=optsAtIndex.backdropColor;const padding=toPadding(optsAtIndex.backdropPadding);ctx.fillRect(-width/2-padding.left,-offset-tickFont.size/2-padding.top,width+padding.width,tickFont.size+padding.height);}renderText(ctx,tick.label,0,-offset,tickFont,{color:optsAtIndex.color,strokeColor:optsAtIndex.textStrokeColor,strokeWidth:optsAtIndex.textStrokeWidth});});ctx.restore();}drawTitle(){}}RadialLinearScale.id='radialLinear';RadialLinearScale.defaults={display:true,animate:true,position:'chartArea',angleLines:{display:true,lineWidth:1,borderDash:[],borderDashOffset:0.0},grid:{circular:false},startAngle:0,ticks:{showLabelBackdrop:true,callback:Ticks.formatters.numeric},pointLabels:{backdropColor:undefined,backdropPadding:2,display:true,font:{size:10},callback(label){return label;},padding:5,centerPointLabels:false}};RadialLinearScale.defaultRoutes={'angleLines.color':'borderColor','pointLabels.color':'color','ticks.color':'color'};RadialLinearScale.descriptors={angleLines:{_fallback:'grid'}};const INTERVALS={millisecond:{common:true,size:1,steps:1000},second:{common:true,size:1000,steps:60},minute:{common:true,size:60000,steps:60},hour:{common:true,size:3600000,steps:24},day:{common:true,size:86400000,steps:30},week:{common:false,size:604800000,steps:4},month:{common:true,size:2.628e9,steps:12},quarter:{common:false,size:7.884e9,steps:4},year:{common:true,size:3.154e10}};const UNITS=/* #__PURE__ */Object.keys(INTERVALS);function sorter(a,b){return a-b;}function parse(scale,input){if(isNullOrUndef(input)){return null;}const adapter=scale._adapter;const{parser,round,isoWeekday}=scale._parseOpts;let value=input;if(typeof parser==='function'){value=parser(value);}if(!isNumberFinite(value)){value=typeof parser==='string'?adapter.parse(value,parser):adapter.parse(value);}if(value===null){return null;}if(round){value=round==='week'&&(isNumber(isoWeekday)||isoWeekday===true)?adapter.startOf(value,'isoWeek',isoWeekday):adapter.startOf(value,round);}return+value;}function determineUnitForAutoTicks(minUnit,min,max,capacity){const ilen=UNITS.length;for(let i=UNITS.indexOf(minUnit);i<ilen-1;++i){const interval=INTERVALS[UNITS[i]];const factor=interval.steps?interval.steps:Number.MAX_SAFE_INTEGER;if(interval.common&&Math.ceil((max-min)/(factor*interval.size))<=capacity){return UNITS[i];}}return UNITS[ilen-1];}function determineUnitForFormatting(scale,numTicks,minUnit,min,max){for(let i=UNITS.length-1;i>=UNITS.indexOf(minUnit);i--){const unit=UNITS[i];if(INTERVALS[unit].common&&scale._adapter.diff(max,min,unit)>=numTicks-1){return unit;}}return UNITS[minUnit?UNITS.indexOf(minUnit):0];}function determineMajorUnit(unit){for(let i=UNITS.indexOf(unit)+1,ilen=UNITS.length;i<ilen;++i){if(INTERVALS[UNITS[i]].common){return UNITS[i];}}}function addTick(ticks,time,timestamps){if(!timestamps){ticks[time]=true;}else if(timestamps.length){const{lo,hi}=_lookup(timestamps,time);const timestamp=timestamps[lo]>=time?timestamps[lo]:timestamps[hi];ticks[timestamp]=true;}}function setMajorTicks(scale,ticks,map,majorUnit){const adapter=scale._adapter;const first=+adapter.startOf(ticks[0].value,majorUnit);const last=ticks[ticks.length-1].value;let major,index;for(major=first;major<=last;major=+adapter.add(major,1,majorUnit)){index=map[major];if(index>=0){ticks[index].major=true;}}return ticks;}function ticksFromTimestamps(scale,values,majorUnit){const ticks=[];const map={};const ilen=values.length;let i,value;for(i=0;i<ilen;++i){value=values[i];map[value]=i;ticks.push({value,major:false});}return ilen===0||!majorUnit?ticks:setMajorTicks(scale,ticks,map,majorUnit);}class TimeScale extends Scale{constructor(props){super(props);this._cache={data:[],labels:[],all:[]};this._unit='day';this._majorUnit=undefined;this._offsets={};this._normalized=false;this._parseOpts=undefined;}init(scaleOpts){let opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const time=scaleOpts.time||(scaleOpts.time={});const adapter=this._adapter=new adapters._date(scaleOpts.adapters.date);adapter.init(opts);mergeIf(time.displayFormats,adapter.formats());this._parseOpts={parser:time.parser,round:time.round,isoWeekday:time.isoWeekday};super.init(scaleOpts);this._normalized=opts.normalized;}parse(raw,index){if(raw===undefined){return null;}return parse(this,raw);}beforeLayout(){super.beforeLayout();this._cache={data:[],labels:[],all:[]};}determineDataLimits(){const options=this.options;const adapter=this._adapter;const unit=options.time.unit||'day';let{min,max,minDefined,maxDefined}=this.getUserBounds();function _applyBounds(bounds){if(!minDefined&&!isNaN(bounds.min)){min=Math.min(min,bounds.min);}if(!maxDefined&&!isNaN(bounds.max)){max=Math.max(max,bounds.max);}}if(!minDefined||!maxDefined){_applyBounds(this._getLabelBounds());if(options.bounds!=='ticks'||options.ticks.source!=='labels'){_applyBounds(this.getMinMax(false));}}min=isNumberFinite(min)&&!isNaN(min)?min:+adapter.startOf(Date.now(),unit);max=isNumberFinite(max)&&!isNaN(max)?max:+adapter.endOf(Date.now(),unit)+1;this.min=Math.min(min,max-1);this.max=Math.max(min+1,max);}_getLabelBounds(){const arr=this.getLabelTimestamps();let min=Number.POSITIVE_INFINITY;let max=Number.NEGATIVE_INFINITY;if(arr.length){min=arr[0];max=arr[arr.length-1];}return{min,max};}buildTicks(){const options=this.options;const timeOpts=options.time;const tickOpts=options.ticks;const timestamps=tickOpts.source==='labels'?this.getLabelTimestamps():this._generate();if(options.bounds==='ticks'&&timestamps.length){this.min=this._userMin||timestamps[0];this.max=this._userMax||timestamps[timestamps.length-1];}const min=this.min;const max=this.max;const ticks=_filterBetween(timestamps,min,max);this._unit=timeOpts.unit||(tickOpts.autoSkip?determineUnitForAutoTicks(timeOpts.minUnit,this.min,this.max,this._getLabelCapacity(min)):determineUnitForFormatting(this,ticks.length,timeOpts.minUnit,this.min,this.max));this._majorUnit=!tickOpts.major.enabled||this._unit==='year'?undefined:determineMajorUnit(this._unit);this.initOffsets(timestamps);if(options.reverse){ticks.reverse();}return ticksFromTimestamps(this,ticks,this._majorUnit);}afterAutoSkip(){if(this.options.offsetAfterAutoskip){this.initOffsets(this.ticks.map(tick=>+tick.value));}}initOffsets(){let timestamps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let start=0;let end=0;let first,last;if(this.options.offset&&timestamps.length){first=this.getDecimalForValue(timestamps[0]);if(timestamps.length===1){start=1-first;}else{start=(this.getDecimalForValue(timestamps[1])-first)/2;}last=this.getDecimalForValue(timestamps[timestamps.length-1]);if(timestamps.length===1){end=last;}else{end=(last-this.getDecimalForValue(timestamps[timestamps.length-2]))/2;}}const limit=timestamps.length<3?0.5:0.25;start=_limitValue(start,0,limit);end=_limitValue(end,0,limit);this._offsets={start,end,factor:1/(start+1+end)};}_generate(){const adapter=this._adapter;const min=this.min;const max=this.max;const options=this.options;const timeOpts=options.time;const minor=timeOpts.unit||determineUnitForAutoTicks(timeOpts.minUnit,min,max,this._getLabelCapacity(min));const stepSize=valueOrDefault(options.ticks.stepSize,1);const weekday=minor==='week'?timeOpts.isoWeekday:false;const hasWeekday=isNumber(weekday)||weekday===true;const ticks={};let first=min;let time,count;if(hasWeekday){first=+adapter.startOf(first,'isoWeek',weekday);}first=+adapter.startOf(first,hasWeekday?'day':minor);if(adapter.diff(max,min,minor)>100000*stepSize){throw new Error(min+' and '+max+' are too far apart with stepSize of '+stepSize+' '+minor);}const timestamps=options.ticks.source==='data'&&this.getDataTimestamps();for(time=first,count=0;time<max;time=+adapter.add(time,stepSize,minor),count++){addTick(ticks,time,timestamps);}if(time===max||options.bounds==='ticks'||count===1){addTick(ticks,time,timestamps);}return Object.keys(ticks).sort(sorter).map(x=>+x);}getLabelForValue(value){const adapter=this._adapter;const timeOpts=this.options.time;if(timeOpts.tooltipFormat){return adapter.format(value,timeOpts.tooltipFormat);}return adapter.format(value,timeOpts.displayFormats.datetime);}format(value,format){const options=this.options;const formats=options.time.displayFormats;const unit=this._unit;const fmt=format||formats[unit];return this._adapter.format(value,fmt);}_tickFormatFunction(time,index,ticks,format){const options=this.options;const formatter=options.ticks.callback;if(formatter){return callback(formatter,[time,index,ticks],this);}const formats=options.time.displayFormats;const unit=this._unit;const majorUnit=this._majorUnit;const minorFormat=unit&&formats[unit];const majorFormat=majorUnit&&formats[majorUnit];const tick=ticks[index];const major=majorUnit&&majorFormat&&tick&&tick.major;return this._adapter.format(time,format||(major?majorFormat:minorFormat));}generateTickLabels(ticks){let i,ilen,tick;for(i=0,ilen=ticks.length;i<ilen;++i){tick=ticks[i];tick.label=this._tickFormatFunction(tick.value,i,ticks);}}getDecimalForValue(value){return value===null?NaN:(value-this.min)/(this.max-this.min);}getPixelForValue(value){const offsets=this._offsets;const pos=this.getDecimalForValue(value);return this.getPixelForDecimal((offsets.start+pos)*offsets.factor);}getValueForPixel(pixel){const offsets=this._offsets;const pos=this.getDecimalForPixel(pixel)/offsets.factor-offsets.end;return this.min+pos*(this.max-this.min);}_getLabelSize(label){const ticksOpts=this.options.ticks;const tickLabelWidth=this.ctx.measureText(label).width;const angle=toRadians(this.isHorizontal()?ticksOpts.maxRotation:ticksOpts.minRotation);const cosRotation=Math.cos(angle);const sinRotation=Math.sin(angle);const tickFontSize=this._resolveTickFontOptions(0).size;return{w:tickLabelWidth*cosRotation+tickFontSize*sinRotation,h:tickLabelWidth*sinRotation+tickFontSize*cosRotation};}_getLabelCapacity(exampleTime){const timeOpts=this.options.time;const displayFormats=timeOpts.displayFormats;const format=displayFormats[timeOpts.unit]||displayFormats.millisecond;const exampleLabel=this._tickFormatFunction(exampleTime,0,ticksFromTimestamps(this,[exampleTime],this._majorUnit),format);const size=this._getLabelSize(exampleLabel);const capacity=Math.floor(this.isHorizontal()?this.width/size.w:this.height/size.h)-1;return capacity>0?capacity:1;}getDataTimestamps(){let timestamps=this._cache.data||[];let i,ilen;if(timestamps.length){return timestamps;}const metas=this.getMatchingVisibleMetas();if(this._normalized&&metas.length){return this._cache.data=metas[0].controller.getAllParsedValues(this);}for(i=0,ilen=metas.length;i<ilen;++i){timestamps=timestamps.concat(metas[i].controller.getAllParsedValues(this));}return this._cache.data=this.normalize(timestamps);}getLabelTimestamps(){const timestamps=this._cache.labels||[];let i,ilen;if(timestamps.length){return timestamps;}const labels=this.getLabels();for(i=0,ilen=labels.length;i<ilen;++i){timestamps.push(parse(this,labels[i]));}return this._cache.labels=this._normalized?timestamps:this.normalize(timestamps);}normalize(values){return _arrayUnique(values.sort(sorter));}}TimeScale.id='time';TimeScale.defaults={bounds:'data',adapters:{},time:{parser:false,unit:false,round:false,isoWeekday:false,minUnit:'millisecond',displayFormats:{}},ticks:{source:'auto',callback:false,major:{enabled:false}}};function interpolate(table,val,reverse){let lo=0;let hi=table.length-1;let prevSource,nextSource,prevTarget,nextTarget;if(reverse){if(val>=table[lo].pos&&val<=table[hi].pos){({lo,hi}=_lookupByKey(table,'pos',val));}({pos:prevSource,time:prevTarget}=table[lo]);({pos:nextSource,time:nextTarget}=table[hi]);}else{if(val>=table[lo].time&&val<=table[hi].time){({lo,hi}=_lookupByKey(table,'time',val));}({time:prevSource,pos:prevTarget}=table[lo]);({time:nextSource,pos:nextTarget}=table[hi]);}const span=nextSource-prevSource;return span?prevTarget+(nextTarget-prevTarget)*(val-prevSource)/span:prevTarget;}class TimeSeriesScale extends TimeScale{constructor(props){super(props);this._table=[];this._minPos=undefined;this._tableRange=undefined;}initOffsets(){const timestamps=this._getTimestampsForTable();const table=this._table=this.buildLookupTable(timestamps);this._minPos=interpolate(table,this.min);this._tableRange=interpolate(table,this.max)-this._minPos;super.initOffsets(timestamps);}buildLookupTable(timestamps){const{min,max}=this;const items=[];const table=[];let i,ilen,prev,curr,next;for(i=0,ilen=timestamps.length;i<ilen;++i){curr=timestamps[i];if(curr>=min&&curr<=max){items.push(curr);}}if(items.length<2){return[{time:min,pos:0},{time:max,pos:1}];}for(i=0,ilen=items.length;i<ilen;++i){next=items[i+1];prev=items[i-1];curr=items[i];if(Math.round((next+prev)/2)!==curr){table.push({time:curr,pos:i/(ilen-1)});}}return table;}_generate(){const min=this.min;const max=this.max;let timestamps=super.getDataTimestamps();if(!timestamps.includes(min)||!timestamps.length){timestamps.splice(0,0,min);}if(!timestamps.includes(max)||timestamps.length===1){timestamps.push(max);}return timestamps.sort((a,b)=>a-b);}_getTimestampsForTable(){let timestamps=this._cache.all||[];if(timestamps.length){return timestamps;}const data=this.getDataTimestamps();const label=this.getLabelTimestamps();if(data.length&&label.length){timestamps=this.normalize(data.concat(label));}else{timestamps=data.length?data:label;}timestamps=this._cache.all=timestamps;return timestamps;}getDecimalForValue(value){return(interpolate(this._table,value)-this._minPos)/this._tableRange;}getValueForPixel(pixel){const offsets=this._offsets;const decimal=this.getDecimalForPixel(pixel)/offsets.factor-offsets.end;return interpolate(this._table,decimal*this._tableRange+this._minPos,true);}}TimeSeriesScale.id='timeseries';TimeSeriesScale.defaults=TimeScale.defaults;var scales=/*#__PURE__*/Object.freeze({__proto__:null,CategoryScale:CategoryScale,LinearScale:LinearScale,LogarithmicScale:LogarithmicScale,RadialLinearScale:RadialLinearScale,TimeScale:TimeScale,TimeSeriesScale:TimeSeriesScale});const registerables=[controllers,elements,plugins,scales];export{Animation,Animations,ArcElement,BarController,BarElement,BasePlatform,BasicPlatform,BubbleController,CategoryScale,Chart,plugin_colors as Colors,DatasetController,plugin_decimation as Decimation,DomPlatform,DoughnutController,Element,index as Filler,Interaction,plugin_legend as Legend,LineController,LineElement,LinearScale,LogarithmicScale,PieController,PointElement,PolarAreaController,RadarController,RadialLinearScale,Scale,ScatterController,plugin_subtitle as SubTitle,Ticks,TimeScale,TimeSeriesScale,plugin_title as Title,plugin_tooltip as Tooltip,adapters as _adapters,_detectPlatform,animator,controllers,defaults,elements,layouts,plugins,registerables,registry,scales};","map":{"version":3,"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","arguments","length","Date","now","remaining","running","items","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","new","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","_ref","inflateAmount","BarController","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","defaultRoutes","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","_len11","scaleOptions","_key11","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","parseBorderRadius","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_ref5","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","_ref7","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","_ref8","minExp","exp","significand","lastTick","LogarithmicScale","_zero","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.animator.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.animation.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.animations.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.datasetController.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.bar.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.bubble.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.doughnut.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.line.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.polarArea.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.pie.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.radar.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/controllers/controller.scatter.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.adapters.ts","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.interaction.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.layouts.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/platform/platform.base.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/platform/platform.basic.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/platform/platform.dom.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/platform/index.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.element.ts","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.scale.autoskip.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.scale.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.typedRegistry.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.registry.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.plugins.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.config.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/core/core.controller.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/elements/element.arc.ts","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/elements/element.line.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/elements/element.point.ts","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/elements/element.bar.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.colors.ts","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.decimation.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.filler/index.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.legend.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.title.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.subtitle.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/plugins/plugin.tooltip.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/scales/scale.category.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/scales/scale.linearbase.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/scales/scale.linear.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/scales/scale.logarithmic.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/scales/scale.radialLinear.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/scales/scale.time.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/scales/scale.timeseries.js","/Users/theodiloreto/Desktop/examen 5 3/jo/src/node_modules/chart.js/src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}