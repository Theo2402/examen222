{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,adminOnly}=_ref;const{user}=useAuth();console.log('ProtectedRoute called, user:',user);if(user===null){console.log('No user, navigating to login');return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(adminOnly&&!user.is_admin){console.log('User is not admin, navigating to home');return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","adminOnly","user","console","log","to","is_admin"],"sources":["/Users/theodiloreto/Desktop/examen 5 3/jo/src/routing/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, adminOnly }) => {\n  const { user } = useAuth();\n\n  console.log('ProtectedRoute called, user:', user);\n\n  if (user === null) {\n    console.log('No user, navigating to login');\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (adminOnly && !user.is_admin) {\n    console.log('User is not admin, navigating to home');\n    return <Navigate to=\"/\" />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAA6B,IAA5B,CAAEC,QAAQ,CAAEC,SAAU,CAAC,CAAAF,IAAA,CAC7C,KAAM,CAAEG,IAAK,CAAC,CAAGP,OAAO,CAAC,CAAC,CAE1BQ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEF,IAAI,CAAC,CAEjD,GAAIA,IAAI,GAAK,IAAI,CAAE,CACjBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3C,mBAAOP,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,GAAIJ,SAAS,EAAI,CAACC,IAAI,CAACI,QAAQ,CAAE,CAC/BH,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACpD,mBAAOP,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,GAAG,CAAE,CAAC,CAC5B,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}